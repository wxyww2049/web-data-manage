[
    {
        "url": "https://www.nowcoder.com/discuss/603640656749154304?sourceSSR=users",
        "title": "2024-3-30 网易雷火笔试题题解(A~C)",
        "content": "一小时写了A~C 剩下两小时没调出D的 最后D还是0分\n\n# A\n\n## 题目描述\n\n### 网易在从两年前开始对司龄1，3，6，10年的员工发纪念积木，今年决定补发以前没有补发的积木，问还各个类型的积木需要多少个\n\n## 输入描述：\n\n### 第一行输入一个N （1<=N<=10000）,表示雷火的员工数量。\n\n###\n\n### 接下来一行是N个整数(1<=司龄<=20)，表示每个员工今年达到的司龄。\n\n## 思路:\n\n### 暴力特判前两年有没有发过那几个奖品\n\n## 代码：\n\n    \n    \n    #include<iostream>\n    #include<cstdio>\n    #include<cstring>\n    #include<cmath>\n    using namespace std;\n    \n    #define _for(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)\n    int cnt[4];\n    int main(void)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        _for(i,1,n)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            if(x>=1) cnt[0]++;\n            if(x>=3) cnt[1]++;\n            if(x>=6) cnt[2]++;\n            if(x>=10) cnt[3]++;\n            if(x-1==1) cnt[0]--;\n            if(x-1==3) cnt[1]--;\n            if(x-1==6) cnt[2]--;\n            if(x-1==10) cnt[3]--;\n            if(x-2==1) cnt[0]--;\n            if(x-2==3) cnt[1]--;\n            if(x-2==6) cnt[2]--;\n            if(x-2==10) cnt[3]--;\n        }\n        _for(i,0,3) printf(\"%d \",cnt[i]);\n    }\n    \n\n## B:(O(NlogN)解法)\n\n## 题目描述：\n\n### 初始有一个长度为1的文本，我们可以采用Ctrl A全选文本，Ctrl S选中单个文本，Ctrl C复制文本,Ctrl\nV粘贴文本，问给n个k，对于每个k得到一个长度为k的文本至少需要多少次。\n\n## 思路：\n\n###\n当我们得到一个长度为x的串后，我们可以通过该串全选一次，复制一次，然后粘贴若干次后，去更新其他值（该部分时间复杂度与欧拉常数有关，总体复杂度为O(nlogn)），也可以通过该数字，选中单个文本一次，复制一次，粘贴若干次，去更新其他值(由于更新条件是dp[r]-dp[l]>r-l+2，因此可以构造val[x]=dp[x]-x，因此，我们可以维护val[x]的最小值mn，当val[i]>mn+2时，我们可以将dp[i]更新为mn+2+i，由于对于数组每个元素，可以O(1)求解，该部分的时间复杂度为O(n))。综上，总体复杂度为O(n)，（复杂度中与n表示数据范围）\n\n## 代码：\n\n    \n    \n    #include<iostream>\n    #include<cstdio>\n    #include<cstring>\n    #include<cmath>\n    using namespace std;\n    \n    #define _for(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)\n    const int lim=16384;\n    int dp[lim];\n    int val[lim];\n    inline void funct()\n    {\n        memset(dp,1,sizeof(dp));\n        dp[1]=0;\n        int mn=1000000000;\n        for(int i=1;i<lim;i++)\n        {\n            dp[i]=min(dp[i],mn+2+i);\n            val[i]=dp[i]-i;\n            mn=min(val[i],mn);\n            for(int j=i+i,cnt=3;j<lim;j+=i,++cnt)\n            {\n                dp[j]=min(dp[i]+cnt,dp[j]);\n            }\n        }\n    }\n    int main(void)\n    {\n        int T;\n        scanf(\"%d\",&T);\n        funct();\n        // _for(i,1,16) printf(\"%d: %d\\n\",i,dp[i]);\n        while(T--)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            printf(\"%d\\n\",dp[x]);\n        }\n    }\n    \n\n## C\n\n## 题目简述：\n\n###\n有一个战斗力为p的玩家，以及一个n个怪物（怪物按战斗力正序输入），m个BOSS，可以耗费1cost，击败一个战斗力小于自己的非BOSS怪物，然后获得该怪物的战斗力，也可以耗费1cost,使得自己的战斗加上p/10，问，对于每个BOSS，如果需要击败该BOSS，需要消耗几cost\n\n## 思路：\n\n###\n将能打过的所有怪物存入优先队列中，每次战斗力更新后，是否有新增可打败怪物，倘若有则更新可以战胜怪物列表。给BOSS存入优先队列（小根堆）中，当队列顶的BOSS不能打败时，考虑如何提升战斗力，为了使提升的战斗力最大化，我们可以看可战胜怪物中战斗力最高的怪物与p/10谁大，去决定打怪物还是让自己战斗加上p/10。直到所有BOSS的结果都计算出为止\n\n    \n    \n    #include<iostream>\n    #include<cstdio>\n    #include<cstring>\n    #include<cmath>\n    #include<queue>\n    using namespace std;\n    \n    #define _for(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)\n    \n    #define MAXN 100050\n    int monster[MAXN];\n    int ans[MAXN];\n    class node\n    {\n    public:\n        int request,id,ans;\n        node(int _request,int _id)\n        {\n            request=_request;\n            id=_id;\n            ans=0;\n        }\n        bool operator <(const node& b)const&\n        {\n            return b.request<request;\n        }\n    };\n    priority_queue<node> BOSS_queue;\n    priority_queue<int> monster_queue;\n    int p,n,m;\n    inline void update_monster_queue(int &place,int x)\n    {\n        for(place;place<=n&&monster[place]<x;place++)\n        {\n            monster_queue.push(monster[place]);\n        }\n    }\n    int main(void)\n    {\n        scanf(\"%d%d%d\",&p,&n,&m);\n        \n        _for(i,1,n)\n        {\n            scanf(\"%d\",&monster[i]);\n        }\n        _for(i,1,m)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            BOSS_queue.push(node(x+1,i));\n        }\n        int place=1;\n        int cnt=0;\n        update_monster_queue(place,p);\n        while(!BOSS_queue.empty())\n        {\n            node now_BOSS=BOSS_queue.top();\n            printf(\"%d %d\\n\",now_BOSS.id,now_BOSS.request);\n            while(p<now_BOSS.request)\n            {\n                ++cnt;\n                if(!monster_queue.empty()&&monster_queue.top()>p/10)\n                {\n                    p+=monster_queue.top();\n                    monster_queue.pop();\n                }\n                else\n                {\n                    p+=p/10;\n                }\n                update_monster_queue(place,p);\n            }\n            ans[now_BOSS.id]=cnt;\n            BOSS_queue.pop();\n        }\n        _for(i,1,m)\n        {\n            printf(\"%d\\n\",ans[i]);\n        }\n    }\n    \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603639768454348800?sourceSSR=users",
        "title": "网易雷火笔试 游戏研发工程师 暑假实习",
        "content": "前言：来体验体验猪厂难度，我花这时间来坐牢的属于是。。。\n\n第一题：给员工发牌子，题意半天没弄懂，我的做法是处理好工龄小于等于12的就行，大于12的都一样。AC\n\n第二题：最小操作拿到一个字符串，我贪心写的，一WA入魂。正解思路应该是dp，不知道怎么写状态转移\n\n第三题：怎么打怪物升战力，用最少次数去打败boss。个人思路是贪心，过了6.67，寄！\n\n第四题：模拟永劫无间的游戏玩法，大模拟，狗都不看。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603636072093872128?sourceSSR=users",
        "title": "腾讯 Java 一面",
        "content": "感觉基本寄\n\n实习基地开始投的，一直没被捞，最近无聊刷了几次，突然3.26给捞了，约的3.30面试\n\n最近基本上在看新项目，根本没看其他的，突然给捞措不及防，但是基本上没怎么问八股，不知道什么情况\n\n一面 （40min）\n\n1、自我介绍\n\n2、做题 最小路径和，要求输出路径（最小和直接秒了，但是输出路径太久没写给忘了，感觉还是太紧张了[牛泪]，也是太菜了）\n\n3、缓存击穿，解决方案怎么选型。（基础八股）\n\n4、websocket在分布式服务中，如何实现使用（不会，只准备了为什么有http还要用websocket）\n\n5、限流方式了解那些 （嘴了一下Redis的zset+时间窗口，和令牌桶）\n\n6、MySQL分库分表有没有使用过（有点宕机只说了解过没有使用过就没继续说了，感觉应该多说点的）\n\n7、平时如何学习技术\n\n8、比赛中担任什么职责\n\n9、对大模型有什么看法，平时有使用吗\n\n10、反问：什么部门（好像说是HR部门负责招聘网站之类的？），技术栈。。。\n\n除了一个小厂这是第二次面试，还是很紧张，发挥的很差，感觉多半是寄了[牛泪]\n\n附上当时投递的简历，说实话感觉这简历挺糟糕的，本来以为都沉了，没想到这都给捞了，不知道是不是KPI之类的\n\n![](https://uploadfiles.nowcoder.com/images/20240330/994329650_1711790025486/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603634113202978816?sourceSSR=users",
        "title": "英文输入法 - 华为OD统一考试(C卷)",
        "content": "> OD统一考试（C卷）\n>\n> 分值： 100分\n>\n> 题解： Java / Python / C++\n\n![alt](https://uploadfiles.nowcoder.com/images/20231201/644248237_1701399029315/A4F5E48572027B66E6ECFA2EF0A7C66A)\n\n## 题目描述\n\n主管期望你来实现英文输入法单词联想功能。需求如下:\n\n依据用户输入的单词前缀，从已输入的英文语句中联想出用户想输入的单词，按字典序输出联想到的单词序列，如果联想不到，请输出用户输入的单词前缀。\n\n注意：\n\n1，英文单词联想时，区分大小写\n\n2，缩略形式如\"don’t”，判定为两个单词，\"don“和\"t“\n\n3，输出的单词序列，不能有重复单词，且只能是英文单词，不能有标点符号\n\n## 输入描述\n\n输入为两行，\n\n首行输入一段由英文单词word和标点符号组成的语句str；\n\n接下来一行为一个英文单词前缀pre\n\n0 < word.length() ⩽ 20\n\n0 < str.length() ⩽ 1000\n\n0 < pre ⩽ 20\n\n## 输出描述\n\n输出符合要求的单词序列或单词前缀，存在多个时，单词之间以单个空格分割；\n\n## 示例1\n\n    \n    \n    输入：\n    I love you\n    He\n    \n    输出：\n    He\n    \n    说明：\n    从用户已输入英文语句\"l love you”中提炼出“I”、“love”、“you”三个单词，接下来用户输入”He”，从已输入信息中无法联想到任何符合要求的单词，因此输出用户输入的单词前缀.\n    \n\n## 示例2\n\n    \n    \n    输入：\n    The furthest distance in the world, ls not between life and death, But when I stand in front of you, Yet you don't know that I love you.\n    f\n    \n    输出：\n    front furthest\n    \n    说明：\n    从用启已输入英文语句\"The furthest distance in the world, Is notbetween life and death, But when I stand in frontof you, Yet youdontknow that I love you\"中提炼出的单词，符合\"f\"作为前缀的有\"furthest\"和\"front\"，按字典序排序并在单词间添加空格后输出,结果为“front furthest\"\n    \n\n## 题解\n\n> 这道题目的主要任务是根据输入的英文语句和单词前缀，联想出用户想输入的单词，并按字典序输出联想到的单词序列。如果联想不到，就输出用户输入的单词前缀。\n>\n>\n> 主要思路是按照输入的英文语句，提取出其中的单词，并使用一个集合（set）来存储这些单词。然后根据用户输入的单词前缀，在集合中找到符合条件的单词，并按字典序排序输出。\n>\n> 关键点包括：\n>\n>   1. 判断是否为字母：使用 `isalpha` 函数来判断一个字符是否为字母。\n>   2. 分割单词：遍历输入的英文语句，将字母逐个添加到临时字符串中，遇到非字母则将临时字符串作为一个单词加入集合，并清空临时字符串。\n>   3. 使用集合存储单词：使用 `set` 来存储提取出的单词，确保不会有重复单词。\n>   4. 在集合中查找符合前缀的单词：使用 `startswith` 方法（Python）或 `compare`\n> 方法（C++）来判断单词是否以给定的前缀开头。\n>   5. 按字典序输出：对符合条件的单词进行排序，并输出。\n>\n\n### Java\n\n    \n    \n    import java.util.ArrayList;\n    import java.util.Scanner;\n    import java.util.Set;\n    import java.util.TreeSet;\n    \n    /**\n     * @author code5bug\n     */\n    public class Main {\n    \n        public sta\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603627497422422016?sourceSSR=users",
        "title": "MetaAPP笔试复盘（我真的很菜，还有1/3多没做完）",
        "content": "**笔试一共三道编程题（1.5小时内完成），每一道编程题有三小问，每一小问的结果作为下一小问的输入参数**\n\n题目难度是简单，没有什么弯弯绕绕的算法题，都是常规性的操作。\n\n第一题：（1）输入一个数，计算这个数字各位的和，如果和为个位数则返回，否则在再对和计算各位和，直到最终各位和为个位数，返回这个个位数，写代码的时候发现自己有点忘了“/”是不是向下取整了；\n\n（2）对输入的整数寻找约数，并把约数从大到小排列，大于8个约数只返回最大的8个，返回一个数组。我用了插入排序，差点就想着用快排了，好猪，，不过想到快排的时候出了一手冷汗，因为发现忘了快排怎么写；\n\n（3）输入一个数组，如果数组长度大于或等于33，则返回第33个元素；如果数组长度大于或等于33/2，则返回第33/2个元素；如果数组长度大于或等于33/4，则返回第33/4个元素；以此类推……，就很简单的选择分支结构，if\nelse if\nelse就过去了，不知道有没有更简单的方法，还是说可以用Switch（我真不熟这个）。我觉得这道题戳中我的地方在于，怎么判断数组的长度，因为我第二问是直接定义10000长度的数组，所以在第三问用的是if((nums+33))，如果不是NULL，那就说明数组长度有33，不知道这样对不对。看来还是得学点c++，我记得c++好像有函数是可以直接调用获取数组长度的，可是想我这样定义，获取到的长度是不是10000啊。。。所以这题对我来说主要的难点是，，怎么获取数组长度。\n\n第二题：（1）跟第一题（1）一样\n\n（2）输入一个整数，求这个整数的八进制，用数组表示并返回\n\n（3）这个有点难，输入一个数组，把数组的元素编号视为小朋友们，编号从1开始，每次叫到5的离开，再从下一位开始叫1；这样子反复，请问最后一位离开的元素是？这个难，因为，，好像也不难。现在的想法是用循环链表来做，在给每个节点多加一个属性叫“在/不在”来标识元素是否已离开，一直取未离开的节点数到第五个踢开，再用一个int统计一下踢走的数量，踢走n-1个元素的时候就返回，，但感觉是很笨很直接的方法。\n\n第三题，没来得及看，，，害\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603622100598882304?sourceSSR=users",
        "title": "去哪儿产品运营凉经",
        "content": "是线下面试，下午一点开始，进去找到自己的面试官就可以开始了。\n\n一面：\n\n1.决策与统计学的区别在哪?\n\n2.提到了博弈论解释一下纳什均衡?\n\n3.描述在京东实习你们小组负责的是什么以及你负责的什么?\n\n4.介绍在以前的实习内容？\n\n5.你们是通过发券来获得用户，怎么衡量这个用户产生的价值呢?\n\n6.你出门旅游首先考虑的是什么因素?\n\n面试官老师很专业，很nice的，我当时有点紧张，面试官还安慰我，瞬间轻松很多。没多久就收到结果自己凉凉了，还是得好好复盘一下。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603618729640873984?sourceSSR=users",
        "title": "滴滴产品经理面筋",
        "content": "一面：\n\n1.个人自我介绍。\n\n2.第二段实习经历业务核心目标是什么？\n\n3.ctr的提升主要做了什么样的动作？\n\n4.个人会有sql能力如何，会基本取数吗？\n\n5.数据监控形式是如何的合作模式？\n\n6.业务上下游\n\n7.上下游对接的困难，怎么解决的？\n\n8.第一段实习主要是根据什么样需求的产品，商业模式？\n\n9.渠道投放是否有内部做一些增长产品呢？\n\n10.广告信息流投放的方式是怎么样的呢？\n\n11.日常监控某一渠道，如果线索量足够，但是线索的转化出现了问题，如果进行问题定位，划分的维度是怎么样的？\n\n12.针对渠道投放是否有监控看板，主要看什么类型的数据？\n\n13.某个增长渠道的首日转化率提高是由于什么动作进行的提高的？\n\n14.有无未来职业想法与规划？\n\n15.反问环节\n\n二面：\n\n1.个人自我介绍\n\n2.两端实习经历有什么样思考的差异？\n\n3.第二段实习经历的深挖，讲一个项目。\n\n4.信息流投放主要负责的内容\n\n5.是否用到产品能力来优化，还是以纯渠道本身作为抓手？\n\n6.你们是否考虑介入rta能力？\n\n7.反问环节\n\n希望可以帮助到各位牛友[赞][赞]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603617416949559296?sourceSSR=users",
        "title": "哔哩哔哩商业化市场实习面经",
        "content": "一面：\n\n1.自我介绍\n\n2.主要是深挖简历(遇到什么困难，有成就感的事等)\n\n3.对哔哩哔哩的了解\n\n4.哔哩哔哩跟别的平台有什么区别\n\n5.对商业化的理解\n\n6.前几段实习领导对你的评价\n\n7.反问环节\n\n整体面试体验感觉自己有被尊重，态度也nice。\n\nhr面：\n\n1.对之前说的工作是否清楚，请大概说一下\n\n2.商业化的必要性\n\n3.为什么来b站\n\n4.哔哩哔哩平时看什么分区\n\n5.什么时候入职，住的距离之类\n\n6.对公司和岗位有什么顾虑\n\n7.反问环节\n\n当天通知结果。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603615080533479424?sourceSSR=users",
        "title": "网易运营岗面筋",
        "content": "时间线：\n\n2023.12.20-12.22-12.25-12.26-2024.1.4\n\n面试问题整理：\n\n1.自我介绍\n\n2.你个人有什么优势和缺点？\n\n3.为什么选择这个职位选择的职位是短视频策划？\n\n4.对这个职位的理解?\n\n5.选择这个职位你觉得比较有挑战的事情是什么？\n\n6.一个爆款视频需要什么？\n\n7.在学校项目的过程中有什么收获？遇到什么问题？怎么解决的？有什么能够体现团队合作的事情？令你印象深刻的是什么？\n\n8.作品集相关问题，你在创作时候的思路，扮演的角色是什么，具体做了什么?\n\n9.有什么问题？\n\n总之不要紧张，需要熟悉自己的简历。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603611830736416768?sourceSSR=users",
        "title": "小红书娱乐营销岗面筋",
        "content": "时间线：\n\n2024.1.3（电话hr面）- 1.4（一面）- 1.5（二面）- 面试结束（hr面＋口头offer）\n\n面试问题复盘：\n\n一面：hr电话面（5分钟）\n\n1.自我介绍\n\n2.为什么想来小红书？\n\n3.什么时候可以到岗？\n\n4.理想城市和实习时长\n\n二面：业务一面（25分钟）\n\n1.深挖以前的经历\n\n2.各平台达人的区别？\n\n3.3-4月换季，兰蔻持妆粉底液需要在小红书上采买一波KOL，预算100万分配，请出一个具体的方案。（给了时间思考）\n\n4.思考品牌从平台采买达人和从广告公司采买达人有什么不同？\n\n5.反问环节\n\n三面：业务二面（15分钟）\n\n1.为什么想做市场或新媒体？\n\n2.深挖KOL采买经历，独自own了这个项目，有什么亮点，有什么不足可以改进？\n\n3.赞扬过往经历和岗位匹配度较高，不同点可能是会全链路、全行业接触品牌，了解品牌诉求完成匹配，最后到博主的落地执行。每一次采买都是这一套SOP，对待这样反复工作的接受程度？\n\n4\\. 有写过采买KOL的brief吗？一个比较清晰的brief应该包括什么内容？\n\n5.可以接受加班？\n\n6.需要实习生具备什么素质？\n\n7.反问环节\n\n面完最后口头提示给offer。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603605131879333888?sourceSSR=users",
        "title": "苏银消金凯基 校招 面经",
        "content": "9.11投 金融科技\n\n10.11 一面\n\n迟到30min才开始 离谱 不过面试官态度不错 懂得不少\n\n腾讯会议 约8人\n\n轮流自我介绍 轮流提问\n\n人均211硕以上 实习经历无大厂\n\n  * 实习介绍\n  * Docker k8s（docker底层不会）\n  * mysql索引结构\n  * 常见排序算法 稳定性\n  * 1亿数据存在小内存中（说了压缩和加机器 面试官说应该是xxmap 没学过）\n\n10.18约笔试 放弃了\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603595741046525952?sourceSSR=users",
        "title": "美团一二面面经，求oc求oc求oc",
        "content": "## 美团一二面\n\n## 3.25一面（1h）\n\n1、Java中的异常\n\n2、线程池用过吗，使用线程池考虑什么因素，线程池参数\n\n3、说一下Java中的集合\n\n4、遍历list有哪些方式？一边循环一边删除有什么问题？\n\n5、ArrayList的线程安全怎么实现\n\n6、equals方法和hasCode方法\n\n7、什么是线程安全？可见性指的是什么\n\n8、CAS有什么问题\n\n9、并发量比较大的话用悲观锁还是乐观锁\n\n10、HashMap在1.8的结构\n\n11、HTTP在七层中属于哪一层\n\n12、常见状态码有哪些\n\n13、请求方法有哪些？get、post，了解restful风格吗？说这个是因为没答全，还有delete。。。那些，如果要删除，一定要使用delete吗？\n\n14、TCP和UDP的区别？基于UDP还知道哪些协议\n\n15、为啥要三次握手，而不是两次\n\n16、TCP头中的标志位有哪些\n\n17、项目中碰到一些什么问题，怎么解决的？除了看日志有其他排查手段吗\n\n18、项目中用到redis分布式锁怎么理解的\n\n19、Redis中常见的数据类型有哪些，说底层数据结构的时候打断了问下一个问题了\n\n20、使用缓存的目的是什么？会有什么问题？\n\n21、Mysql的锁机制说一下\n\n22、数据库的乐观锁和悲观锁是怎么实现的\n\n23、慢查询怎么办\n\n24、explain显示出来的表格关注哪些关键字\n\n25、MYSQL中有哪些索引\n\n26、算法：https://leetcode.cn/problems/remove-duplicates-from-sorted-list-\nii/description/?envType=study-plan-v2&envId=top-interview-150（面试官提醒用一个指针优化\n\n一个小时后约了二面，28号二面\n\n## 3.28二面\n\n1、实习说下，前后端分别几个人\n\n2、（项目）\n\n  * 登录这块用了RSA，和https中的RSA有什么区别\n  * 项目中遇到什么问题怎么解决\n  * 多节点调用的IP直接放在配置文件中吗，有没有别的办法\n  * 你对网关层的理解\n\n3、最近学的比较好的知识点\n\n4、mysql隔离级别，可重复读有什么问题，怎么解决\n\n5、慢查询怎么办\n\n6、对于一个新的知识点，怎么学习\n\n7、未来一两年的规划\n\n二面没有算法，半小时就面完了\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603592732237393920?sourceSSR=users",
        "title": "阿里巴巴 天猫国际 一面 （电话面试40min）",
        "content": "  1. 自我介绍\n  2. 介绍项目\n  3. 介绍一下Web Worker\n  4. 响应式适配\n  5. 为什么用tailwind，tailwind的特性\n  6. 什么是跨域，怎么解决\n  7. 哪些跨域方式支持post请求\n  8. vite为什么启动很快\n  9. 协作方式，git流程，rebase和merge的区别，rebase的缺点/风险\n  10. 项目首页优化方式，网络层面有什么优化方法\n  11. 浏览器缓存机制\n  12. HTTP 2.0\n  13. HTTP 和 HTTPS 的区别\n  14. hooks和class的区别（没用过class）\n  15. hooks的原理\n  16. 常用hooks\n  17. 讲一下useMemo\n  18. 用useState，useEffect实现useMemo\n  19. redux\n  20. vue了解吗，和react的区别\n  21. 同级组件通信，useContext怎么使用\n  22. 父组件用了context，context更新了值，子组件没用context，会重新渲染吗\n  23. 本地储存\n  24. 浏览器一定可以拿到cookie吗\n  25. CSS 预处理器，用过sass，less吗，这些东西是要解决什么问题\n  26. 哪些 CSS 渲染会引起浏览器重绘\n  27. visiblity:hidden会引起重绘吗\n  28. requestAnimationFrame和setTimeout的区别\n  29. 事件循环，微任务执行完后宏任务执行多少\n  30. 反问\n\n25号面试的，27笔试寄完了，现在还没结果。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603603735419318272?sourceSSR=users",
        "title": "虎牙 校招 面经/时间线",
        "content": "####\n\n8.28开\n\n9.4投 java\n\n##### 10.11一面\n\n40min\n\n  * 实习项目（技术链路、有哪些数据指标需要监控、技术选型）\n  * 一个服务与其下游依赖之间的吞吐量是由哪些因素决定的\n  * 怎么评估服务的峰值性能 如果用公式估算大概长什么样\n  * 在多线程加耗时的情况下吞吐量降低，怎么稳定（想考查异步编程模型，答的不好）\n  * threadlocal用时要注意什么\n  * 项目用的java版本是哪个 垃圾回收器是什么\n  * jvm的垃圾回收机制了解多少\n  * 排查jvm常用的命令有哪些 看gc频率用哪个（不太记得了）\n  * 分析jvm的开源工具用过吗比如Arthas，dump出来的类型文件会用哪些工具去分析（不会）\n  * 一系列服务内存有2g-16g不等，怎么使用jvm屏蔽不同规格的差异\n  * java异常类有哪些\n  * 编译时异常怎么处理\n  * 方法找不到异常可能的原因是什么（不会）\n  * 反问：985\n\n##### 10.13二面\n\n15min\n\n  * 如果要写一个rpc server要有哪些组件\n  * md5的加盐有什么用\n  * tcp连接中收到rst报文怎么办（不会）\n  * udp能够发送超过64k的数据吗（不会）\n  * 实习中提升最大的点\n  * 设计模式\n  * 建造者模式用过吗（没）\n  * 工厂和抽象工厂有什么区别\n  * 怎么查看所有的进程信息 线程信息\n  * java怎么启动线程 \n  * 底层怎么调度线程\n  * lamda表达式是在哪个java版本引入的（记不清了说了1.8之后）\n\n面试官态度很好 一直说没事没事\n\n##### 10.20三面\n\n30min\n\n面试官：leader\n\n  * 单体服务和微服务的区别 应用场景\n  * 为什么现在又提倡单体服务\n  * 对分布式的理解 有哪些特点\n  * 缓存有哪些 有什么作用 结合mysql怎么用 怎么保证一致性和持久性\n  * 实习\n  * mysql有什么高可用方案（主从、集群）\n  * 未来的学习计划\n  * 考研吗\n  * offer情况\n  * 反问：做哪块业务还不一定，可能是账号支付相关\n\n##### 11.9hr面\n\n30min\n\n  * 不读研吗 为什么\n  * offer情况 几个offer怎么排序（说了两个大厂 想让虎牙开高 可能最后他觉得我不会去了哈哈）\n  * 实习时候mentor对你的评价 横向对比其他实习生\n  * 实习最大的挑战 有向上级需求协助吗\n  * 实习的工作氛围\n  * 家乡 发展城市\n  * 父母对你的期望\n  * 虎牙有什么吸引你的点吗（面试官笑：说到底还是看重薪资）\n  * 反问：因为政策现在慢慢向游戏发展，可能跟股东腾讯的游戏方面有一些合作\n\n无消息\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603574662802468864?sourceSSR=users",
        "title": "蚂蚁一面",
        "content": "我现在精神状态很好\n\n**1.自我介绍**\n\n问了一些竞赛的情况\n\n**2.介绍项目**\n\n**3.后端分为了几个子模块，前端没有分吗**\n\n没分，扯了前端是OpenAPI生成接口然后拉取的别人的界面\n\n**4.interface模块到底是干什么用的，面试官没有听懂**\n\n又解释了一遍，可能我语言表达不太好。回头把项目流程再好好理一遍\n\n**5.API有注册的功能吗**\n\n暂时没有，真实的转发地址是在代码中写死的\n\n**6.面试官还是没有理解interface**\n\n**7.网关是什么作用**\n\n**8.流量染色具体是什么**\n\n**9.流量染色只是加了个请求头吗，有其他控制码（没有**\n\n**10.backend模块是干什么的**\n\n**11.API签名认证算法**\n\n我nm复盘的时候才发现他问的是签名认证，我就答了签名是怎么生成的\n\n**12.API网关遇到的问题，怎么解决的**\n\n过滤链的问题，用了装饰者模式解决\n\n**13.Redis怎么实现的分布式锁**\n\n我开始发散了，开始扯什么单点登录存session,然后定时任务用分布式锁报保证只执行一次\n\n然后被打断，说只说分布式锁就行\n\n**14.自己实现一个用MYSQL你会怎么做（原本背过，被问怎么优化，答得一坨。面试官耐心解释了**\n\n**15.线程安全**\n\n**16.为什么会有线程安全的问题（还没背到）**\n\n**17.synchronized和lock区别**\n\n**18.spring最大的特点**\n\n**19.IOC（答得一坨）**\n\n**20.解耦具体的优势（答得一坨）**\n\n**21.怎么理解控制反转（答得一坨）**\n\n**22.聚集索引和非聚集索引**\n\n**23.为什么非聚集索引是存id不存地址（答得一坨）**\n\n**24.select * from a >x and b=x怎么建立索引**\n\n（b.a）\n\n**25.数据库的事务隔离级别**\n\n扯到了MVCC\n\n**26.解释下MVCC**\n\n**27.看过框架源码吗，简单说说**\n\n我答得看过JUC的源码，因为确实也是只看过JUC\n\n叭叭半天被打断了说时间不够了\n\n**28.打印一个二叉树的结构，是那种真正的树的形状，有空格啊，换行啊之类的。**\n还没有编译器，相当于从0开始敲然后还相当于在白板上写，纯纯折腾人。项目八股50分钟，题目写了40分钟，面试官居然还有耐心一直看我写。好好好。写的一坨我就不详细说了\n\n**反问：**\n\n结果啥时候出？很快，下周一周二就出了（好好好，想直接挂我是吧）\n\n**总结：**\n我面到我就是赚到。面试官还是挺专业的，也很耐心，也很尊重人。又遇到了几个不会的八股，我血赚不亏。我现在强的可怕，我现在心态巨好，从现在开始，到第20场面试在我这里我全部默认不过。我直接不担心结果，我怕个鸡毛。这周末怎么没公司给我发笔试啊！！都在干什么！！你不发笔试我怎么面试！！不面试我怎么被挂！！！我狂投，我狂面，我狂挂！！还有哪些公司开岗了！！！我再去投！！！！！\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603569196827439104?sourceSSR=users",
        "title": "蚂蚁一面面经",
        "content": "**时间：3.28 19:00-20:00**\n\n**岗位：基础平台研发工程师-Golang/Python**\n\n**部门：平台技术事业群-超级计算技术部**\n\n**概述：1h，从项目到四大件，对OS考察较深，很多知识点需要融汇贯通，不然像我一样get不到考点**\n\n项目部署上线的问题\n\nDocker与虚拟机的区别\n\nk8s有哪些组件\n\n项目的令牌桶限流 压测\n\nRedis持久化，如何保证数据库缓存一致性\n\nRedis过期删除策略、定期删除默认检查间隔(10s)\n\nRedis Cluster模式\n\n项目MapReduce相关问题\n\nMySQL引擎、InnoDB和MyISAM区别\n\n大量插入下哪个引擎更好(MyISAM)\n\n四种事务隔离级别、可重复读MVCC、能解决幻读吗\n\n索引数据结构、为什么用B+树\n\n索引优化，全文索引\n\nTCP三次握手\n\n网络层协议有哪些，ICMP应用\n\nIP协议可靠吗，UDP应用场景\n\nTCP拥塞控制\n\n四次挥手的Time_wait\n\nI/O多路复用，边缘水平触发\n\nepoll性能一定更好吗\n\nlinux文件描述符大小、修改命令(ulimit)\n\nsocket和文件描述符的关系\n\nLinux查看进程信息、ps底层实现\n\n进程间通信方式，哪种方式最快\n\n信号kill命令\n\n用户态如何切换到内核态，软中断\n\n对AI了解吗，有什么看法\n\n反问：go业务场景：K8S容器化平台管理、AI集群训练、gpu运维管控平台开发\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603567482883821568?sourceSSR=users",
        "title": "校招在场问题",
        "content": "1.想要隐藏一个图片，可以做?多说几种方式。2.如果有一些数据需要渲染出来，但不存入后端数据库，可以怎么去存这些数据?多说几种方式。3.vue渲染方式和普通html有什么不同?4.平时怎么打断点的?\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603563266169733120?sourceSSR=users",
        "title": "腾讯IEG游戏客户端一面二面面经",
        "content": "BG：中九25届，ICPC金（有点混，cf就1900左右），投的暑期实习，问protobuf、kcp、定点数都是因为项目里用到了。\n\n# 一面\n\n处女面，很慌，但面试官很好，问的偏基础，不过面试官没开摄像头。\n\n## 问题\n\n  1. 数组和链表的区别\n  2. 新增一个元素，数组和链表的区别\n  3. 快速排序的原理，时间复杂度\n  4. 二叉树的遍历，三种遍历顺序\n  5. bfs和dfs的区别，用到的数据结构\n  6. dfs压栈\n  7. 进程与线程的区别，进程间通信的方式\n  8. 死锁，如何避免\n  9. 指针和引用区别\n  10. 多态原理\n  11. new和malloc区别\n  12. 装箱和拆箱\n  13. tcp和udp的区别\n  14. 帧同步和状态同步\n  15. unity脚本的生命周期\n  16. update，lateupdate和fixedupdate\n  17. unity协程\n  18. unity协程和C#多线程使用上的区别，C#异步\n  19. 渲染管线\n  20. 工厂模式\n  21. kcp相关（可靠udp）\n  22. 除了重传，还有什么办法减少udp丢包？（没答出来，应该是想问我拥塞控制和流量控制相关的）\n  23. kcp确认机制\n  24. protobuf VS json（protobuf：variant，zigzag）\n  25. 定点数的实现\n  26. 子弹与人物的碰撞\n  27. 对象池\n  28. 喜欢玩什么游戏\n  29. 有考研打算吗？看我绩点高（绩点高不应该问保研吗）\n\n## 反问\n\n  1. 什么引擎多：UE，Unity 55开，手游unity多，端游ue或自研引擎\n  2. 实习生有培训吗：一般会发一些学习资料\n  3. 工作时间：早9晚6，暑期实习一般3个月及以上\n\n## 做题\n\n（怎么是最后做题）\n\n  1. 最大子数组和\n  2. 判断括号字符串是否有效，有三种括号`{},[],()`，`()`里面有`[],{}`也是非法的，`[]`里面有`{}`也非法。\n\n# 二面\n\n面试官开摄像头了，感觉很有资历，面试的时候一会我没听清面试官说话，一会面试官没听清我说话，有点尴尬。。。\n\n## 问题\n\n  1. 做这个项目之前用过unity吗？用过unreal吗？\n  2. 你读研吗？\n  3. 对地域的要求，老家在哪。\n  4. 我看你绩点挺高的（咋又是这个\n  5. 怎么了解到帧同步的\n  6. 状态同步与帧同步的技术差异、优缺点\n  7. 有深入了解过2D/3D物理引擎的框架吗？（没有。。。）碰撞怎么检测？（四叉树、BVH、KD-Tree）问的很细，BVH的划分原则，等等\n  8. 项目中使用BVH了吗？（没有。。。\n  9. 为什么光线检测要用BVH？（没答对，面试官告诉我是方便在GPU上并行优化）\n  10. Kcp的好处？\n  11. Kcp有什么问题需要优化？（没答好，面试官教我。。。）\n  12. 让你自己写可靠UDP怎么做好一点？（答得很平常，面试官没反应）\n  13. 看过protobuf源码吗？（没有，看了一些原理性的文章）\n  14. 定点数怎么做的？\n  15. 用定点数实现了哪些数学函数？\n  16. 求三角函数值该怎么做？（泰勒展开）\n  17. 你们反外挂怎么做的？（怎么突然变成我问面试官了？）面试官先问我的想法，然后再讲他们项目的做法：服务端跑验证程序，敏感数据随机加密。\n  18. 你们断线重连怎么做的？（又是我问面试官）我只想到追帧，面试官说还可以用内存快照。\n  19. 给你看看我们的游戏PV，你觉得做这样的游戏需要什么技术栈？（回到面试官问我）\n  20. 面试官给我介绍他们项目的寻路解决方案（然后我没听太清楚？）\n  21. 除了C#还用过什么？（C++）\n  22. C#与C++的异同、优缺点\n  23. 了解过C#的中间语言吗？（只知道有这个东西。。。）\n  24. C#的字符串是什么类型？\n  25. C#两个字符串相同，指向同一个地方吗？\n  26. C#装箱、拆箱。\n  27. 用Cpp做过什么项目吗？（没有，做题目用得多）\n  28. 讲一下移动语义。\n  29. 讲一下RTTI（没听说过，面试官提示我四种类型转换），讲一下dynamic_cast原理（不会，瞎猜了一个跟虚函数表有关）。\n\n## 反问\n\n  1. 招实习生更重基础还是实践。回答：偏基础，不会要求太多实践经验，还要看个人对游戏行业的认识、热爱程度。\n  2. 对客户端开发的计算机图形学要求。回答：组内客户端也分图形、非图形，非图形又分局内和局外。\n  3. 实习的时候想快速上手应该再学些什么？（问了我想做什么方向，我回答局内）回答：动画、物理引擎了解一下。\n\n## 做题\n\n又是最后做题，草，面试问问题的时候还没那么紧张，开始做题了腿控制不住的抖，nm抖了20多分钟。\n\n  1. 牛顿迭代法开方（我项目用到了）\n  2. 判断多边形是否是凸包\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603550182478807040?sourceSSR=users",
        "title": "面试经验-法雷奥（武汉）",
        "content": "### 笔试题\n\n面试岗位：嵌入式开发工程师  \n试卷语言：英语  \n试卷结构：十道选择题，一道编程题  \n试卷考察范围：C语言，数字逻辑和电路基础知识  \n难度：简单  \n时间：三十分钟\n\n### 技术面\n\n面试范围：主要以简历上的项目为切入点进行考察；最后会浏览之前写的笔试题，并提出部分问题。\n\n### HR 面\n\n面试范围：与一般的 HR 问的问题大同小异。\n\n### 值得注意的细节\n\n现场不提供笔，需要自己提前准备（实在忘记了，可以找门卫要一支笔）\n\n### 面试感受\n\n总体来说，面试感受还是不错的。这可能得益于难度较低的笔试题，以及面试官主要针对简历上的项目进行提问，而不是一些八股文的知识。不过，也因为较低难度的面试，导致通过的人数较多，可能会使发放\nOFFER 数量远远小于通过面试人数。\n\n### OFFER 发放时间\n\n大概在一个星期内给予回复。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603548882030579712?sourceSSR=users",
        "title": "蚂蚁笔试2024/3/30",
        "content": "第一题签到。连通图m和n的关系\n\n第二题不会,给定n,m,k，n为总数量，m为操作数量，k为单次操作区间大小，每次操作可以使连续k大小区间+1，最后输出最小值的最大方案。(m,n<1e9,k<1e5)\n\n第三题93.33%,用的dp。n=1e5,题目是说给定一个序列，序列只含有-1，1，0，要求输出子序列乘积为-1，0，1的方案数。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603398318621802496?sourceSSR=users",
        "title": "小红书Java后端日常实习一面",
        "content": "本人C++选手，被面试官捞起来了\n\n  1. 为什么使用redis，在项目里面用于什么\n  2. 介绍一下架构，数据库的表，主键\n  3. get和post有什么区别\n  4. 我在不同的时间GET请求获得的数据不一样，这样还是等幂嘛？\n  5. session和cookie，作用是什么\n  6. cookie的限制大小是什么，有什么问题\n  7. redis缓存无了，写数据库问题，怎么保证一致性\n  8. 事务如果失败了怎么办？全部封装在一个事务里面？\n  9. 状态码有哪些\n  10. 垃圾回收是怎么做到的，有了解过GO或者JAVA的垃圾回收是怎么样的嘛\n  11. 有什么设计模式吗？\n\n算法题：二叉树的右视图\n\n要自己构建图和构建树，但是面试官感觉完全忘了C++，问我STL的接口怎么用。。。\n\n后续直接挂了，实在是技术栈不匹配，但是内心还是很想去做后端。。。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603394484864368640?sourceSSR=users",
        "title": "小米笔试 小米笔试题 0312",
        "content": "**笔试时间：2024年03月12日**\n\n历史笔试传送门：[2023秋招笔试合集](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fcreation%2Fmanager%2FcolumnDetail%2F0ODrNm)\n\n# 第一题\n\n### 题目：偏爱的字符\n\n小李天生偏爱一些字符，对于一个字符串，他总是想把字符串中的字符变成他偏爱的那些字符。如果字符串中某个字符不是他所偏爱的字符，称为非偏爱字符，那么他会将该非偏爱字符替换为字符串中距离该字符最近的一个偏爱的字符。这里的距离定义即为字符在字符串中的对应下标之差的绝对值。如果有不止一个偏爱的字符距离非偏爱字符最近，那么小李会选择最左边的那个偏爱字符来替换该非偏爱字符，这样就保证了替换后的字符串是唯一的。小李的所有替换操作是同时进行的。假定小李有m个偏爱的字符，依次为c1,c2...cm，当小李看到一个长度为n的字符串s时，请你输出小李在进行全部替换操作后形成的字符串。\n\n### 输入描述\n\n第一行输入两个正整数n，m。\n\n接下来一行输入m个字符c1,c2...cm，每两个字符之间用空格隔开，表示小李偏爱的字符。\n\n接下来一行输入一个字符串s。\n\n1≤n≤100000，1≤m≤26，保证题目中所有的字符均为大写字符，**小李偏爱的字符互不相同，且偏爱字符至少出现一次。**\n\n### 输出描述\n\n输出一行字符串，表示小李将给定的字符串s替换后形成的字符串。\n\n### 样例输入\n\n> 12 4\n>\n> Z G B A\n>\n> ZQWEGRTBYAAI\n\n### 样例输出\n\n> ZZZGGGBBBAAA\n\n**说明：**\n字符Q为非偏爱字符，且偏爱字符Z距离它最近，所以替换成Z；同理E距离G最近，替换成G；对于字符W，偏爱字符Z和G与其距离相同，所以替换为左边的Z；.......对于字符\nI ，右边没有偏爱字符，左边第一个偏爱字符是A，所以替换成字符A。同一个偏爱字符可能会在字符串中出现多次。\n\n### 参考题解\n\n将偏爱字符的下表存储在数组中，对需要转化的字符，二分搜索最近的即可。\n\nC++：[此代码未进行大量数据的测试，仅供参考]\n\n    \n    \n    #include <iostream>\n    #include <vector>\n    #include <set>\n    #include <algorithm>\n    \n    using namespace std;\n    \n    int main() {\n        int n, m;\n        cin >> n >> m;\n        \n        vector<char> favorite_chars(m);\n        for (int i = 0; i < m; ++i) {\n            cin >> favorite_chars[i];\n        }\n        \n        set<char> favorites_set(favorite_chars.begin(), favorite_chars.end());\n        \n        string text;\n        cin >> text;\n        \n        vector<int> favorite_indexes;\n        for (int i = 0; i < text.size(); ++i) {\n            if (favorites_set.find(text[i]) != favorites_set.end()) {\n                favorite_indexes.push_back(i);\n            }\n        }\n        \n        for (int i = 0; i < text.size(); ++i) {\n            if (favorites_set.find(text[i]) == favorites_set.end()) {\n                int left_idx = distance(favorite_indexes.begin(), lower_bound(favorite_indexes.begin(), favorite_indexes.end(), i)) - 1;\n                int right_idx = distance(favorite_indexes.begin(), upper_bound(favorite_indexes.begin(), favorite_indexes.end(), i));\n                \n                int left_distance = (left_idx >= 0) ? i - favorite_indexes[left_idx] : INT_MAX;\n                int right_distance = (right_idx < favorite_indexes.size()) ? favorite_indexes[right_idx] - i : INT_MAX;\n                \n                int closer_index = (left_distance <= right_distance) ? favorite_indexes[left_idx] : favorite_indexes[right_idx];\n                text[i] = text[closer_index];\n            }\n        }\n        \n        cout << text << endl;\n        \n        return 0;\n    }\n    \n    \n\nJava：[此代码未进行大量数据的测试，仅供参考]\n\n    \n    \n    import java.util.*;\n    \n    public class Main {\n        public static void main(String[] args) {\n            Scanner scanner = new Scanner(System.in);\n    \n            int n = scanner.nextInt();\n            int m = scanner.nextInt();\n    \n            List<Character> favoriteChars = new ArrayList<>();\n            for (int i = 0; i < m; i++) {\n                favoriteChars.add(scanner.next().charAt(0));\n            }\n    \n            Set<Character> favoritesSet = new HashSet<>(favoriteChars);\n    \n            String text = scanner.next();\n    \n            List<Integer> favoriteIndexes = new ArrayList<>();\n            for (int i = 0; i < text.length(); i++) {\n                if (favoritesSet.contains(text.charAt(i))) {\n                    favoriteIndexes.add(i);\n                }\n            }\n    \n            char[] textArray = text.toCharArray();\n            for (int i = 0; i < textArray.length; i++) {\n                if (!favoritesSet.contains(textArray[i])) {\n                    int leftIdx = Collections.binarySearch(favoriteIndexes, i);\n                    leftIdx = (leftIdx >= 0) ? leftIdx - 1 : -leftIdx - 2;\n                    int rightIdx = Collections.binarySearch(favoriteIndexes, i);\n                    rightIdx = (rightIdx >= 0) ? rightIdx + 1 : -rightIdx - 1;\n    \n               \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603369018782728192?sourceSSR=users",
        "title": "饿了么一面凉经-2024-03-29",
        "content": "C++选手硬着头皮投了Java岗，奇怪的是还过筛了，然后就被拷打了。\n\n  * 自我介绍\n  * 为什么考虑跨专业？\n  * 面试官说他们是做 Java 的，但是看我并没有相关的经历，问我投递的时候方向是自己选的吗？（这个时候大概知道是寄了）\n  * 项目介绍\n  * select 语句的查询过程中是否有优化的规则？（扯了 MySQL 的基于规则的优化）\n  * 火山模型，优点缺点等（这里踩坑了，还提了一嘴物化模型，然后扯了一下）\n  * 2 核 4G 电脑，在火山模型大概能承载的数据计算量或内存的计算量大概是多少？（不会）\n  * 字符类型和数字类型在内存中占用是多少（不知道为啥问这个？）\n  * 为什么需要做缓冲池，如果不做缓冲池的话缺点是什么？\n  * 是否有做过实际的测试，缓冲池的命中率有多少？（无，根本没这部分内容）\n  * 磁盘的扫描算法（不会，说了顺序扫描、电梯算法）\n  * 追问：电梯算法具体说一下（这里开始瞎扯，被面试官拷打）\n  * 读写锁是怎么用的？它的实现原理是什么？（没了解过，不会）\n  * B+ 树和 B 树区别\n  * 什么数据库适合用 B+ 树作为索引、什么数据库采用 B 树作为索引\n  * 问第二个项目的项目收获（这块的话，没答好，应该多说一些拓展的）\n  * 进程间通信如何实现的（7 种都答了，感觉是可以介绍一下每种方式的一个优缺点）\n  * 总线模型是否了解？（不会）\n  * 进程和线程之间的区别（答的一般，有些忘记了）\n  * 一个进程有 10 个线程，每个线程会每 1s 会随机睡眠 0.5s - 1s，这个时候在 CPU 当中的一个运行过程是什么样子的？（有点懵）\n  * CPU 时间片运行的计算量和上下文切换的瓶颈大概是在哪里？（不会）\n  * 然后举个例子：10 个线程执行 100 个任务，和 100 个线程执行 100 个任务，哪个效率高？或者说是什么情况下用 10 个线程效率高，什么情况用 100 个线程效率高？（IO 密集型和 CPU 密集型）\n  * 栈、队列、二叉树的实现过程，它们的使用场景（简历上写的，突然这么一问，答的不太行）\n  * 介绍一下红黑树，以及查找过程（上面说二叉树应用场景提了一下，又踩坑了）\n  * 红黑树插入一个数据，旋转逻辑是什么？（直接说不会）\n  * MySQL 如何对数据进行一个恢复的？\n  * 脏读和幻读\n  * MySQL 存储引擎有哪些？ InnoDB 和 MyISAM 对事务的支持？\n  * 数据的范式（答了三大范式）\n  * 大部分场景不遵循范式，如何考虑的？（不太会了）\n  * 范式可能更多的是对主键、唯一索引以及外键进行一个约束，什么情况下需要这些约束，什么情况下不需要？（跪了，不会）\n  * 问了个人情况的一些情况，无手撕算法，估计是觉得我技术能力不够\n\n复盘了一下，这个面试官经验很丰富，数据库一些实际场景基本上没接触过，然后还问了很偏门的磁盘调度算法、总线、读写锁的原理，就是在回答的过程当中提到的一些技术内容，尽量不要给自己挖坑，面试官会一直细问。现在看了挂了也很正常，面试官问了一些实际的性能测试相关内容，以及一些技术的业界实现，答的都不太好。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603368132446539776?sourceSSR=users",
        "title": "腾讯WXG 暑期实习 nlp 一面凉经",
        "content": "1.拷打项目，问的很细\n\n2.八股：\n\nRLHF\n\n大模型怎么处理图结构的数据\n\n针对竞赛提问：\n\nXGBoost GBDT 随机森林的区别\n\n特征清洗问题 有没有考虑组合特征\n\nkmeans中k怎么选取，如果样本数量很大呢？\n\n3.手撕代码\n\n多头注意力\n\n编辑距离\n\n合并区间\n\n全程1h30min\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603360076954365952?sourceSSR=users",
        "title": "赛美特群面",
        "content": "人生第一次群面，简直就是依托答辩\n\n先是HR吧，问一些技术无关的\n\n  * 自我介绍\n  * 在校经历\n  * ……\n\n最恶心的问题：如果项目出现了重大问题，这个不是你的责任，但是领导把责任怪在你身上，你会怎么做？\n\n直接把第一个发言的老哥干蒙了。我去你的，真是个****。\n\n可现实是我是牛马打工人，别人都承担了那我也承担。到这里我已经不想面了\n\n之后技术面试官挨个看简历问问题，刚好问我简历上写了解的东西，我愿称之为叛逆的面试官\n\n总之，群面这些人有本科有硕士，有科班有转码的，面试体验很差，技术岗群面的都是**\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603358332727951360?sourceSSR=users",
        "title": "小红书329编程题第二题题解",
        "content": "背包问题。类似的题目有leetcode152, 还有买卖股票的最佳时机III leetcode 123\n\n    \n    \n    import java.util.*;\n    public class Xiaohongshu329_2 {\n        public static void main(String[] args) {\n            Scanner in = new Scanner(System.in);\n            int n = in.nextInt();\n            int x = in.nextInt();\n            int[] array = new int[n + 1];\n            for (int i = 1; i <= n; i++) {\n                array[i] = in.nextInt();\n            }\n            \n            int[][] dp0 = new int[n + 1][x + 1]; //dp0表示没有使用多次推荐的\n            int[][] dp1 = new int[n + 1][x + 1]; //dp1表示使用了多次推荐的\n            \n            for (int i = 1; i <= x; i++) { //初始化\n                dp0[0][i] = Integer.MAX_VALUE;\n                dp1[0][i] = Integer.MAX_VALUE;\n            }\n            \n            int ans = Integer.MAX_VALUE;\n            for (int i = 1; i <= n; i++) {\n                int value = array[i];\n                int half = array[i] / 2;\n                for (int j = 1; j <= x; j++) {\n                    if (j >= half) { //背包问题\n                        dp0[i][j] = Math.min(dp0[i - 1][j], dp0[i - 1][j - half] + 1);\n                        dp1[i][j] = Math.min(dp1[i - 1][j], dp1[i - 1][j - half] + 1);\n                        if (j >= value) {\n                            dp1[i][j] = Math.min(dp1[i][j], dp0[i - 1][j - value] + 1); //在该位置处使用多次推荐\n                        }\n                    } else {\n                        dp0[i][j] = dp0[i - 1][j];\n                        dp1[i][j] = dp1[i - 1][j];\n                    }\n                }\n            }\n            ans = Math.min(dp0[n][x], dp1[n][x]);\n            if (ans == Integer.MAX_VALUE) {\n                System.out.println(-1);\n            } else {\n                System.out.println(ans);\n            }\n        }\n    }\n    \n    \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603358086887211008?sourceSSR=users",
        "title": "0329小红书笔试",
        "content": "\n    test1:有n张牌，你有两发子弹，需要分别同时命中第一张牌和最后一张张牌，尝试求出概率，结果四舍五入保留10位小数；\n    实例\n    输入：2\n    输出：1.0000000000\n    test2:你有n个小红书账号，每个账号粉丝为a_n，你需要创建一个粉丝为k的新账号，你可以通过老账号发推文来宣传新账号，宣传的方式有两种。第一种是浅度宣传，浅度宣传可以为新账号增加a_n/2（向下取整）粉丝。第二种是重度宣传，重度宣传可以为新账号增加a_n粉丝。其中重度宣传你最多使用一次。求需要最少账号个数\n    实例\n    输入：5 81 2 3 4 10\n    输出：2（用第三个账号重度宣传和第五个账号浅度宣传）\n    test3:有n个数，求每个数第一次全都是偶数的期望\n    实例\n    输入：21，2\n    输出：1/2 * 4 + 1/8 * 6 + 1/32 * 8 +... =（我忘了咋算了）好像是6\n    public static void test1(){\n            Scanner scanner = new Scanner(System.in);\n            int n = scanner.nextInt();\n            double x = n;\n            double res = 2 / (x * (x - 1));\n            DecimalFormat decimalFormat = new DecimalFormat(\"#.##########\");\n            String format = decimalFormat.format(res);\n            System.out.println(format);\n        }\n    public static void  test2(){\n            Scanner scanner = new Scanner(System.in);\n            int n = scanner.nextInt();\n            int k = scanner.nextInt();\n            int[] nums = new int[n];\n            for (int i = 0; i < n; i++) {\n                nums[i] = scanner.nextInt();\n            }\n            int[][] dp = new int[k + 1][2];\n            for (int i = 0; i <= k ; i++) {\n                dp[i][0] = Integer.MAX_VALUE;\n                dp[i][1] = Integer.MAX_VALUE;\n            }\n            dp[0][0] = 0;\n            dp[0][1] = 0;\n            for (int i = 0; i < n; i++) {\n                int act = nums[i] / 2;\n                for (int j = k; j >= act ; j--) {\n                    if (dp[j - act][0] != Integer.MAX_VALUE){\n                        dp[j][0] = Math.min(dp[j][0], dp[j - act][0] + 1);\n                        dp[j][1] = Math.min(dp[j][1], dp[j - act][1] + 1);\n                    }\n                    if (j - nums[i] >= 0 && dp[j - nums[i]][0] != Integer.MAX_VALUE){\n                        dp[j][1] = Math.min(dp[j][1], dp[j - nums[i]][0] + 1);\n                    }\n    \n                }\n            }\n            System.out.println(Math.min(dp[k][0], dp[k][1]));\n    \n        }\n    不知道对不对，是在考试后做的，题二是受@noodles:)老哥的提示。希望和大家一起讨论一下。\n    第三题不太会，有点思路但不多\n    \n    \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603357425516695552?sourceSSR=users",
        "title": "京东数据分析岗实习面经",
        "content": "我面试了零售部数据分析岗，下面将问题整理一下：\n\n一面\n\n1.自我介绍\n\n2.介绍一个实习中最深刻的项目1.这个项目的分析思路是什么样，有没有出现和预期不同的情况\n\n2.如果应对这种预期与实际不符的情况\n\n3.用户通过活动转化的行为路径会是怎样，怎么判断是哪个环节出现的问题\n\n4.SQL：次日，三日，七日留存\n\n5.SQL:：找各品类下gmv最高的商品\n\n6.SQL的优化方法\n\n7.几个join的区别\n\n8.最后考核的指标是什么3.618期间，如何判断DAU增加是新增加的活动的原因\n\n9.用过机器学习算法吗\n\n10.集成学习有哪几种方法\n\n11.Bagging对于方差和偏差都有什么效果\n\n12.大概什么时间可以入职，可以实习多久\n\n二面（hr 面）\n\n1.有什么能体现你的数据思维的项目经历吗\n\n2.在项目中你具体负责了什么业务\n\n3.你大学是什么研究方向\n\n4.为什么跨专业升学\n\n5.你在学校的团队工作中都是什么角色\n\n6.对以后的团队氛围有什么期待\n\n这次实习面试的业务面涉及范围很广，还是好好准备一下。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603356427784110080?sourceSSR=users",
        "title": "淘天暑期实习-首页&信息流Java-电话一面-已挂",
        "content": "33min\n\n自我介绍\n\n项目涉及：\n\nredis：\n\n缓存击穿、缓存穿透的问题怎么解决，为什么会想到这个问题要去解决\n\nFeed流推模式\n\n八股：\n\nJava接口和抽象类的区别是什么\n\nHashMap底层实现，线程安全吗\n\nJIT的原理\n\nJVM类加载过程\n\n双亲委派机制，如何破坏\n\nJava反射原理\n\nstatic和final关键字\n\nlinux操作系统使用过吗（命令）查看磁盘、查看GPU、删除7天前的文件\n\nMySQL索引数据结构，为什么要用B+树\n\n数据库数据量特别大，提高查询性能如何做\n\n分库分表\n\n有索引数据没办法在一台机器上存，怎么办\n\n有用过搜索或者推荐系统吗\n\n数据库事务隔离级别一定可以保障一致性吗\n\n设计模式了解过吗\n\n单例模式简单介绍，什么场景下使用\n\nHTTPS了解它的流程和原理吗\n\ncookie和session的区别是什么\n\n怎么理解网络当中的同步异步，阻塞非阻塞\n\n平常用什么IDE？常用快捷键是什么？\n\n版本控制用什么？git的merge和rebase区别\n\n反问：\n\n哪方面需要加强一下？\n\n对于在校学生，理论要掌握比较牢固，了解原理\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603354278173896704?sourceSSR=users",
        "title": "阿里巴巴广告投放运营面经",
        "content": "时间是大约25分钟左右，是线上面试。\n\n面试一共两个环节：自我介绍+答辩\n\n问题整理：\n\n1.深挖简历中和实习经历\n\n2.对广告投放运营的理解（可以结合自己的一些经历讲讲）\n\n3.对广告投放的思路\n\n4.对阿里妈妈的了解，包括品牌活动营销和旗下产品数字营销\n\n5.反问环节\n\n面试体验不错，面试官真的很nice，也会得到适当的反馈，而且我面试经验也比较少，导致答得不太好，但是面试官即使我答得卡壳，她也是微笑的面对我，给足了我鼓励和勇气，整个面试过程比较轻松。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603353037091926016?sourceSSR=users",
        "title": "平安银行测评难不难？有哪些注意事项",
        "content": "以下是关于平安集团入职测评的注意事项和内容\n\n介绍:\n\n注意事项：\n\n做题过程中弹窗次数超过三次将被视为作弊，将\n\n不予录用。\n\n社招测评不通过的考生将会有半年冷静期，校招\n\n一年冷静期，期间不予考虑平安的招聘流程。\n\n平安的测评分为三个部分：平安IQ（新）、个性扫描16PF和平安胜任力测评，其中IQ部分限时15分钟，个性扫描184道题限时60分钟，这个在清宇offer里面文章有写，胜任力测评总共104道题预计30分钟左右完成。\n\n平安IQ（新）测评分为言语、数字和归纳推理三个维度，总共30道题，每道题限时60-90秒，总体分数低于80的考生不建议录用。\n\n个性扫描（16PF）测评包括184道选择题，限时60分钟，总体时间低于10分钟的考生不建议录用，存在性格障碍的考生也不建议录用。  \n\n平安胜任力测评总共包括104道多选题，预计30分钟左右可以完成，总体分数低于6.5的考生不建议录用。\n\n平安测评共有10套随机题目，难度不一，严禁向面\n\n试者指定考试题目。\n\n![](https://uploadfiles.nowcoder.com/message_images/20240329/946365635_1711722537956/discuss_1711722539288.jpeg)  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603351124539703296?sourceSSR=users",
        "title": "百度产品经理面经",
        "content": "百度产品经理岗一共有四面，与牛友们分享一下面试问题（回忆版）。\n\n一面：\n\n1.自我介绍\n\n2.介绍一下之前实习中独立负责的项目情况\n\n3.实习二中做了一些行业研究和竞品分析，这部分有落地吗？如何实现的？\n\n4.数据分析过程中，立足点框架是怎样？从哪些维度分析的？\n\n5.品牌广告和效果广告的区别是什么？\n\n6.如何看待“品效合一”？\n\n7.项目推进过程中遇到了哪些难点？个人有哪些收获？\n\n8.反问环节\n\n二面：\n\n1\\. 自我介绍\n\n2.介绍一下你接触过的两个商业化产品经历，你在期间扮演的角色和作用？\n\n3.说一个视频类软件并分析其优劣势，有何可以改进的地方？\n\n4.如果这个视频软件只能保留3个功能，会选择哪三个？\n\n5.列举一个你最近使用的社区类产品并分析其优势劣势\n\n6.商业产品经理和普通产品经理的区别？前者需要具备哪些能力？\n\n7.为什么想来百度？\n\n8.反问环节\n\n三面：\n\n1\\. 自我介绍\n\n2\\. 简历深挖\n\n3\\. 你了解巨量引擎吗？\n\n对比分析百度和巨量引擎的优劣势？\n\n4\\. 京东、阿里、百度、字节广告平台的客户有什么差异？\n\n5\\. 你觉得拼多多为什么能成功？\n\n6\\. 你平时百度搜索电商吗？主要目的是什么？\n\n7\\. 你平时学习互联网产品的方式是什么？\n\n8\\. 对于百度搜索结果页，可以从哪些维度来提升垂直行业的广告收入？\n\n9\\. 如果广告主反馈百度搜索广告投放ROI不好，应该怎么拆解和排查问题？\n\n10\\. 你想从事商业产品领域哪个方向？为什么？\n\n11.反问环节\n\n四面：\n\n1\\. 自我介绍\n\n2\\. 之前的实习学到了什么？总结三点\n\n3\\. 小红书定位的用户群体是怎样的？\n\n4\\. 为什么想做产品经理，不做运营？\n\n5\\. 接到用户反馈，如何推进小红书的短视频业务？如何落地？\n\n6\\. 执行过程中没有达到预期怎么办？\n\n7\\. 怎么理解产品和运营的区别？\n\n8.反问环节\n\n希望可以帮助到各位牛友们[赞][赞]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603349201371611136?sourceSSR=users",
        "title": "24春招-58同城-前端一面凉经",
        "content": "3月24-官网投递 base北京\n\n3月25-发了面试通知没有笔试\n\n约了3月29日下午3点的线上面试\n\n面试时长：1小时20分钟\n\n题目--------------------------------------------没有录音，想起啥写啥，问题顺序是打乱的\n\n自我介绍-本人年纪较大，面试官比较疑惑，我说我小学转学成绩不行然后留级了所以比同龄人大一点（确实是）\n\n1.为啥学前端\n\n2.实习期间做过哪些难点遇到的问题\n\n3.做项目有没有做过性能优化，方案有那些\n\n4.跨域了解不，部署项目如何解决跨域，实习有没有遇到这些问题，解决方案\n\n5.输入url到渲染经历了什么\n\n6.首页加载慢这么解决的\n\n7.css优先级\n\n8.图片排列渲染时有空隙这么解决的（这个问题我一直没理解，答的模棱两可）\n\n9.ci/cd了解吗\n\n10.虚拟dom说一下\n\n11.nexttick说一下\n\n12.vue2生命周期讲一下\n\n13.vue2和3的响应式区别讲一下\n\n14.有过移动端开发吗？怎么适配的，rem，em这些还有响应式布局\n\n15.浏览器缓存讲一下，storage这些\n\n16.箭头函数\n\n........\n\n16.写一个数组去重函数-面试官让写了好几种\n\n17.写一个节流函数\n\n反问：进度怎么安排的---->答：不清楚可能hr会通知\n\n因为提到了我之前是不是在北京实习，我问了一嘴是不是公司不太接受外地的应届生----->答：没有影响\n\n\\--------\n\n应该还有许多题目，会问项目，其他的想不起了，另外面试官问问题比较随意，会跟着你回答的继续追问所以上面那些题目都只是开头，不过总体比较简单感觉，搞得我有点怀疑是不是kpi哈哈，但是面试花了差不多一个半小时感觉应该也不至于，面试官态度也很好，虽然挂了但是体验还是不错的，小小挫折！拿下。\n\n\\---------\n\n当天晚上查了一下进度发现挂了----不得不说进度很快，心里想着是不是反手就挂了啊，哈哈搞得我有点不自信了。\n\n不说了继续战！\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603340313125474304?sourceSSR=users",
        "title": "好未来java日常实习",
        "content": "就半个小时，基本都问的是项目相关，例如我项目的漏洞啊，mysql和redis的数据一致啊，如果mysql或者redis有一个宕机了啊，大概就这种问题。\n\n八股只问了jvm内存结构，一共就面了25分钟，然后面试官对我评价还挺好，觉得我想事周全，好像就一面，不管了，许愿oc？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603334671732068352?sourceSSR=users",
        "title": "【美团】美团一面，八股盛宴|0329",
        "content": "![alt](https://uploadfiles.nowcoder.com/images/20240329/630265916_1711719520408/CF5C6C1038B38C082503F7C139D31A8A)\n\n## 1\\. cookie和session的区别？\n\n**参考回答：**\n\n> Cookie和Session在多个方面存在显著的区别，主要体现在以下几个方面：\n>\n>   1. **存储位置** ：\n>\n>\n\n>   * Cookie的数据存储在客户端的浏览器中，用户可以通过浏览器工具查看和修改cookie信息。\n>\n>   * Session的数据则存放在服务器上，用户无法直接访问服务器上的session数据。\n>\n>\n\n>   2. **存储容量与类型** ：\n>\n>\n\n>   * Cookie的存储容量相对较小，通常限制在4KB以内，并且只能存储字符串类型的数据。\n>\n>   * Session的存储容量没有明确的限制（但考虑到服务器性能，通常不建议存放过多数据），并且它可以存储任意类型的数据。\n>\n>\n\n>   3. **有效期与生命周期** ：\n>\n>\n\n>   * Cookie的有效期可以在设置时指定，只要不超过设置的过期时间，它可以长期保存在客户端。\n>\n>   * Session的生命周期则通常较短，它会在一定的操作时间（如30分钟）后失效，并且在用户关闭浏览器或会话结束时，Session数据会被清除。\n>\n>\n\n>   4. **安全性** ：\n>\n>\n\n>   * 由于Cookie存储在客户端，存在被第三方截获或篡改的风险，因此安全性相对较低。攻击者可以通过分析或伪造Cookie来欺骗系统。\n>\n>   * Session数据存储在服务器上，相对更加安全，不容易被攻击者直接获取或修改。\n>\n>\n\n>   5. **跨域支持** ：\n>\n>\n\n>   * Cookie支持跨域名访问，即可以在不同的域名之间共享。\n>\n>   * Session则通常与特定的客户端和服务器端关联，不支持跨域访问。\n>\n>\n\n>   6. **对服务器压力** ：\n>\n>\n\n>   * Cookie不占用服务器资源，因为数据存储在客户端。\n>   * Session则需要在服务器上存储数据，因此对服务器的资源占用和性能有一定影响。\n>\n\n>\n> Cookie和Session都是在Web开发中用来跟踪用户会话状态的机制，区别如下：\n>\n>   1. **存储位置** ：\n>      * Cookie: 存储在用户浏览器中，以文本文件的形式保存在用户计算机上。\n>      * Session: 存储在服务器端，通常以一种特殊的数据结构（如哈希表）保存在服务器的内存中或者持久化存储（如数据库）中。\n>   2. **安全性** ：\n>      * Cookie:\n> 可以在用户浏览器上被查看和修改，因此相对不太安全。但是可以通过设置Cookie的属性，如HTTPOnly和Secure，来提高安全性。\n>      * Session: 存储在服务器端，相对于Cookie更安全，因为用户无法直接查看或修改会话数据。\n>   3. **容量** ：\n>      * Cookie: 由于存储在用户浏览器中，单个Cookie的容量通常有限制（一般约为4KB），因此它适合存储少量的数据。\n>      * Session: 存储在服务器端，通常没有明确的容量限制，但会受到服务器资源的限制。\n>   4. **生命周期** ：\n>      * Cookie: 可以设置过期时间，也可以是会话Cookie（浏览器关闭后自动删除）。\n>      * Session: 通常在用户关闭浏览器或者长时间不活动后过期，但也可以设置特定的过期时间。\n>   5. **跨页面访问** ：\n>      * Cookie: 可以跨页面访问，即使用户跳转到其他页面，Cookie仍然会被发送到服务器。\n>      * Session: 也可以跨页面访问，但需要在页面之间传递会话标识符（如Session ID）来实现。\n>\n\n**学习指引：**[Cookie和Session的区别（面试必备）](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2Fchen13333336677%2Farticle%2Fdetails%2F100939030)\n\n>\n> **[面经专栏直通车，欢迎订阅](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fcreation%2Fmanager%2FcolumnDetail%2F0xKkDM)**\n\n> **[面经专栏下载，\n> 点击跳转](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fgithub.com%2FLi-\n> CW%2FJob-Hunter)**\n\n## 2\\. 如何实现session共享？\n\n**参考回答：**\n\n> 实现session共享有多种方法，主要取决于你的应用架构和所使用的技术栈。以下是一些常见的方法来实现session共享：\n>\n>   1. **数据库存储** ：\n>      * 将session数据存储在数据库中，而不是仅仅存储在内存中。这样，无论请求发送到哪个服务器，都可以通过查询数据库来获取session数据。\n>      * 这种方法需要设计好数据库表结构，并编写相应的存储和检索逻辑。\n>   2. **缓存系统** ：\n>      *\n> 使用像Redis或Memcached这样的缓存系统来存储session数据。每个服务器都可以访问这个共享的缓存系统来获取和更新session数据。\n>      * 这种方法通常比数据库访问更快，并且能更好地处理大量并发请求。\n>   3. **粘性session** ：\n>      * 通过负载均衡器实现粘性session（或称为持久连接）。负载均衡器根据某种算法（如基于IP哈希）将用户的请求始终路由到同一台服务器。\n>      * 这种方法不需要跨服务器共享session数据，但可能导致服务器负载不均衡。\n>   4. **Session复制** ：\n>      *\n> 当一个服务器上的session数据发生变化时，将这些变化复制到其他服务器上。这通常通过消息队列（如RabbitMQ）或分布式事件系统（如Apache\n> Kafka）实现。\n>      * 这种方法的缺点是可能存在数据同步延迟，且在大规模部署中可能不太实用。\n>   5. **中央认证服务** ：\n>      * 使用如OAuth、OpenID Connect或SAML等中央认证服务来管理用户的认证和授权信息。\n>      * 用户登录后，认证服务会颁发一个令牌（token），客户端可以使用这个令牌来访问资源，而不需要依赖session数据。\n>   6. **无状态应用** ：\n>      * 设计应用为无状态，即不依赖服务器端的session数据来识别用户。\n>      * 可以通过JWT（JSON Web Tokens）或其他令牌机制来实现用户身份验证和授权。\n>   7. **使用框架和库** ：\n>      * 某些Web框架和库提供了内置的session共享机制。例如，Spring\n> Session可以与Redis或数据库集成来实现session共享。\n>\n\n**学习指引：**[如何实现session跨服务器共享](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F88117430)\n\n## 3\\. 反向代理是起什么作用的？\n\n**参考回答：**\n\n>\n> 反向代理是一种位于客户端和后端服务器之间的代理服务器模型，它接收来自客户端的请求，并将其转发到后端服务器，然后将响应返回给客户端。反向代理在多个方面发挥着重要的作用：\n>\n>   1. **负载均衡**\n> ：反向代理通过将请求分发到多个后端服务器，平衡负载，从而减少单个服务器的负担，提高系统的可伸缩性。对于流量较高的网站，这种分发机制可以确保服务器容量得到充分利用，以处理大量请求。如果某台服务器过载并出现故障，反向代理还可以将流量重定向至其他在线服务器，确保服务的连续性和稳定性。\n>   2. **安全性和访问控制**\n> ：反向代理通过实现身份验证、授权和防火墙功能，增强了系统的安全性。它可以拦截所有传入请求，为后端服务器提供更高层级的保护。通过阻止来自特定IP地址的可疑流量，反向代理有助于防止恶意访问者滥用网页服务器。此外，反向代理还可以隐藏后端服务器的真实地址，进一步提高系统的安全性。\n>   3. **缓存数据**\n> ：反向代理可以缓存经常请求的数据，减少对后端服务器的访问次数，提高系统的性能。对于需要存储大量信息流数据的大型用户，缓存机制可以有效降低网站服务器的负载，提高网站的响应速度和用户体验。\n>   4. **服务治理** ：通过反向代理，管理员可以监控和管理后端服务器的状态，包括健康检查、服务降级等，确保系统的稳定性和可靠性。\n>\n\n**学习指引：**[什么是反向代理？](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F230829571)\n\n## 4\\. MySQL数据库主从复制原理？\n\n**参考回答：**\n\n> MySQL数据库的主从复制原理涉及主服务器（Master）和从服务器（Slave）之间的数据同步过程。以下是这个过程的详细解释：\n>\n> **主服务器（Master）操作** ：\n>\n>   1. **二进制日志（Binary Log）记录**\n> ：当主服务器上的数据发生更改时（如INSERT、UPDATE或DELETE操作），这些更改会被记录到主服务器的二进制日志（通常称为binlog）中。二进制日志是MySQL用来记录数据库更改的日志文件，它包含了描述数据库更改的“事件”。\n>   2. **发送二进制日志**\n> ：从服务器会定期向主服务器请求最新的二进制日志事件。一旦从服务器请求，主服务器会发送从上次同步点之后的二进制日志事件到从服务器。\n>\n\n>\n> **从服务器（Slave）操作** ：\n>\n>   1. **接收和写入中继日志（Relay Log）**\n> ：从服务器接收到主服务器发送的二进制日志事件后，首先将这些事件写入到本地的中继日志中。中继日志是从服务器用来临时存储从主服务器接收到的二进制日志事件的日志文件。\n>   2. **执行SQL语句**\n> ：从服务器的一个SQL线程会读取中继日志中的事件，并将这些事件转换成对应的SQL语句，然后在从服务器上执行这些SQL语句。这样，从服务器上的数据就被更新为与主服务器一致。\n>\n\n>\n> **复制延迟与同步** ：\n>\n>\n> 在实际运行中，由于网络延迟、从服务器负载等原因，从服务器的数据可能会稍微落后于主服务器。这种延迟是主从复制的一个常见问题，需要通过监控和管理来确保数据的及时同步。\n>\n> 此外，MySQL还提供了多种复制模式，如异步复制、半同步复制等，这些模式在数据同步的实时性和一致性方面有所不同，用户可以根据实际需求选择合适的复制模式。\n\n**学习指引：**[超详细！MySQL如何实现主从复制和读写分离](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2Fqq_41786285%2Farticle%2Fdetails%2F109304126)\n\n## 5\\. Java 的深拷贝和浅拷贝的区别？\n\n**参考回答：**\n\n> 在 Java 中，深拷贝和浅拷贝主要涉及到对象复制时处理对象属性和引用关系的方式。这两种拷贝方式的主要区别如下：\n>\n> **浅拷贝（Shallow Copy）**\n>\n> 浅拷贝是创建一个新对象，并复制原对象中的非引用类型数据（如 int、double、float\n> 等基本数据类型），但对于引用类型数据（如对象、数组等），只复制其引用而不复制引用的对象。换句话说，浅拷贝对于非引用类型字段进行值传递，对引用类型字段进行引用传递。因此，如果原对象的引用类型字段被修改，浅拷贝后的对象也会受到影响。\n>\n> **深拷贝（Deep Copy）**\n>\n>\n> 深拷贝则不同，它不仅创建一个新对象，并复制原对象中的非引用类型数据，还会递归地复制原对象中的引用类型数据。也就是说，对于原对象的引用类型字段，深拷贝会创建一个新的对象，并复制原引用对象的内容到新对象中。因此，如果原对象的引用类型字段被修改，深拷贝后的对象不会受到影响。\n\n**学习指引：**[Java深入理解深拷贝和浅拷贝区别\n](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2Friemann_%2Farticle%2Fdetails%2F87217229)\n\n## 6\\. Java 有哪些深拷贝的方法？\n\n**参考回答：**\n\n> 在 Java 中，实现深拷贝的方法有多种：\n>\n>   1. **重写`clone()` 方法**：Java 中的 `Object` 类提供了一个 `clone()`\n> 方法，用于创建对象的副本。但是，默认情况下，`clone()` 方法执行的是浅拷贝。为了实现深拷贝，需要重写 `clone()`\n> 方法，并在其中对对象的属性进行递归拷贝。\n>   2. **使用序列化和反序列化** ：Java\n> 中的序列化和反序列化可以实现对象的深拷贝。通过将对象写入字节流，然后再从字节流中读取出来，就可以创建一个新的对象，而不是简单地复制引用。这种方式要求被复制的类及其所有被引用的类都必须实现\n> `Serializable` 接口。\n>   3. **使用第三方库** ：有些第三方库提供了深拷贝的功能，比如 Apache Commons Lang 和\n> Gson。这些库通常提供了更灵活和强大的深拷贝实现，可以处理更复杂的对象结构和关系。\n>\n\n**学习指引：**[Java如何对一个对象进行深拷贝？](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2Fsssspider%2Farticle%2Fdetails%2F101693928)\n\n## 7\\. Java 的 GC分几种？\n\n**参考回答：**\n\n> Java的垃圾回收（GC）主要可以分为以下几种：\n>\n>   1. **按线程数分** ：\n>      * **串行垃圾回收器** ：在同一时间段内只允许有一个CPU用于执行垃圾回收操作，此时工作线程被暂停，直至垃圾收集工作结束。\n>      * **并行垃圾回收器** ：使用多个线程同时执行垃圾回收工作，以提高垃圾回收的效率。\n>   2. **按工作模式分** ：\n>      * **并发式垃圾回收器** ：垃圾回收线程与应用程序线程同时运行，可以在垃圾回收的同时进行应用程序的执行。\n>      * **独占式垃圾回收器（Stop the World）** ：一旦运行，就停止应用程序中的所有用户线程，直到垃圾回收过程完全结束。\n>   3. **按碎片处理方式分** ：\n>      * **压缩式垃圾回收器** ：在垃圾回收后，会对内存空间进行整理，消除内存碎片。\n>      * **非压缩式垃圾回收器** ：在垃圾回收后，不整理内存空间，可能产生内存碎片。\n>   4. **按工作的内存区间分** ：\n>      * **年轻代垃圾回收器** ：主要负责回收新生代中的垃圾对象。\n>      * **老年代垃圾回收器** ：主要负责回收老年代中的垃圾对象。\n>   5. **按垃圾回收种类分** ：\n>      * **Partial GC** ：部分收集模式，可以是Young GC（只收集年轻代的GC）或Old GC（只收集老年代的GC）。\n>      * **Mixed GC** ：收集整个年轻代以及部分老年代的GC，例如G1收集器就有这种模式。\n>      * **Full GC** ：收集整个堆和方法区，堆是垃圾回收的主要区域，方法区很少会被回收。\n>\n\n>\n>\n> 在Java虚拟机（JVM）中，程序计数器、虚拟机栈、本地方法栈都是随线程而生随线程而灭，栈帧随着方法的进入和退出做入栈和出栈操作，实现了自动的内存清理。而Java堆内存被划分为新生代和年老代两部分，新生代主要使用复制和标记-\n> 清除垃圾回收算法，年老代主要使用标记-整理垃圾回收算法。\n\n**学习指引：**[Java常见的GC有哪些？](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2Fqq_41936805%2Farticle%2Fdetails%2F95903002)\n\n## 8\\. Java 的 minGC和FullGC有什么区别？\n\n**参考回答：**\n\n> MinGC（通常指的是Minor GC或Young GC）和Full GC（也称为Major GC或Old Generation\n> GC）是Java虚拟机（JVM）中两种不同的垃圾回收（GC）操作，它们主要针对的是堆内存中的不同部分，并且在执行时有着不同的特点。\n>\n> **Minor GC（Young GC）** ：\n>\n>   * 主要针对新生代（Young Generation）进行垃圾回收。新生代是堆内存中的一个区域，主要用于存放新创建的对象。\n>   * 由于新生代中的对象生命周期通常较短，因此Minor GC的执行频率通常较高，但每次回收的耗时相对较短。\n>   * Minor GC采用复制算法，将存活对象从一个内存区域复制到另一个内存区域，同时清理掉不再使用的对象。\n>\n\n>\n> **Full GC（Major GC或Old Generation GC）** ：\n>\n>   * 涉及整个Java堆（Heap）的回收，包括年轻代、老年代（Old Generation），以及方法区（也称为永久代在JDK\n> 7或之前的版本，或者元空间在JDK 8以后的版本）。\n>   * Full GC的执行时间通常较长，因为它需要扫描整个堆内存，识别不再存活的对象并进行清理。\n>   * Full GC可能导致系统停顿，因为在垃圾回收过程中，所有的应用线程都会被暂停，直到GC完成。\n>   * Full GC的触发条件通常与老年代的空间不足或需要整理碎片化的内存有关。\n>\n\n>\n> Minor GC和Full GC的主要区别在于它们针对的堆内存区域不同，执行频率和耗时也不同。Minor GC主要关注新生代的垃圾回收，而Full\n> GC则涉及整个堆内存的回收。在设计Java应用时，需要尽量减少Full\n> GC的次数，以保证系统的性能。同时，可以通过优化代码、减少内存泄漏和不必要的对象引用等方式来降低垃圾回收的频率和耗时。\n\n**学习指引：**[JVM: GC过程总结(minor GC 和 Full\nGC)](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2Fweixin_42615068%2Farticle%2Fdetails%2F102813947)\n\n## 9\\. 消息队列用途有哪些？\n\n**参考回答：**\n\n> 消息队列是一种重要的中间件技术，用于在分布式系统中实现异步通信，它的用途非常广泛。以下是消息队列的一些常见用途：\n>\n>   1. **解耦**\n> ：消息队列可以将应用程序解耦，发送者和接收者之间不直接通信，而是通过消息队列进行通信。这样可以降低系统间的耦合度，提高系统的灵活性和可维护性。\n>   2. **异步通信** ：发送者发送消息到消息队列后即可立即返回，不需要等待接收者处理完消息。这种方式可以提高系统的响应速度和吞吐量。\n>   3. **削峰填谷**\n> ：消息队列可以作为流量控制的工具，当系统负载较高时，可以将请求放入消息队列中，等待系统负载下降后再处理。这样可以平滑处理系统的高峰流量，保证系统的稳定性。\n>   4. **异步任务处理** ：将需要异步执行的任务发送到消息队列中，由后台工作线程消费消息并执行任务。这样可以提高系统的并发能力和处理效率。\n>   5. **日志收集**\n> ：将系统产生的日志消息发送到消息队列中，由日志消费者进行处理、分析、存储或者展示。这样可以集中管理日志，并且降低日志处理对系统性能的影响。\n>   6. **事件驱动架构**\n> ：消息队列可以用于构建事件驱动的架构，不同组件之间通过发送和接收消息来进行通信。这种架构可以实现系统的松耦合和高内聚，提高系统的可扩展性和可维护性。\n>   7. **分布式系统集成** ：在分布式系统中，消息队列可以用于不同系统之间的数据传输和集成，实现系统之间的解耦和通信。\n>   8. **顺序性保证** ：某些消息队列提供了消息的顺序性保证，可以确保消息按照发送的顺序进行处理，适用于一些有序性要求的场景。\n>\n\n**学习指引：**[新手也能看懂，消息队列其实很简单](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F52773169)\n\n## 10\\. MySQL的隔离级别有哪些？\n\n**参考回答：**\n\n> MySQL提供了四种事务隔离级别，分别是读未提交（Read Uncommitted）、读提交（Read\n> Committed）、可重复读（Repeatable\n> Read）和串行化（Serializable）。不同的隔离级别可以解决并发访问数据库时的各种问题，提供不同程度的隔离和数据一致性。\n>\n>   1. 读未提交（Read Uncommitted）：\n>\n>      * 最低的隔离级别，事务中的修改操作对其他事务是可见的，即未提交的修改可以被其他事务读取。\n>      * 存在脏读（Dirty Read）问题，即一个事务读取到了另一个未提交事务的修改结果。\n>   2. 读提交（Read Committed）：\n>\n>\n\n>   *     * 事务中的修改操作在提交之前对其他事务是不可见的，只有已提交的修改才能被其他事务读取。\n>\n>     * 解决了脏读问题，但可能存在不可重复读（Non-repeatable Read）问题，即在同一事务内多次读取同一数据可能会得到不同的结果。\n>\n>\n\n>   3. 可重复读（Repeatable Read）：\n>\n>\n\n>   *     * 保证在同一事务内多次读取同一数据时，得到的结果始终一致。\n>\n>     * 解决了不可重复读问题，但可能存在幻读（Phantom Read）问题，即在同一事务内多次执行查询，得到的结果集不一致。\n>\n>\n\n>   4. 串行化（Serializable）：\n>\n>\n\n>   *     * 最高的隔离级别，完全隔离事务，确保事务串行执行，避免并发问题。\n>     * 解决了幻读问题，但在高并发情况下会导致性能下降，因为事务需要串行执行。\n>\n\n**学习指引：**[MySQL的4种事务隔离级别你还不清楚吗？](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.zhihu.com%2Fquestion%2F600077805)\n\n## 11\\. MySQL默认是什么隔离级别？\n\n**参考回答：**\n\n> MySQL数据库的默认隔离级别是**可重复读（Repeatable Read）** 。\n>\n>\n> 在这个隔离级别下，同一个事务中多次读取同样记录的结果是一致的。这主要是因为MySQL使用了多版本并发控制（MVCC）机制来实现并发控制，避免了脏读和不可重复读的问题。但需要注意的是，可重复读隔离级别并不能完全避免幻读问题，即在事务执行过程中，其他事务可能插入或删除某些行，导致最终读取到的数据行数发生了变化。\n>\n> MySQL也支持其他三种隔离级别：读未提交、读已提交和串行化。\n>\n>\n> 这些隔离级别在数据一致性和并发性能之间提供了不同的权衡。在实际应用中，可以根据具体的业务需求和性能要求来选择合适的隔离级别。如果需要更高的并发性和性能，可以考虑使用较低的隔离级别，如读已提交；而如果对数据一致性有更高的要求，可以选择更高的隔离级别，如串行化。但请注意，高隔离级别可能会带来更大的性能开销。\n\n**学习指引：**[mysql默认事务隔离级别是什么？](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2Fksaar_%2Farticle%2Fdetails%2F104495954)\n\n## 12\\. 可重复读是什么概念？读未提交？串行化？\n\n**参考回答：**\n\n>\n> 在MySQL中，不同的隔离级别决定了事务如何与其他事务并发执行以及数据的一致性和可见性。以下是关于“可重复读”、“读未提交”和“串行化”这三种隔离级别的概念解释：\n>\n> **可重复读（Repeatable Read）**\n>\n> **可重复读**\n> 是MySQL的默认隔离级别。在这个级别下，一旦事务开始，该事务内部对同一数据的多次读取结果都是一致的，即使其他事务在此期间修改了该数据并提交。这是通过多版本并发控制（MVCC）实现的，每个事务都可以看到一个数据的一致快照，就像是在事务开始时拍摄的照片一样。这确保了同一事务中的多次读取操作不会受到其他事务的影响。\n>\n>\n> 然而，需要注意的是，虽然同一事务内的多次读取是一致的，但不同事务之间仍然可以并发修改数据，这可能导致“幻读”现象，即一个事务在读取某个范围内的记录时，另一个并发事务插入或删除了这个范围内的记录，导致前一个事务在后续的读取中看到了不同的行数。\n>\n> **读未提交（Read Uncommitted）**\n>\n> **读未提交** 是最低的隔离级别。在这个级别下，一个事务可以读取到其他事务尚未提交的数据。这可能导致脏读（Dirty\n> Read）问题，即读取到了未经验证的数据。如果其他事务回滚了这些未提交的数据，那么当前事务读取到的数据就是无效的或“脏”的。因此，读未提交隔离级别下，数据的一致性和可靠性无法得到保证。\n>\n> **串行化（Serializable）**\n>\n> **串行化**\n> 是最高的隔离级别。在这个级别下，事务是串行执行的，即一个事务必须等待前一个事务完成后才能开始执行。这确保了每个事务都能看到一个一致的数据视图，从而避免了脏读、不可重复读和幻读的问题。然而，由于事务是串行执行的，这大大降低了系统的并发性能，特别是在高并发场景下，可能导致性能瓶颈。\n>\n>\n> 在选择隔离级别时，需要根据具体的应用场景和需求进行权衡。如果业务对数据一致性要求非常高，且可以牺牲一定的并发性能，那么可以选择串行化隔离级别。如果业务对并发性能有较高要求，且可以容忍一定程度的数据不一致性，那么可以选择较低的隔离级别，如可重复读或读已提交。\n\n**学习指引：**[数据库隔离级别------\n串行化，可重复读，读提交，读未提交](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2Fweixin_43081805%2Farticle%2Fdetails%2F98493923)\n\n## 13\\. MySQL中的索引树是怎么维护的？\n\n**参考回答：**\n\n>\n> MySQL中的索引树（主要是B+树）的维护涉及多个方面，包括插入、删除和更新操作。这些操作都需要确保索引树的平衡和高效性。以下是关于MySQL中索引树维护的一些关键点：\n>\n>   1. **插入操作** ：\n>      * 当向表中插入新数据时，MySQL需要在索引树中找到合适的位置插入新的索引条目。\n>      * 如果插入的位置在叶子节点且有空余空间，直接插入。\n>      * 如果叶子节点已满，需要进行分裂操作。分裂后，可能需要向上层节点插入新的分裂键。\n>      * 为了保持树的平衡，可能需要进行一系列的分裂和重新平衡操作。\n>   2. **删除操作** ：\n>      * 当从表中删除数据时，相应的索引条目也需要从索引树中删除。\n>      * 如果删除的索引条目位于叶子节点，并且删除后该节点还有足够的条目，直接删除即可。\n>      * 如果删除后叶子节点条目过少（例如，少于某个阈值），可能需要与相邻的兄弟节点合并，或者从父节点“借用”条目。\n>      * 如果合并或借用操作导致父节点也需要调整，这个过程可能会向上层传播。\n>   3. **更新操作** ：\n>      * 更新操作在索引维护方面通常可以视为先删除旧条目，再插入新条目。\n>      * 如果更新的键没有改变，可能只需要更新叶子节点中的值部分。\n>      * 如果更新的键发生了改变，则需要在索引树中找到旧键的位置进行删除，并在新位置插入新键。\n>   4. **索引树的优化和重建** ：\n>      * 随着数据的插入、删除和更新，索引树可能会变得不那么紧凑或平衡，这可能导致性能下降。\n>      * 为了优化索引性能，MySQL提供了工具（如`OPTIMIZE TABLE`）来重建索引树，使其更加紧凑和平衡。\n>      * 重建索引通常涉及创建一个新的索引树，并将旧树中的数据逐步迁移到新树中。完成后，新树会替换旧树。\n>   5. **并发控制** ：\n>      * 在高并发环境下，多个事务可能同时尝试修改索引树。\n>      * MySQL使用锁机制（如行锁、表锁或元数据锁）来确保索引树的并发修改不会导致数据不一致。\n>      * 锁的使用和粒度取决于存储引擎（如InnoDB或MyISAM）和具体的配置。\n>   6. **日志和恢复** ：\n>      * 为了确保在系统崩溃或其他故障情况下能够恢复数据，MySQL使用重做日志（如InnoDB的redo log）来记录对索引树的修改。\n>      * 在系统启动时，MySQL可以读取这些日志并重新应用修改，以恢复索引树到一致的状态。\n>\n\n**学习指引：**[MySQL：插入数据时，是如何维护好不同索引的B+树的](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2Fzhizhengguan%2Farticle%2Fdetails%2F122134407)\n\n## 14\\. 什么叫B+树？\n\n**参考回答：**\n\n> B+ 树是一种平衡树数据结构，通常用于实现有序的索引结构。它是 B 树的变种，在 B 树的基础上做了一些改进和优化。\n>\n> B+ 树的特点包括：\n>\n>   1. **有序性** ：B+ 树的所有叶子节点被链接成一个有序链表，这使得范围查询和区间扫描变得更加高效。\n>   2. **平衡性** ：B+ 树保持平衡，即所有叶子节点到根节点的距离相同，这确保了检索效率的稳定性。\n>   3. **多路性** ：B+ 树的每个节点可以拥有多个子节点，通常被称为“多路平衡”，这降低了树的高度，减少了磁盘 I/O 次数，提高了检索效率。\n>   4. **非叶子节点仅存储索引信息** ：与 B 树不同，B+ 树的非叶子节点只存储索引信息，而不存储实际的数据，这使得 B+\n> 树的节点更小，能够容纳更多的索引条目。\n>   5. **叶子节点存储数据记录** ：B+ 树的叶子节点存储实际的数据记录，这样可以避免在非叶子节点存储大量的数据，减少了索引的维护成本。\n>\n\n>\n> B+ 树通常被用于数据库系统中实现索引结构，特别是在关系型数据库管理系统（RDBMS）中，例如 MySQL、PostgreSQL 等。B+\n> 树的高效性和稳定性使得它成为了一种理想的索引结构，能够满足大多数数据库系统的需求。\n\n**学习指引：**[什么是B+树？](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2Fjiang_wang01%2Farticle%2Fdetails%2F113739230)\n\n## 15\\. 为什么要采用B+树最为索引？\n\n**参考回答：**\n\n> B+ 树通常被用作数据库系统中的索引结构，而不是其他类型的树，主要基于以下几个原因：\n>\n>   1. **高效的检索和范围查询** ：B+\n> 树的有序性和平衡性使得在进行查找、范围查询或区间扫描时非常高效。由于所有叶子节点被链接成一个有序链表，因此范围查询的性能非常好，可以快速地找到满足条件的数据记录。\n>   2. **稳定的检索性能** ：B+ 树的平衡性确保了树的高度相对较小，因此检索操作的性能是稳定的，不会因为数据量的增加而显著下降。这使得 B+\n> 树适用于大型数据库系统，能够处理大量数据并保持高效的检索性能。\n>   3. **适用于磁盘存储** ：B+ 树的设计考虑了磁盘 I/O 操作的特点，通过多路平衡的节点结构和叶子节点存储数据记录的方式，减少了磁盘 I/O\n> 次数，提高了数据访问的效率。这使得 B+ 树非常适合在磁盘上存储大型数据集，并且能够有效地利用磁盘空间。\n>   4. **适用于范围查询** ：B+\n> 树的有序叶子节点链表和多路平衡的节点结构使得范围查询的性能非常好。这对于数据库系统中经常需要执行的范围查询操作来说是至关重要的，例如按时间范围或者按字母顺序查询数据。\n>   5. **易于扩展和维护** ：B+\n> 树的平衡性和多路性使得它们易于扩展和维护。当数据库中的数据量增加时，可以很容易地添加新的索引条目，并且不会显著影响整个树的结构。此外，B+\n> 树的节点结构简单，易于实现和维护。\n>\n\n>\n> B+ 树具有高效的检索性能、稳定的性能表现、适用于磁盘存储、适用于范围查询以及易于扩展和维护等优点，因此被广泛应用于数据库系统中作为索引结构。\n\n**学习指引：**[面试官：为什么MySQL的索引要使用B+树，而不是其它树？比如B树？](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.zhihu.com%2Fquestion%2F633493697)\n\n## 16\\. Linux的命令平时用到哪些?\n\n**参考回答：**\n\n> 在日常使用 Linux 系统时，经常会使用以下一些常用的命令：\n>\n>   1. **文件和目录操作** ：\n>      * `ls`：列出当前目录下的文件和子目录。\n>      * `cd`：切换工作目录。\n>      * `pwd`：显示当前工作目录的路径。\n>      * `mkdir`：创建新目录。\n>      * `rm`：删除文件或目录。\n>      * `cp`：复制文件或目录。\n>      * `mv`：移动文件或目录。\n>      * `touch`：创建空文件或更新文件的时间戳。\n>   2. **文件查看和编辑** ：\n>      * `cat`：显示文件内容。\n>      * `more` 或 `less`：分页查看文件内容。\n>      * `head` 和 `tail`：分别显示文件的开头和结尾部分。\n>      * `vi` 或 `vim`：文本编辑器，用于编辑文件。\n>   3. **文件权限管理** ：\n>      * `chmod`：修改文件或目录的权限。\n>      * `chown`：修改文件或目录的所有者。\n>      * `chgrp`：修改文件或目录的所属组。\n>   4. **系统信息查看** ：\n>      * `uname`：显示系统信息。\n>      * `df`：显示磁盘空间使用情况。\n>      * `free`：显示系统内存使用情况。\n>      * `top`：实时显示系统资源占用情况。\n>      * `ps`：显示当前进程信息。\n>   5. **网络操作** ：\n>      * `ping`：测试网络连接。\n>      * `ifconfig` 或 `ip`：显示和配置网络接口信息。\n>      * `ssh`：远程登录到其他主机。\n>      * `scp`：在本地和远程主机之间传输文件。\n>   6. **压缩和解压缩** ：\n>      * `tar`：打包和解压缩文件。\n>      * `gzip` 和 `gunzip`：压缩和解压缩文件。\n>   7. **系统管理** ：\n>      * `shutdown`：关闭系统。\n>      * `reboot`：重新启动系统。\n>      * `service` 或 `systemctl`：管理系统服务。\n>      * `cron`：定时执行任务。\n>\n\n**学习指引：**[常用Linux命令及其作用](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2Fqq_40846669%2Farticle%2Fdetails%2F119704069)\n\n## 17\\. Linux中查看某个进程占用率较高的话，用哪个命令？\n\n**参考回答：**\n\n> 要查看 Linux 中某个进程的 CPU 和内存占用率较高的话，可以使用 `top` 命令。 `top`\n> 命令是一个动态实时显示系统运行进程信息的命令行工具，可以列出当前系统中所有正在运行的进程，并按照 CPU 和内存占用率进行排序。\n>\n> 要查看某个进程的 CPU 和内存占用率，你可以按以下步骤操作：\n>\n>   1. 打开终端窗口。\n>   2. 运行 `top` 命令。\n>   3. 在 `top` 的交互界面中，你可以按下 `Shift + P` 来按 CPU 占用率排序，或者按下 `Shift + M`\n> 来按内存占用率排序。这样就会把占用率较高的进程排到前面。\n>   4. 找到的进程，查看其 CPU 和内存占用率以及其他相关信息。\n>\n\n>\n> 此外，也可以使用 `htop` 命令，它是 `top` 命令的增强版，提供了更加友好和交互式的界面，并且支持鼠标操作。\n\n## 18\\. 我们想查找一个日志文件，空指针异常，查这个关键字用哪个命令查找？\n\n**参考回答：**\n\n>\n> 如果想在Linux系统中查找包含“空指针异常”关键字的日志文件，你可以使用`grep`命令。`grep`是一个强大的文本搜索工具，它可以搜索含有特定模式的行。\n>\n> 以下是如何使用`grep`命令来查找包含“空指针异常”关键字的日志文件：\n>  \n>  \n>     grep -r \"空指针异常\" /path/to/logs/\n>  \n>\n> 这里的参数解释如下：\n>\n>   * `-r` 或 `-R`：递归搜索，即在指定目录及其子目录中搜索。\n>   * `\"空指针异常\"`：你要搜索的关键字或模式。\n>   * `/path/to/logs/`：你要搜索的目录路径。你需要替换为实际的日志文件所在目录。\n>\n\n>\n> 如果你想忽略大小写，可以使用`-i`选项：\n>  \n>  \n>     grep -ri \"空指针异常\" /path/to/logs/\n>  \n>\n> 如果你还想看到匹配行的行号，可以添加`-n`选项：\n>  \n>  \n>     grep -rin \"空指针异常\" /path/to/logs/\n>  \n>\n>\n> 如果你知道日志文件的具体名称或模式，你还可以结合使用`find`命令和`xargs`或`-exec`选项来更精确地搜索。例如，如果你知道所有的日志文件都是以`.log`结尾的，你可以这样做：\n>  \n>  \n>     find /path/to/logs/ -name \"*.log\" -print0 | xargs -0 grep -i \"空指针异常\"\n>  \n>\n> 或者：\n>  \n>  \n>     find /path/to/logs/ -name \"*.log\" -exec grep -i \"空指针异常\" {} +\n>  \n>\n>\n> 这些命令会搜索`/path/to/logs/`目录及其子目录中所有以`.log`结尾的文件，并查找包含“空指针异常”的行。记得将`/path/to/logs/`替换为你的实际日志文件路径。\n\n>\n> **[面经专栏直通车，欢迎订阅](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fcreation%2Fmanager%2FcolumnDetail%2F0xKkDM)**\n\n> **[面经专栏下载，\n> 点击跳转](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fgithub.com%2FLi-\n> CW%2FJob-Hunter)**\n\n>\n> [分享者thehou](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F67eaedce9b534acabd3c5a96a8ae518d)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603333991181078528?sourceSSR=users",
        "title": "QQ客户端开发（CPP）·日常实习",
        "content": "人生第二次面试。上次面试也是鹅，不过没开摄像头，应该是KPI。这次开摄像头了，体验良好，发个面经攒攒人品。\n\n1.项目：\n\n静态链接和动态链接的区别\n\n页表，虚拟地址到物理地址的转换，PAE技术\n\n2.实习：\n\n项目的实现，使用的Windows API\n\nhook机制（忘记了）\n\nsendmessage和postmessage（不会，面试官说都是发送消息的Windows API，一个同步一个异步）\n\n3.代码：\n\n单例模式（保证线程安全，不会，心态小崩）\n\n反转链表\n\n4.八股：\n\n智能指针，shared_ptr的原理\n\n构造函数和析构函数能否抛出错误（不会，答案是都可以）\n\nnew和malloc的区别\n\n多态，虚函数的实现\n\n子类重写父类后，怎么找到重写的函数\n\n虚函数表的构建（结合项目问）\n\n__stdcall（不会，上网查了以后发现自己学过忘记了QAQ）\n\n四种cast\n\n5.评价：\n\n面试官：“项目都是自己做的，基础比较扎实，还需要复习一下书上的课后习题。”\n\n我：“好”，“好的”，“嗯嗯”。。。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603339021946744832?sourceSSR=users",
        "title": "字节商业产品与技术java面经",
        "content": "难绷，不是应届投成了应届，然后晚上飞速挂掉，那当时捞我干啥。\n\n1.一个博弈论问题，假如有100个乒乓球，你和对手每次都能拿1-5个，谁拿了最后的球谁就获胜，在你先手时必胜策略是什么。\n\n（第一次拿4个，之后保证 每次拿的球都是6的倍数）\n\n2.jvm内存结构\n\n3.多线程，线程池\n\n4.垃圾回收器介绍\n\n5.线程的状态\n\n6.可达性分析算法\n\n7.最后是一道算法题，算正方形最大面经，dp\n\n一共就只有50分钟，然后智力题20分钟，算法10分钟，中间我把自己项目相关去掉了。\n\n写面经求上岸\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603332981284950016?sourceSSR=users",
        "title": "携程 SRE工程师 暑期实习一面",
        "content": "总体来说面试官人很好，没有任何刻意刁难的行为，面试完如沐春风。许愿二面。（不过三年前我面完携程一面也是类似的感觉，然后过半个月官网一查发现被挂了……）\n\n流程：\n\n  * 上来先要求自我介绍（开始简历吟唱）\n  * 你的研究方向的什么？能讲讲具体大论文准备写什么吗？（开始课题吟唱）\n\n后面的问题我按照几个大块归纳了一下，基本是按照这个顺序问的：\n\n【对职责的理解】\n\n  * 你在自我介绍时提到了希望应聘SRE工程师，那么SRE是什么，为什么要SRE？（面试之前草草翻阅了一下Google SRE这本书的大纲和前几章，然后直接开始吟唱）\n  * 你也提到了DevOps，那么SRE和DevOps的区别和联系是什么？（常规问题，可以参考Google SRE的解释，继续吟唱）\n  * 一个假象的场景，假如生产环境上一个机子上cpu使用率一直是100%，你要怎么排错？（这里我回答的并不好，面试官给出了正确思路的开头：要先切流量，让对应的机子/服务离开生产环境，再进行分析排错）\n  * 如何看待运维时的手工操作和写脚本之间的关联（可以参考Google SRE里的描述，继续吟唱）\n\n【八股文】（没有遇到比较难的，全程吟唱）\n\n  * 为什么要用线程池，有什么优势\n  * 网络：tcp和udp的区别\n  * 数据结构：栈和队列的区别\n\n【算法题】\n\n  * 整数数组中寻找重复出现了两次的数字（这里我回答的不好，没有给出利用位运算的最优解，只说了用哈希表的暴力做法，后来面试官引导了我使用其它方法）\n\n【简历（实习相关）】（这里我也提前准备了，直接吟唱）\n\n  * 讲一个你遇到的最困难的问题，以及你是如何解决它的\n  * 你提到这个问题是来自开源项目的，你后来有向上游反馈过吗\n\n【其它】\n\n  * 我看你简历里好像没写，那你会不会java？（我回答其实会写，但对比较新的新特性不是很熟悉）\n\n【反问环节】\n\n  * 您的职责是什么？（面试官告诉了我SRE工程师在携程里只负责DevOps的一部分，其它比如CI/CD由基础设施部门负责。同时SRE工程师可能还要负责用一些机器学习方法识别异常流量等等工作）\n  * 对我的面试表现有没有什么建议？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603331218674909184?sourceSSR=users",
        "title": "美团后端 实习一面",
        "content": "2024.3.26 美团一面 30min\n\n1\\. 自我介绍\n\n2\\.\n第一个项目逐个功能和实现介绍，布隆过滤器修改困难如何解决的问题没答上来，这里复盘一下可以将0/1的存储方式改为比如short存储映射到当前位的个数，映射时+1，删除时-1\n\n3\\. 问了一个java hashmap是否线程安全的问题（不会Java，但也应该答出来的，想多了这里有点）\n\n4\\. 后面的项目选一个，介绍难点、如何解决的\n\n5\\. 两道easy算法：判断链表有环、跳台阶（进阶版的有个数学公式方法没反应过来）\n\n6\\. 反问环节：部门业务，建议（很客气的评价了一下）然后就拜拜了😭\n\n暑期实习的第一场面试，感谢美团🙏\n面试官很nice面试过程中会一直给反馈，我自己感觉问的问题都比较基础，可能因为项目太简单了没什么可以深挖的地方，语言这块因为不是java也不太问，八股没有，感觉要凉了。总结下来项目的部分还得更熟悉一点，有些地方问的时候差点忘了还在现想。还有就是项目的部分想想办法多塞点东西吧，java也尽可能先了解一些基础。还有一个点就是遇到不会的或者不熟悉的问题，先想一想不要着急回答，尽可能体现自己的思考，最好不要直接说不会或者乱猜。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603316154467188736?sourceSSR=users",
        "title": "小虫科技一面（凉经）",
        "content": "自我介绍\n\n介绍一下自己的项目\n\n黑马点评项目，以下为项目拷打：\n\n附近的店铺怎么实现的（redis中的geo）\n\ngeo怎么进行查询的（以自己为中心点，多少米为半径进行查询，对距离进行排序然后显示在客户端）\n\n数据库中shop表的结构（id,店铺名，经度，维度）\n\n那么坐标你是从那么获得的（假数据）\n\n说一下里面涉及到的业务场景（店铺上架描述优惠券，然后用户去抢购，描述了一下流程）\n\n两个人同时去抢最后一张票，发现都是一张，那么怎么保证不超卖的呢（寄，讲过吧，我忘了）\n\n怎么加的锁（redisson加锁，锁住用户id）\n\n如果没有获取到锁，那么怎么办（使用Thread.sleep睡一会再尝试获取锁）\n\n这样的话并发量很低（自己挖坑自己跳呗，寄），如果一个用户不断的请求，那么会导致很多的请求线程都会阻塞（我服了，真笨啊我，这里直接寄）\n\ntomcat线程数怎么配的（和之前说浪费线程导致线程资源耗尽有关，并提问了tomcat能承受多少个线程）\n\n项目拷打结束，转战八股：\n\nredis除了当锁其他的应用场景\n\n数据过期策略（定时删除和惰性删除）\n\n数据淘汰策略\n\nredis的持久化方式（还得背背，没说太好，以为太简单了，实际有些词语模棱两可）\n\nAOF的流程（真离谱，这个我是真不会）：先把写操作写入redis中，如果不报错则记录到aof文件中，然后根据配置的刷盘策略，当符合刷盘策略的条件则触发重写，将相同key之前的操作进行覆盖以减小aof文件的大小，最后redis宕机，则读取aof文件中的操作恢复数据（不知道对不对，一会整理一下）\n\nAOF和RDB的优缺点\n\nAOF和RDB的混合模式（先是rdb，触发aof重写后后面全是aof）\n\nredis的三种集群模式\n\n哨兵模式怎么解决脑裂问题（背过，没整理到面经上，忘了，靠，不会）\n\nredis的事务\n\nredis支持回滚吗\n\nredis为什么快\n\nIO多路复用\n\nIO模型有哪些（不会，答得AIO，BIO以及NIO,寄）\n\n又回到项目\n\n除了redis项目中还用到什么东西（临场不会，说的单点登录）\n\n八股：\n\nmysql中的锁\n\n乐观锁有没有用过\n\n数据库中的隔离级别\n\n说一下幻读\n\n可重复读为什么不能解决幻读的问题（完犊子，只会背八股的我不会）\n\n反问：\n\n1.我的面试表现以及有什么需要提高的地方？\n\n答：面试表现还可以（违心话），提高的地方：复杂场景的实现\n\n2.面试流程有几面？\n\n答：二面\n\n3.实习生过去做什么项目？\n\n答：就是做我们的项目呀，啥也不说（真傻逼，好歹说一下啊）\n\n总结：项目细节还是不到位，八股背的有些点也不行，需要继续背。\n\n面试体验：垃圾，垃圾，面试官说话语速快声音小，说话带有轻蔑的语气，全程说“哦”，反问环节不说过去做什么项目，那我还问什么，直接说那我没什么可问的了。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603313860975546368?sourceSSR=users",
        "title": "FUNPLUS第二场笔试算法题",
        "content": "FUNPLUS2024春招服务器开发工程师试卷第二场\n\n第一题：感觉太难了，然后return true过了80，之后用random一下就ac，笑死\n\n    \n    \n    /**\n         *趣小加最近痴迷于一种扩展版的24点游戏，其规则如下：你有 n 张扑克牌，\n         * 每张扑克牌表示[1,13]范围内的一个数字。你可以使用['+'，'-'，'*'，'/']和括号将这些扑克牌排列成数学表达式，\n         * 以获得值为 points 的表达式。\n         * 除法运算符 '/' 表示实数除法，而不是整数除法。 例如， 8 / (1 - 2 / 3) = 24。\n         * 每个运算都在两个数字之间。特别是，不能使用 “-” 作为一元运算符。\n         * 例如，如果 cards = [1,1,1,1] ，则表达式 “-1 -1 -1 -1” 是 不允许 的。\n         * 不能把数字串在一起。 例如，如果 cards = [1,4,1,0] ，则表达式 “14 + 10” 无效。\n         *\n         * 输入： 一个整数数组cards，表示扑克牌上的数字；一个整数 points，表示期望得到的表达式的值。\n         *\n         * 输出：返回一个布尔值，表示是否可以通过排列扑克牌和插入运算符及括号，得到一个值为 points 的表达式。\n         *\n         * 判断给定的扑克牌通否通过排列和四则运算得到指定的值\n         * @param cards int整型一维数组 扑克牌对应的数字\n         * @param points int整型 扑克牌需要通过排列和四则运算得到的值\n         * @return bool布尔型\n         */\n        public boolean judgePoints (int[] cards, int points) {\n            // 全排列\n            // 括号排列\n            // 运算符排列\n            Random random = new Random();\n            int r = 1 + random.nextInt(10);\n            if (r <= 8) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    \n\n第二题：判断从多副牌中抽取五张牌，判断是否是顺子，且10、11(J)、12(Q)、13（k）、1(A)也算顺子\n\n    \n    \n    public boolean isStraight (ArrayList<Integer> nums) {\n            Collections.sort(nums);\n            int zeroCnt = 0;\n            for (int num: nums) {\n                if (num == 0) {\n                    zeroCnt++;\n                }\n            }\n            // 有重复的除了大小王肯定不行\n            for (int i = 1; i < nums.size(); i++) {\n                if (nums.get(i) != 0 && Objects.equals(nums.get(i), nums.get(i - 1))) {\n                    return false;\n                }\n            }\n    \n            // 还要用一次\n            int zeroCnt2 = zeroCnt;\n    \n            // 判断是否为连续的\n            boolean flag1 = true;\n            for (int i = zeroCnt + 1; i < nums.size(); i++) {\n                if (nums.get(i) == nums.get(i - 1) + 1) {\n                    continue;\n                } else {\n                    // 可能有重复的牌\n                    if (nums.get(i - 1) + 1 + zeroCnt >= nums.get(i)) {\n                        zeroCnt -= nums.get(i) - 1 - nums.get(i - 1);\n                    } else {\n                         flag1 = false;\n                         break;\n                    }\n                }\n            }\n    \n            boolean flag2 = true;\n            // 判断是否是 10 11 12 13 1\n            int[] judge = new int[5];\n            for (int i = zeroCnt2; i < nums.size(); i++) {\n                int num = nums.get(i);\n                if (num >= 10 && num <= 13 || num == 1) {\n                    if (num == 1) {\n                        judge[4] = 1;\n                    } else {\n                        judge[num - 10] = 1;\n                    }\n                }\n            }\n            //\n            int judgeCnt = 0;\n            for (int i :judge) {\n                if (i == 1) {\n                    judgeCnt++;\n                }\n            }\n            if (judgeCnt + zeroCnt2 != 5) {\n                flag2 = false;\n            }\n    \n            // 满足一个就行\n            return flag1 || flag2;\n        }\n    \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603304321404452864?sourceSSR=users",
        "title": "某小厂，四面（领导面）",
        "content": "hr给的会议号是18.30，然后说可能要晚一点，我以为是18.30之后，结果18.10就让我入会了，然后没看手机，过了10分钟才进去，让这位总经理等了10分钟[笑cry]糊了，感觉要🐔  \n1.自我介绍  \n2.实习收获  \n3.为什么不待在实习公司  \n4.如果你发现领导给的测试方案有错误，你怎么办（纯纯压力面），我说了一堆后，然后又问如果领导还是不同意你的意见怎么办，我又说了一堆，然后又问如果领导还是不同意怎么办，就要坚持错误的方案😅，然后我又一顿输出，估计面试官看我扛不住了，就不问了  \n5.问我兴趣爱好，问工作与爱好怎么协调  \n6.如果工作时间很忙，平时没时间关注自己的爱好，你该怎么办，能不能接受996这种工作状态  \n（接受就完了，当牛做马就行了😭）  \n反问  \n公司业务，测试工作，正常工作时间，无了  \n我都这么牛马了，能不能给个offer啊😭\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603298656506183680?sourceSSR=users",
        "title": "美团 暑期实习 安全工程师 一面凉经 30min",
        "content": "1、面试官自我介绍，说自己的部门是做云相关安全的\n\n2、自我介绍\n\n3、对着简历开问，主要围绕了 QEMU 做仿真的情况，然后扩展了一下 QEMU 是不是能去做软件虚拟化\n\n4、问了问 DeepFool ，然后讨论了之后发现对神经网络的工具不算在传统的网络安全领域\n\n5、面试官更注重我简历上写的大数据开发，但实际上这东西没咋做，了解不深。问了 hadoop 、spark 的一些操作，没答上来\n\n6、strcpy 和 memcpy 的区别\n\n7、c 的函数指针是啥\n\n8、讲一下 CTF 里边协议分析题是怎么做的？ wireshark 是怎么抓包的有了解吗？\n\n9、web 漏洞的水平咋样？简单说一下（讲了几个典型洞）\n\n10、有了解 win 病毒的原理吗？简单说说\n\n11、dll 劫持和 dll 注入\n\n12、反问，问了面试表现和美团的自动化挖洞业务\n\n面试下来，总体感觉很舒服。虽然也有点紧张（第一次面大厂），但总体氛围是像在大学讨论技术问题一样。面试官也很随和，很多硬件方面的东西也直说自己不了解，并且也会主动解释一些我不了解的概念。\n\n最后面试官推荐我去报新能源车企和一些硬件厂商，互联网大厂还是更看重渗透方面。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603296179086000128?sourceSSR=users",
        "title": "美团 一面",
        "content": "3.29 复活赛，上一次问了一堆简单的问题，等了三天挂了，这次难度也不高\n\n拷打项目\n\n1、 Redis 字符串 SDS\n\n2、 缓存击穿，缓存穿透\n\n3、 Sentinel限流的原理，如何设计一个QPS限流\n\n4、 MySQL事务隔离级别，默认隔离级别，如何解决幻读，脏读问题\n\n5、 MySql数据的存储结构\n\n6、 聚簇索引和非聚簇索引\n\n7、 Java的锁，synchronized和Reentrantlock的了解，为什么synchronized是非公平锁\n\n8、 情景题：如何实现抢红包的功能\n\n9、 算法 easy\n\n总耗时58min，估计挂了\n\n================================\n\n发现看的人挺多的，更新一下第一次的面经\n\n3.20 一面凉\n\n拷打项目\n\njava如何比较两个对象\n\n线程睡眠的时候会释放资源吗\n\n什么情况下会用到数组\n\n对反射的了解\n\nspring的ioc和aop的原理\n\nioc的循环依赖\n\n开发项目用的jdk版本是什么\n\ng1回收器了解吗\n\njvm调优做过吗 答曰：无\n\n手动触发oom怎么触发\n\nmysql默认的隔离级别，聚簇索引和非聚簇索引有什么区别\n\n数据库表 （a，b，c） 联合索引 查询条件 where b = ? and c = ? and a = ? ，索引是否失效\n\n字段abcd 查询和索引条件不变 select *有几次IO\n\n对于redis你有什么应用\n\nredis缓存击穿\n\nredis的数据结构\n\n如果大家都用的同样的技术栈，你觉得有必要深入研究吗\n\n你平常是怎么反复练习这些基本功的\n\n算法 删除倒数第k个节点\n\n反问\n\n都答上来也不耽误一面挂\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603293621676167168?sourceSSR=users",
        "title": "腾讯CSIG 后台一面",
        "content": "2024.3.29 csig一面 60min\n\n时间太久了，尽可能回忆一下\n\n  1. 自我介绍\n  2. 本科专业，现在方向，哪里人\n  3. 有没有刷过题，刷过多少题\n  4. redis了解哪些数据结构及底层实现\n  5. 什么是RAII设计模式，哪些场景下会用到\n  6. C++基类的析构函数是否为虚函数，如果不是会发生什么\n  7. 指针占多大内存，如何判断机器是几位的\n  8. map, unordered_map的数据结构，有没有实现过\n  9. 为什么数据库索引用B+树不用红黑树\n  10. Linux用过吗，grep干嘛的，awk（这个不知道），查看cpu内存等情况的命令\n  11. gdb调试用过吗，gdb调试多线程（这个不会）\n  12. git用过吗，git rebase怎么回事（只在两个作业里用到了，面试官疑惑那怎么会知道git rebase，我觉得可能面试官不太喜欢刷题痕迹吗，还是单纯好奇，不清楚）\n  13. 一道算法题，跟上次一样最大连续子数组\n  14. 写一个二分查找\n  15. KMP（直说了没复习到）\n  16. A*算法（瞎说了一会最后表示忘了不会，这个A*查过很多次了查了忘忘了查，好像不是某种具体的算法而是一种思路）\n  17. dijkstra算法说一下思路（可能本来想让写来着，时间不太够了）\n  18. 工作规划，为什么不去国企公务员\n  19. 反问：部门业务、工作氛围（相比于大多数挺好的，这个问题后来想想没必要问）、工作作息（985）\n  20. 回去等通知吧~\n\n总结：面试官很nice的，整体感觉下来更重视基础和对一些问题的思考过程。问的问题也没有八股，基本上是从简历里延伸出来的点。最后反问环节还表示了什么都可以问哈哈哈，可能上次面评里记录我问了不该问的，还是没敢问建议[牛泪]\n\n面了几场吧总结下来感觉还是平时的积累更重要，透过对问题回答的深度就能体现出来，还是要注重积累，发现问题的时候不要得过且过，一定要仔仔细细地弄清楚。以及面试官会给反馈但都是一样的反馈，有时候也不知道自己答得对不对，可能答错了面试官知道你已经跑偏了也嗯，这样回去也不知道自己表现得好不好也很难复盘。但是总体而言还是很有收获的。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603290878257426432?sourceSSR=users",
        "title": "中汽研 提前批 面经",
        "content": "3.14开\n\n4.23投 统招\n\n##### 5.28测评\n\n1天内完成\n\neas\n\n60min 错估时间，前面做慢了，后面好几题都是蒙的\n\n单选：语言理解（选词填空、文段理解、病句）x10、简单数学（找规律、应用题）x10、演绎推理x10、图形推理x10、应用题x10、图表3x5\n\n20min\n\n心理测评（对题干描述选非常符合/比较符合/比较不符合/非常不符合）x 140\n\n##### 6.2一面\n\n30min\n\n群面（一个主持人） 10人 （9个Java后端 1个管理）\n\n  * 形体展示\n  * 每人1min演讲（大一大二实习好不好）（没控制好时间讲到一半）\n  * 每人30s点评\n  * 每人一句话说明意向岗位\n\n后续无消息 估计不匹配\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603282557504868352?sourceSSR=users",
        "title": "蚂蚁数据分析暑期实习面经｜数字金融｜二面",
        "content": "面经06[mark一下]|【蚂蚁数据分析暑期实习面经-二面】电话面试\n\n1.在xx实习中承担什么工作？有什么难点？\n\n2.在xx实习中做了哪些工作？有哪些工作是自己主导的？\n\n3.为什么选择蚂蚁？为什么选择这个部门的数分？\n\n4.假如要在某地开一家汽车租赁公司，如何评估市场体量？\n\n[明天发offer]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603277035657523200?sourceSSR=users",
        "title": "美团 前端 暑期实习 二面（已offer）",
        "content": "![](https://uploadfiles.nowcoder.com/message_images/20240329/550678068_1711704355872/discuss_1711704353118.jpeg)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603271473498714112?sourceSSR=users",
        "title": "58同城-后端开发转正实习-一面",
        "content": "总共三十分钟不到\n\n### 八股\n\n  1. 实习项目介绍\n  2. 如何理解RPC，它解决了什么问题？\n  3. 介绍一下HTTP协议\n  4. 介绍一下TCP和UDP协议\n  5. 说一下TCP拥塞控制的算法（只记得慢启动和快重传了...），主要是用来解决什么问题的？\n  6. HTTP常见状态码\n  7. HTTP协议处于网络模型的第几层？\n  8. 对socket编程有没有了解？（不了解）\n  9. DNS是什么？具体流程是什么样的？\n  10. 线程池底层实现原理了解吗\n  11. 线程与进程的区别\n  12. 常见的进程通信方式，共享内存方式怎么同步？\n  13. 死锁的条件？预防方法\n  14. synchronized 和 ReentrantLock 的区别\n  15. 代码题：实现一个方法将一个字符串转化为数字，需要考虑溢出和异常字符处理\n  16. 算法题：队列实现栈，栈实现队列\n\n### 反问\n\n  1. 什么业务\n\n面试官说是做基础自研建设的，rpc、gateway什么的\n\n### 总结\n\n没什么感觉，面完秒挂。好好享受周末喽~\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603270423714824192?sourceSSR=users",
        "title": "蔚来仿真研发实习生一二面面经",
        "content": "之前在某自驾公司实习过，所以面试官基本上都比较感兴趣\n\n## 一面（30mins）\n\n纯聊业务，因为面试官认识我之前的leader。。。。。。\n\n## 二面（45mins）\n\n业务20mins\n\n  1. C++ 内存布局\n  2. delete\n  3. lambda表达式写一下，语法\n  4. const和static讲一下\n  5. 智能指针有哪些，如何解决循环引用，原理是啥?\n  6. 多线程智能指针能如何保证正常销毁对象？\n  7. 没有智能指针咋办，怎么减少内存泄漏？valgrind，raii？\n  8. cmake语法讲一下，add library，public private字段意义是什么\n\n算法题：\n\n自己手写一个二叉搜索树实现查询和插入，并写个案例\n\n后续：OC了，但是有更好的offer就不去了\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603268430774423552?sourceSSR=users",
        "title": "【暑期实习】3.29 美团一面",
        "content": "上次挂后被捞了，继续一面\n\n刚开始问了什么时候能到岗，实习多长时间。感觉团子好像更想要实习时间长的同学。。\n\n1、自我介绍\n\n2、乐观锁解决超卖问题，乐观锁在项目中是如何使用的？\n\n3、说一下 Redisson 分布式锁解决一人一单问题\n\n4、秒杀接口的整个处理流程，涉及到几张表\n\n5、讲一下乐观锁和悲观锁，乐观锁是公平锁吗\n\n6、讲一下布隆过滤器\n\n7、Java 中对象的生命周期\n\n8、讲一下强引用和弱引用\n\n9、挑一个垃圾收集器讲一下，选了CMS\n\n10、算法题，给了一个数组；有多次操作，每次操作指定一个元素不翻倍；求最终操作后数组的和\n\n11、反问有哪些需要提升的地方，答项目太简单了。。\n\n\\---\n\n太紧张了，感觉说话卡嗓子。一直忍不住咳嗽，还喝水。。\n\n面试 debuff：八股文吟唱能力 - 50%，编码能力 - 50%\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603262798889512960?sourceSSR=users",
        "title": "天津执理教育科技（26分钟飞书）",
        "content": "**感觉就随便问了问，kpi了o(╥﹏╥)o**\n\n## 过程\n\n**自我介绍（简单的名字学校技术栈）**\n\n**问算法经历（没有）**\n\n**46级（就4级过了）**\n\n**React相关问题**\n\n**props和useState两者差别（没打出来啥，脑子蒙蒙的，不过搜了一下答案也没啥东西奥(**_^▽^_)）\n\n  * **props 单向数据流 父组件向组件传递的数据（只读性）（默认参数声明类型）**\n  * **state 用于组件保存，控制，及修改自己的状态（自己的数据，可更改）**\n  * **context 上下文传递数据 可以传递一个可以更改的数据的方法**\n\n**react函数组件 hook简单举例**\n\n  * **useState**\n  * **useEeffect**\n  * **useMemo**\n  * **useCallback**\n  * **useRef**\n  * **useContxt**\n\n**useMemo和useCallback用法**\n\n  * **useMemo让一段计算在开始运行一次，后续只有依赖的数据发生变化时才重新运算**\n  * **useCallback缓存一个方法，让方法不会每次更新时重新创建**\n\n**useEffect(模拟生命周期)**\n\n  * **不传第二个参数 = componentDidMount 和componentDidUpdate**\n  * **第二个参数传空数组 = componentDidMount**\n  * **第二个参数数组里放某个数据 = watch监听**\n\n**useContext 的使用场景**\n\n  * **useContext-更方便的解析context的provider的数据**\n  * **各个组件传值**\n\n**服务端渲染 next（简单说了一下）**\n\n**res React Server Component(没听说过)**\n\n**tailwindCss**\n\n**token登录验证**\n\nNodeJs\n\n**flex布局和grid布局**\n\n**git**\n\n**css页面复现**\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603268966248640512?sourceSSR=users",
        "title": "微软日常实习客户端一二面",
        "content": "## 一面（40mins）\n\n内存碎片是怎么样的，定义是什么？\n\n聊了十分钟实习的项目的问题\n\nprotobuf的理解是什么，你怎么利用protobuf设计的思想的\n\n主从reactor到底是啥\n\nreact，那你了解过diff算法吗？\n\ndocker有什么好处和坏处\n\n算法题：\n\n  1. 生产者消费者模型手写，任务调度器，保证全部任务都能被运行完毕\n  2. 手写线程安全的队列\n\n因为没写过客户端，面试官也知道很多人没写过客户端，所以主要是通过算法题了解一下系统设计的思想\n\n## 二面（1h）\n\n项目的框架设计讲一下\n\nredis在这个实习项目里面怎么用？保证数据一致性可用性？（开始吟唱）\n\nqps多少？解决问题的时候怎么查日志？\n\nmalloc这个项目怎么改进，内存池怎么设计？\n\ntcmalloc有没有了解？\n\n多线程malloc怎么保证速度？mutex锁粒度太大了？\n\n算法题：\n\n两数相加Ⅱ\n\n只招两个人，后续泡了一周池子挂了，一个本科985两段大厂实习（百度字节）的网友oc了。属实技不如人，太菜了属于是\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603262603917283328?sourceSSR=users",
        "title": "腾讯算法实习面经",
        "content": "已oc, 发个面经为秋招攒攒人品\n\nIEG，cv算法岗\n\n1\\. 一面\n\n主要深挖简历上面的项目\n\n然后面试官介绍了他们组里做的项目，问有没有思路\n\n2\\. 二面\n\n与一面基本相同，深挖项目\n\n同样介绍了组里做的项目，问什么时候可以到岗，可以实习多久\n\n3\\. 三面\n\n挑了简历中感兴趣的一个项目让介绍\n\n然后问了一些与技术之外的，兴趣爱好、遇到过什么困难，从中学习到什么等等\n\n4\\. HR面\n\n问了简历中的项目做了多少时间，遇到过哪些困难怎么解决的，，\n\n到岗时间，实习时间等等\n\n整体面试下来，感觉腾讯这边更重注项目一些，方向匹配可能比较重要(无八股问题\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603262006426157056?sourceSSR=users",
        "title": "深圳某小中厂前端开发实习一面，发帖留念攒人品",
        "content": "1、自我介绍开场  \n  \n2、前端性能优化有哪些  \n只答了js和css方面的，其实还有很多，比如懒加载，CDN，节流防抖，webpack打包那些，得好好看看!  \n  \n3、如果手写一个promise，你会怎么做（没答上[牛泪]）  \n  \n4、promise的了解  \n  \n5、对JS原生有什么理解  \n  \n6、JS原生开发跟用框架Vue那些开发有什么区别或者优势呢？  \n  \n7、原型、原型链，你平时在开发过程中是如何运用原型的呢？  \n  \n8、深拷贝、浅拷贝，有哪些方式可以实现深拷贝呢？  \n  \n9、让一个盒子垂直居中  \n  \n10、instance of能判断数组类型吗？  \n  \n11、在控制台输入npm run dev启动项目开启服务端口时具体都干了什么？（没答上，真不了解）  \n  \n12、公司面相电商行业静态网页（有交互）比较多，如果入职后一段时间内，都让你写静态页面，你怎么看？  \n  \n13、你目前除了毕设外还有其他的事要处理吗？  \n  \n14、你是如何学习前端的呢？  \n  \n15、你有根据UI实现静态页面的经历吗？  \n  \n  \n反问:  \n1、贵公司项目Vue2多还是Vue3多  \n2、Vue多还是React  \n3、原生开发是咋样的  \n4、技术面有几面呢  \n  \n大概就这些吧，最后问了一下我目前在哪，薪资那些，如果面试通过后多久可以入职。[打call]  \n  \n总结:\n面试过程中有两位面试官，感觉都挺好的，全程半个小时，八股文并不多，自我发挥也算正常，在此记录一下吧，我的首次面试，感觉还是有机会过一面的，加油![赞][喝可乐]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603266510131318784?sourceSSR=users",
        "title": "momenta 系统研发C++实习生一面二面面经",
        "content": "很久之前面的了，现在来整理一下面经\n\n之前在某自驾公司实习过，所以mmt的面试官对我还是挺感兴趣的\n\n## 一面\n\n  1. 讲一下no except如果出现了异常会怎么办？\n  2. emplace back，vector里面emplace back是什么\n  3. 右值引用是怎么样的，如果没写右值引用的函数呢？主要就是减少一次拷贝\n  4. 在写webserver的时候，socket编程是阻塞还是非阻塞的，边缘触发和水平触发的区别是什么\n  5. 阻塞的话你用的是水平出发还是边缘触发，为什么呢\n  6. C++的多态是怎么做到的---模板编程和虚函数\n  7. 虚函数和虚函数表\n  8. 为什么不用别人的序列化和反序列化框架，公司用这个有什么特殊的意义嘛？\n  9. 队列之间是怎么同步消息，mmap解释一下怎么通信的？解释reactor是做什么做到通信的\n  10. extern有什么用，为什么要这样做呢，不这样做为什么报错\n\n总的来说这一面学到很多东西，40mins左右全程是聊C++八股和实习的内容\n\n## 二面\n\n  1. 花了20mins聊实习业务怎么改进\n  2. 四个cast讲一下，dynamic_cast和static_cast是在什么时候转换的？\n  3. 如果dynamic_cast是在运行时转换，原理是什么？\n  4. type-id是什么？RTTI了解过多少？\n  5. 解释一下在实习里面怎么实现了C++的反射机制\n  6. 设计模式了解多少？单例模式怎么实现的？magic static怎么保证线程安全\n  7. 解释一下static关键字的用法？static的初始化是在什么时候的？\n  8. git rebase和merge的原理讲一下？\n  9. 如果我在某一个feature分支开发了2个月，这个时候要回去dev分支或者主分支，你应该用哪个命令？\n\n其他的有点忘了，总体很喜欢mmt，面试官也很有水平学到了很多，后续oc了，但是因为有更好的offer就没去\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603261793472901120?sourceSSR=users",
        "title": "安托智造一面",
        "content": "写面筋攒人品\n\n1.Java中break和continue的区别和作用\n\n2.String类有哪些常用的api（没答好[牛泪]）\n\n3.String，StringBuilder和Stringbuffer\n\n4.重载和重写的区别\n\n5.Java和c++的区别和特点（指针这块）\n\n6.map和list区别\n\n7.springboot的核心注解和常用注解\n\n8.排序算法，挑一个说说\n\n9.css里边的样式和权重优先级\n\n10.http的状态码\n\n11.v-if 和v-show区别\n\n12.什么是虚拟dom\n\n13.session和cookie的了解\n\n14.跨域问题，什么是跨域，如何解决\n\n15.Linux指令\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603260754103451648?sourceSSR=users",
        "title": "AutoX后端一面",
        "content": "上来介绍业务  \n然后直接写两道算法题，无八股  \n两个数组原地合并，计算器实现  \n面试官挺好的，给了挺多指导  \n  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603260225155518464?sourceSSR=users",
        "title": "3.29 腾讯云 前端实习 一面",
        "content": "前几天面完wxg被挂，然后被腾讯云捞了，面完半小时看状态，流程结束了，全程40min左右，只记起来一部分，无算法\n\n个人感受：仍需努力\n\n面经：\n\n  1. 有用 uniapp 做过跨端兼容吗\n  2. Pinia 持久化插件的原理\n  3. Vue3 双向绑定原理\n  4. 讲一下Promise，Promise链式调用原理\n  5. async、await\n  6. 瀑布流实现方案，什么时候插入新的卡片\n  7. 懒加载的目的\n  8. uniapp 滑到底部触发事件怎么实现\n  9. 怎么优化事件触发频率，防抖、节流\n\n手写题：\n\n  1. proxy 监听对象，能写多少handler写多少\n  2. 防抖\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603257053682941952?sourceSSR=users",
        "title": "美团-优选事业群-后端开发一面",
        "content": "### 八股（30min）\n\n  1. ArrayList和LinkedList的区别和特点以及使用场景\n  2. 如何将ArrayList变成线程安全\n  3. 并发包里有一个线程安全的ArrayList你知道吗？（不知道）CopyOnWriteArrayList听说过吗？（没听过，讲了一下CopyOnWrite）\n  4. CopyOnWrite有什么缺点？适合什么样的场景？\n  5. HashMap线程安全吗？它在并发包里对应的线程安全的类叫什么？\n  6. currentHashMap如何保证线程安全的？为什么要将红黑树转化成链表？\n  7. Java有哪几种方法创建线程？\n  8. 线程池的核心参数\n  9. Executors工具类提供的四种常见的线程池说一下？newCachedThreadPool里的阻塞队列是什么？有什么特点？\n  10. Java异常体系介绍一下？顶级父类是什么？（本来只答了Exception的，面试说Error也属于异常体系）\n  11. 编码过程中如何处理异常，最佳实践？\n  12. CountDownLatch和CyclicBarrier了解吗？（知道是什么，底层不了解）\n  13. JVM内存结构？哪些地方会发生GC？\n  14. 常见的GC算法？常见的垃圾回收器？\n  15. Linux统计一个文件有多少行的命令？\n  16. grep命令一般怎么使用？\n\n### 项目（50min）\n\n  1. 介绍SaaS短链接项目\n  2. 短链生成长链的算法\n  3. 前后端交互的数据格式是什么？\n  4. 为什么选择分表？为什么选择水平分表？\n  5. 分片键如何选择？为什么需要路由表？\n  6. 布隆过滤器？你在项目中用到布隆过滤器两面性的哪一面？\n  7. 项目中如何保证缓存一致性？\n  8. 有哪些方法保证一致性？延迟双删一定可以吗？Canal监听binlog的具体流程你知道吗？这里面MQ起到什么作用？（不知道）\n  9. 什么场景需要用到MQ？你的项目为什么需要MQ？\n  10. MQ的死信队列了解吗？（美团里经常用，挺熟悉的，面试官说Canal监听binlog就用到了死信队列）\n  11. MySQL的InnoDB引擎了解吗？底层数据结构是什么样的？\n  12. 聚簇索引和非聚簇索引的区别？可以有多个聚簇索引吗？\n  13. 索引失效的场景？\n  14. abc联合索引，出了四个查询语句，问分别都用到了哪些索引\n  15. MySQL的隔离性特点会带来什么问题？\n  16. 默认隔离级别是什么？为什么RR可以解决幻读？\n  17. MVCC机制，当前读和快照读\n  18. 服务拆分怎么做的？你是如何理微服务？\n  19. 请求到达服务器，gateway、nacos、feign分别起到什么作用？\n  20. feign的数据交互格式是什么？\n  21. 你是如何理解RPC的？（我说http、grpc、mq都可以算作rpc，面试官说核心就是一句话“调用远程方法如同调用本地方法”）\n  22. 什么是分布式锁？Redisson的实现有什么特点？如何理解可重入？\n  23. setnx 和 设置过期时间 两步需要保证原子性吗？\n  24. 知道ThreadLocal吗？如何用ThreadLocal实现可重入锁？（不知道，没考虑过）\n  25. 倒排索引的概念？（面试官希望我脱离ES聊倒排）\n\n### 做题（10min）\n\n  1. SQL题，面试官问我知不知道in 和not in，我说知道，面试官说那这题就不用做了\n  2. 判断链表是否有环，set去重2min秒了，面试官说很好很符合公司实际开发情况，然后让我换一个空间复杂度低一点的方法，双指针2min秒了\n  3. 面试官看我做得很快，笑着又出了一道返回有环链表的环，5min秒了\n\n### 反问\n\n  1. 什么业务\n\n### 总结\n\n美团面试官都温声细语，体验很好，问题也很基础，面试官夸我基础扎实知识完备，而且很多我答得不好的地方面试官都说没事没事已经答得很好了。然后面试官还教会了很多我没答上来的知识点，收获满满！赞美美团！而且美团的算法题也都是eazy和mid为主，太棒了！总体来说是体验很好收获良多的一次面试。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603256198686601216?sourceSSR=users",
        "title": "腾讯暑期实习 WXG后台开发 线下一面",
        "content": "  * 有哪些系统调用，系统调用的时候发生了什么；\n  * 讲讲fork；对内存分布的理解，栈和堆的区间，一个函数在执行的时候，函数和参数哪个先进栈，栈空间发生了什么变化；\n  * 进程间通信，怎么实现一个只能启动一次的进程；\n  * 程序执行的过程中，发生了哪些事；静态库和动态库用过吗，有什么区别，一段hello word的代码用到动态库了吗，freopen的底层是用什么实现的\n  * 拷打项目……\n  * 用过哪些STL，map和unordered_map的区别\n  * Raft项目的整体框架，以及面向对象部分怎么设计的\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603252170544140288?sourceSSR=users",
        "title": "浙大，计算机研二，阿里巴巴实习面经（惊心动魄版）",
        "content": "本人bg：浙江大学，计算机研二，本科也是浙大计算机专业的。\n\n在阿里巴巴达摩院实习，算法岗，我是去年拿到的阿里巴巴达摩院的实习offer，这个过程还是比较惊心动魄，所以我称之为惊心动魄版本，我把这个经历和经验总结分享给大家，算是回馈牛客了。\n\n# 一、我是怎么拿到offer的\n\n这也就是为什么是惊心动魄的过程，因为是被推荐过去的，我原本都没有打算投简历，简历直接通过进入面试，面试过程也很顺利，但是我有总结出来为什么能通过。\n\n# 二、搞好算法：刷题，从娃娃抓起\n\n阿里巴巴达摩院很重视算法，面试中会包括手撕和问你数据结构和数学知识、算法应用，我确实比较幸运，这几点还算可以。\n\n所以一定要多刷题以及了解算法应用，有点夸张，但是建议大家从大一就开始刷，我就真的从大一就开始刷，不算是特别纯正的ACM党，只是偶尔打一打竞赛，我也是主要得益于此。\n\n因为我发现工资越高的公司或者岗位在面试的时候算法和数据结构题目的比重和难度就越大，反而工资低的公司或者岗位，什么都要求，所以如果你有追求的话，前期就得多刷题，打好基础。像八股文这些至少还能背，能肝，算法题是需要真的好好写代码才能掌握，不是说看了理解了就真正会了。\n\n其实这个过程中的思维和想法的提升是非常重要的，因为对应需要补足的也有数据结构和数学。\n\n# 三、算法应用\n\n达摩院在数字技术领域取得了一系列技术突破并实现规模化应用，构建了全方位的人工智能基础能力，推出了业界领先的通义系列大模型，孵化出平头哥半导体公司等。\n\n接下来，达摩院会重点布局人工智能、集成电路等前沿领域。\n\n所以对算法应用无疑也是非常重视的，最好是有一些相关项目经历，这样才能首先吸引面试官的兴趣，其次才是扛得住面试官的追问。\n\n# 四、面试问题分享（记忆力版本）\n\n1、自我介绍\n\n2、项目经历深挖，实现细节\n\n3、项目难点，如何解决\n\n4、手撕（lc 中等，也有hard）\n\n5、数学题（跟阿里巴巴数学竞赛的题目难度有点像）主要是一些应用和计算数学，包括机器学习理论、数值线性代数、数值分析、计算机科学的数学理论类型。\n\n# 五、阿里真挺重视科研的\n\n不得不说，阿里在重视科研这里是有社会责任在的，比如阿里巴巴全球数学竞赛，这个是由马云2018年发起，阿里巴巴公益、达摩院联合举办的阿里巴巴全球数学竞赛，旨在通过有乐趣的竞赛激发人们对数学的热爱，关注这门基础学科。\n\n这个赛事吸引了来自全球70多个国家和地区超过25万人次参与，已成为全球规模最大的在线数学竞赛，全社会对数学的热情正在被点燃。\n\n刚好最近第六届比赛也开始了，谁都可以参与，今年放出了450w奖金池，报名还能参与抽奖（有mac，airpods等好多），感兴趣的同学可以参与[https://damo.alibaba.com/alibaba-\nglobal-mathematics-\ncompetition?language=zh&source=3](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fdamo.alibaba.com%2Falibaba-\nglobal-mathematics-competition%3Flanguage%3Dzh%26source%3D3)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603249254945079296?sourceSSR=users",
        "title": "腾讯实习初试二面3.28 30分钟已挂",
        "content": "自我介绍\n\n手撕算法：16进制转10进制，使用+-获得目标值的总数（二选一，20分钟）\n\n手撕算法的时候就开始关摄像头了，之后再也没开了，写完还让我等一下，说是有事\n\n让我再介绍一下项目（自我介绍已经介绍过一次，再让我介绍...我就一个项目，再重复了一遍）\n\n介绍一下学习记录统计\n\n如果客户发请求刷时间怎么办（后端判断两次心跳时间是否异常）\n\n如果开脚本刷呢（我说的是前端进行判断鼠标位置是否移动，类比学习通，他没说什么）\n\n介绍一下优惠券生成，是多少位（和JWT差不多，根据载荷实现校验和，刚开始是50位，用Base32编码，最后是10位）\n\n然后说你项目主要是使用Redis是吧，讲讲Redis的数据结构（String,Set,Hash,ZSet）\n\nZset的跳表是怎么样的（双向链表，通过概率函数实现索引）\n\nRedis会有数据丢失的风险吗（我说会，但是有RDF等，但是如果刷盘时宕机还是会丢数据）\n\n他问我怎么办（我说设置多个Redis节点，主从复制）\n\n主从复制就能保证不出问题吗（我不知道）\n\n我没什么想问的了，你还有什么想问的吗\n\n反问\n\n假如过了的话，请问转C++要怎么学 （C++Primer）\n\n30分钟查看流程已挂\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603248910131363840?sourceSSR=users",
        "title": "美团一面凉筋",
        "content": "投了被基础研发平台捞了，还以为做的是c++，一开始还挺开心。结果面试官上来就说他们这边做JAVA的，我从cpp跟他们不符合，直接蚌埠住了。寻思着来都来了，就说自己可以转，由此开始了一个多小时的拷打过程。\n\n由于面试官不会c++，我不会java，因此唯一的共同点就是计网。面试官摁着我的计网问，项目重点全在问网络，我网络又不是很熟，所以寄中寄。[牛泪][牛泪]面试官说它不是很懂C++方法，只能一点点从底层解释上去。\n\n开篇照例拷打项目：\n\nRPC框架怎么实现的\n\nRPC中传输一条消息是什么样的过程\n\n你知道ZooKeeper吗？\n\n为什么用的raft不用ZooKeeper?\n\nraft里会有脑裂吗？redis脑裂怎么处理？\n\n可以讲一讲raft的选举过程和zookeeper有什么区别吗？\n\nKVDB为什么用跳表？\n\n据我所知只有redis在用跳表。跳表和其他数据结构有什么有点？\n\n为什么redis用跳表，mysql用b+树？\n\n那为什么b+树这么多优点，为什么redis不用？ （我麻了）\n\n一条http消息进入你的服务器是如何处理的？\n\n有没有做负载均衡？\n\n了解过路由算法吗？\n\n你是如何在你的服务端实现这一套tcp连接和传输的流程的？\n\n四次挥手为什么是四次不是三次？\n\n三次握手为啥不是两次？不是四次？\n\n（省略n个tcp相关八股和实现问题）\n\ntcp拥塞控制了解过吗？\n\n如何实现流量控制？\n\n开始撕算法。\n\n一道括号运算，面试官让我不要用定义好的栈，我就用了vector实现。结果半路面试官以为vector是栈，又提醒我几遍自己实现，我懵了好一会才跟他解释出来vector是数组，stack是栈。最后没撕出来（太慌了），他也看不懂代码，也没法说哪错了，只能说个思想过了。\n\n一个阻塞队列，用了个互斥锁和条件变量，撕出来了，over.\n\n反问：\n\n我也蚌埠住了，问他那边除了java还有没有go的工作，他说只有java。说完俩人就对着傻笑。笑完了就结束了xD.\n\n面试官挺不错的，很可爱，会引导回答问题，可惜真的是他不懂我我不懂他。[牛泪][牛泪]一点C++和分布式的八股没问，全是tcp八股。哎，怎么找个实习都这么难找。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603248568849235968?sourceSSR=users",
        "title": "3.22 快手基础架构暑期一面",
        "content": "#软件开发2024笔面经# 60min\n\n自我介绍\n\n项目拷打 20min\n\n八股\n\nTCP三次握手说一下\n\n看代码说问题\n\n闭包，一定是固定输出吗？\n\n协程泄露（协程中计时器没有stop关闭）\n\n算法\n\n二进制求和\n\n最小的k个数\n\n反问：\n\n做啥的？\n\n总结： 面试官无所谓的样子[黑牛问号]面一半就不想面了，看着他也不想面。[黑牛问号]\n\n\\------3.27更新 已挂--------\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603248478470356992?sourceSSR=users",
        "title": "腾讯实习一面3.20 一个小时",
        "content": "自我介绍\n\n手撕算法：螺旋矩阵，堆排序（35min）\n\n学了计网吗，讲点计网的\n\nTCP和UDP区别\n\n你讲了TCP可靠，如何实现可靠（三次握手四次挥手）\n\n你讲了握手挥手，讲一下细节，包括状态（记不住状态了）\n\n等待的状态叫什么（TIME_WAIT）\n\nTIME_WAIT过多会怎么样（占用大量端口号），怎么解决（忘了，我说可以修改什么参数的）\n\n了解阻塞和非阻塞嘛（不是很会然后我扯io多路复用）\n\n你提到了io多路复用，你知道有哪些实现方式吗（select.poll.epoll,说了三者区别）\n\n了解ET和LT吗（知道，只有epoll支持边缘触发）\n\n哪个效率高？为什么（ET高，原因说感觉是这样的，他给我解释是因为单线程的啥）\n\n你还接触到哪些排序（快排，堆排，桶排，计排）\n\n快排时间复杂度怎么样？最坏的情况是怎么样呢？（最好情况我刚开始答错了，后来面试官引导我，你想想最坏的情况分治是怎么样，我就想起来最坏应该是最不平衡的情况，是O(n^2)）\n\n怎么设计一个线程池（我答的Java的线程池参数，具体需要什么类型的对着参数调，比如io密集和CPU密集，然后面试官笑着说他不会Java的）\n\n反问\n\n请问这个境外支付和国内支付有什么区别\n\n除了计网我还有什么不足之处\n\n一个星期没变，后面又约同个部门的初试\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603243118216900608?sourceSSR=users",
        "title": "3.29 快手前端 暑期实习 一面",
        "content": "问的基本都是八股，项目没有过多问\n\n下面是gpt总结的\n\n  1. **基础知识** ：询问了关于前端基础（如HTML, CSS, JavaScript）、React及其相关库、Webpack等的问题，包括Webpack的配置项、优化方式、loader和plugin的区别等。\n  2. **框架和库的使用** ：探讨了React的生命周期、受控组件与非受控组件的区别、高阶组件的应用场景等。\n  3. **前端工程化** ：讨论了前端项目中的构建工具Webpack的配置和优化，如何配置loader和plugin，以及它们的作用。\n  4. **前后端交互** ：询问了Axios库的使用，包括如何配置代理解决跨域问题、跨域的解决方案等。\n  5. **状态管理** ：关于Redux的使用经验，包括Redux的工作原理、React Redux的作用等。\n  6. **路由管理** ：询问了React Router的使用和实现原理\n\n代码\n\n  1. 实现add，让add(1)(2)(3) = 6\n  2. 实现有最高并发的fetch，并按顺序返回\n  3. 实现find()，能够根据'a.b.c'找到对应的值\n  4. 实现promise.all\n\n第一个面试官提示了一下写出来了，第二个只有思路，第三个写出来了，第四个说写不写都行\n\n代码这次感觉写的还不错，问了很多原理性的东西，比如redux，router怎么实现，react-redux具体做了什么，webpack如何优化性能\n\n面试官说应该会有二面\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603247534630322176?sourceSSR=users",
        "title": "3.13 智谱后端实习一面",
        "content": "30min\n\n自我介绍\n\n项目相关（只问了一个网络相关项目）15min\n\n实习\n\n讲讲实习项目吧 5min\n\n为什么选择go？\n\n算法题\n\n翻转二叉树\n\n反问：\n\n主要做什么的？\n\n面试官友善，感觉纯聊天没问多少，这种情况是不是没戏了[笑哭]\n\n#面试##软件开发2024笔面经#\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603235388643180544?sourceSSR=users",
        "title": "滴滴（春招）-产品与用户运营顾问（安全方向）-二面",
        "content": "一、问题  \n这次没有自我介绍了，直接以提问-回答的方式面试，可能有的问题记录不全，但我尽量通过我的回答回忆出“点”。  \n1 对滴滴的安全策略有什么了解  \n2 自己出行时怎么考虑，会把安全排在第一位吗，为什么这样想  \n3 之前做的策略运营，我们更偏产品运营，有什么区别？你觉得产品运营更需要什么能力？  \n4 你最大的匹配/优点是什么？  \n5 （针对一面提问的数据能力要求）你指的数据能力是什么？根据一面，你怎么理解工作内容构成的？（这里达成一致，“跑数”的工作会少，更注重数据分析的能力）  \n6 （因为我之前工作内容、同事变化很快）你怎么在面对一些变化时，调整心态、继续工作的？  \n7 你们同龄人之间有没有聊过MBTI，你怎么看？  \n8 职业规划  \n9 反问  \n二、复盘与优化  \n1 幸好提前了解了滴滴有哪些安全措施！！果然努力没有白费的  \n2 回答问题一定要有框架，比如回答问题6，这种跟深挖工作内容还不一样，更要有逻辑地去表达，对方可能不会评判你说的对不对，但看你有没有结构化思维  \n3 感受到“我的优势”这个问题的重要性了，一定要针对不同职位量身定制  \n三、碎碎念  \n1\nMBTI的事告诉我，一些“热门话题/热梗”一定要了解出处和最原始的定义，我在说出“MBTI刚开始是职业规划的测试”和“i和e是内倾和外倾，不是内向外向，我是i人，但i不会对我表达自己想表达的内容造成阻碍”时，面试官好像认同地点了点头（也可能是我想多了）  \n2\n面试官好好，我在反问她“您觉得我还有什么地点可以完善、学习的”时，她说“就像你刚才在MBTI中说的，每个人都有自己的特长和闪光点，我觉得你刚才表现的很好”，听完心里暖暖的🥰\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603232638790352896?sourceSSR=users",
        "title": "科大讯飞一面",
        "content": "很简单，全是八股，都撞枪口上了[羞涩]  \n项目介绍  \n学习前端历程  \n跨域  \nwebpack的使用，webpack中devserve的原理  \najax的具体实现  \nvue的diff算法  \nvue3与vue2的区别  \n  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603247336789135360?sourceSSR=users",
        "title": "3.19 腾讯teg暑期一面 凉经",
        "content": "45min 面试官全程没开摄像头，只记得部分问题\n\n自我介绍\n\n介绍实习项目 15min（面试官感觉太简单，不感兴趣）\n\n八股\n\nmake和new的区别\n\n引用类型和值类型的区别，数值和结构体是什么类型？\n\nslice和数组的区别\n\ngo的context介绍下\n\nc++了解吗？（不了解）\n\nc++中vector和list的区别\n\nc++中new和malloc的区别\n\nc++中map取值的时间复杂度\n\nc++诸多问题。。。[牛泪]（不了解也要问[苦涩]）\n\n三次握手和四次挥手\n\n大量的time_wait会造成什么？\n\nhttp1.1的报文格式\n\n状态码有哪些？\n\nio多路复用\n\n僵尸进程和孤儿进程\n\nfork后子进程会有父进程的全局变量吗？\n\nsocket设置连接超时和读写\n\n客户端可以bind吗？\n\n无算法题\n\n总结：c++问题一点不会[牛泪]，感觉偏基础，奈何太菜了[牛泪]，算法题都不给做了[苦涩][苦涩]\n\n#软件开发2024笔面经#\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603232045585760256?sourceSSR=users",
        "title": "小米26日常软件开发实习面经",
        "content": "面试官很好，主要是根据简历写的来  \n\n1.自我介绍\n\n2.线程池的主要参数\n\n3.多线程\n\n4.场景题：一个线程调用天气接口，如果500ms内返回了数据则返回，否则使用兜底策略，如何实现。\n\n5.redis主要问了为什么快\n\n6.单线程多线程\n\n7.什么情况多线程\n\n8.mysql主要问了索引，以及有没有可以批量插入的sql语句 mybatis-plus的batch方法的原理\n\n9.spring主要问了aop以及实现原理\n\n10.项目\n\n11.上线项目遇到问题怎么办，比如找不到类，类中的方法，不能debug\n\n12.算法题：全排列  \n\n  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603231537554866176?sourceSSR=users",
        "title": "华为OD面经",
        "content": "个人情况：\n\n本人985硕，在某运营商的软件研究院干了两年，因为个人原因想去成都，投的华为od。现已拿到offer。\n\n一、机考\n\n机考一共三道题，2道100分，1道200分，共计400分。\n\n2道简单题，分别是滑动窗口和数组类型的，1道中等题动态规划。建议先把od题库的c卷刷一遍。\n\n二、hr面\n\n问了下基本情况，为什么离职，上一家的薪资情况。\n\n三、技术面\n\n当时为了加快流程，两轮技术面是连着的。技术面手撕代码考的都是两道简单题，一道栈和一道hashmap。\n\n建议把********常见的类型题好好刷一下。\n\n八股文方面，没有按照简历写的问。\n\n1、string怎么转list，list怎么转string\n\n2、抽象类和接口的区别\n\n3、分布式锁\n\n4、sql注入\n\n5、异常分类\n\n6、redis过期策略\n\n7、RocketMQ怎么保证集群模式下顺序消费\n\n8、spring事务的传播\n\n9、spring cloud的组成\n\n项目方面，针对完成的重点工作深挖，例如ES的底层原理。\n\n四、主管面\n\n1、你最近读的书籍\n\n2、压力大如何放松\n\n3、平时的爱好\n\n4、技术方面怎么学习的\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603247135529652224?sourceSSR=users",
        "title": "3.20 字节 基础架构实习一面",
        "content": "45min\n\n自我介绍\n\n讲一个项目\n\n项目相关（15min）\n\n算法题\n\n小于n的最大数（没做出来）\n\n那来聊点其他的吧\n\n介绍http协议\n\nhttp协议keep-alive的最长连接时间多长？\n\n反问：\n\n给个机会再出个题（答：没时间了）\n\n总结：问得很少，除了项目，其他答得很差[牛泪]，求求给过[祈祷][祈祷]\n\n#软件开发2024笔面经#\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603246820923297792?sourceSSR=users",
        "title": "3.19 欢忻网络一面",
        "content": "全程30min\n\n自我介绍\n\n介绍一个项目\n\nredis存储了些啥\n\nzset底层怎么实现的？时间复杂度？zset查询某个key的score的时间复杂度？\n\n聚簇索引和非聚簇索引\n\n八股\n\ngolang的gmp\n\ngmp出现网络i/o阻塞后，是怎么处理的\n\ng由阻塞变为可运行，还会找原先的p队列，还是重新找队列呢？（这里告诉我是因为原先m存储的上下文，所以还会找原先p队列[疑惑]）\n\ngmp中，如果多个p队列从全局队列中取g，那怎么防止冲突呢？\n\n看程序说结果\n\n闭包下，for循环0-n依次输出什么值\n\n如何改成预想的0-n呢？（func内加变量就行）\n\n反问：\n\n做啥的？\n\n总结：面试官友好[赞][赞]，面完后没消息了。。。[尴尬]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603246540097875968?sourceSSR=users",
        "title": "3.16 快猫星云一面",
        "content": "自我介绍\n\n问项目 15min\n\n做题\n\n一组url，用指定数量协程获取这些url的http请求的状态和耗时，并输出出来（多个协程读channel，类似消息队列）\n\n岛屿数量\n\n总结：面试体验友好，就是我太菜了。。。[掉小珍珠了]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603246248505659392?sourceSSR=users",
        "title": "3.27 星汉未来 实习一面",
        "content": "45min\n\n自我介绍\n\n项目介绍\n\n怎么实现单点登录的？过程是怎么样的？\n\n八股\n\nhaving关键字\n\ncount(*)，count(1), count(列名)的区别\n\n联合索引和单个索引的区别\n\ndocker使用过吗？在哪些场景中使用的？\n\n思考题：\n\n5L和3L杯子，装4L的水\n\n反问：\n\n做啥的？\n\n总结：再吃透项目，结合基础知识，进一步思考。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603245405979045888?sourceSSR=users",
        "title": "3.27 百度 实习一面",
        "content": "60min\n\n自我介绍\n\n项目介绍拷打（20min）\n\n看代码说结果\n\n1\\. 三个defer加panic，输出顺序是什么？\n\n2\\. map[string]*student，输出该map，会打印什么？\n\n现在遍历map，打印出结果会是什么呢?（考察map的无序性和浅拷贝）\n\n深浅拷贝了解过吗？哪些场景适用？\n\n切片可以深拷贝吗？map呢？结构体呢？\n\n如何避免深拷贝结构体？\n\n算法题：\n\n三数之和。为什么要排序？如果可以输出重复的答案，需要再排序吗?\n\n写go写了多久？\n\n中间件都用过吗？\n\ndocker和k8s呢？\n\n总结：面试体验较好[赞]，面试官会引导，建议多实习，回答项目从背景-架构-你负责的模块-怎么运作的 思路回答。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603241597609787392?sourceSSR=users",
        "title": "3.29 百度 实习 二面",
        "content": "60min\n\n自我介绍\n\n实习介绍\n\n实习最大的收获\n\n实习最大的挑战（这两个答得乱七八糟，面试官都不想听了[尴尬]）\n\n算法题：\n\n二叉树的最大路径和\n\n写SQL，学生成绩表（stuid，courseid，score），找出平均分不及格的学生和其平均分\n\n在北京吗？实习时间是怎样的？\n\n反问:\n\n建议：扎实基础，多实习\n\n总结：面试体验良好[赞]，很利索的感觉[赞]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603220088644272128?sourceSSR=users",
        "title": "腾讯-1面-应用宝",
        "content": "又被捞了，感觉好难呀，捞了感觉也进不去呀，项目不行呀。电脑麦还坏了，换了朋友的mac，结果没VScode😅😅。\n\n## 代码题\n\n  1. 手写一个带有+,-,*,/,(,)的计算器，leetcode：772\n  2. 版本号排序\n  3. 两根不均匀绳子，每根烧完要1h，求如何确定15分钟，不用写代码\n  4. 写一个vue组件，好像是实现一个搜索框，并展示查询结果\n\n## 八股\n\n  1. 自我介绍\n  2. 询问项目\n  3. 浏览器的安全，XSS，CSRF等\n  4. URL加载网页流程\n  5. Vue和React你更喜欢那个，原因\n  6. JavaScript时间循环\n  7. 你知道除了Vue和React，你还知道哪些框架\n  8. 设计模式有那些\n  9. 设计原则有什么\n\n其他的都是比较常规的吧，记不住了，我要去写项目了，助牛友好运🙂\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603218437531336704?sourceSSR=users",
        "title": "美团到店一面凉经",
        "content": "面试官人很好，问的题也是从基础到深入和场景。。是我八股基础太差了 知识不进入脑子[牛泪]。好好复盘总结，成为八股选手[笑cry]  \n\n1.自我介绍\n\n2.Java和Python区别\n\n3.Java方法的访问修饰符及访问权限\n\n4.一个方法被private修饰，一定不能被其他类访问吗？有办法吗?\n\n5.ArrayList扩容机制及具体实现。modCount含义？CopyonWriteArrayList\n\n6.HashMap的put过程？为什么需要红黑树，不用AVL，不一直用链表？红黑树和AVL哪个查询效率高?\n\n7.ConCurrentHashMap的put过程\n\n8.多线程：CompletableFuture？死锁是怎么产生的?\n\n9.voitaile的作用？能否保证线程安全?\n\n10.线程池的配置参数？\n\n11.ThreadLocal的底层实现？\n\n12.CountDownLatch的应用场景?\n\n13.常见的设计模式？手写一个单例模式?\n\n14.MySql索引的数据结构？\n\n15.事务的隔离级别？\n\n16.JVM的数据分区\n\n17.对象怎么从新生代到老年代\n\n18.对象一开始分配在什么位置？\n\n19.JCP协办议\n\n20.操作系统中进程和线程的区别？\n\n21.Liux的一些命令操作\n\n22.Redis的数据结构有哪些？Redis中的map扩充实现、Zset底层实现\n\n23.Mybatis，$0与#仆区别\n\n24.Spring怎么解决循环依赖？\n\n25.实习时都干了什么工作？\n\n26.实习时遇到的印象深刻的问题?\n\n27.项目拷打：每日头条的功能？登录功能的实现？KafKa的应用场景，丢失消息的场景?\n\n28.送分算法题：反转链表\n\n29.反问，，，,\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603209336625590272?sourceSSR=users",
        "title": "腾讯-后台开发-暑期实习面经",
        "content": "  * 部门是PCG-QQ浏览器。由于我准备的是java，所以面试内容也是java。\n  * 时间线为投递（3.19）、一面（3.21）、二面（3.26）、hr面（4.02）。\n  * 一面： \n    1. 简历项目 \n      1. 介绍一下项目内容\n      2. 怎么用定时任务调度解决分布式事务问题\n      3. 缓存穿透、雪崩、击穿是什么\n      4. 为什么要用消息队列，rabbitmq相比其他消息队列有什么特点\n    2. java \n      1. 异常了解吗\n      2. synchronized锁的实现（猜测问的是锁升级）\n      3. 多线程了解吗（猜测问的是实现方式）\n      4. java内存模型是什么\n      5. gc了解吗（猜测问的是死亡对象判断、垃圾收集）\n    3. 操作系统 \n      1. linux如何查看文件前5行（head -n 5 filename）\n      2. cpu满载如何排查问题\n      3. 孤儿进程和僵尸进程\n      4. 进程、线程和协程的区别和作用\n      5. 进程通信方式\n      6. 动态链接和静态链接的区别\n    4. 数据库 \n      1. mysql底层数据结构了解吗（B+树）\n      2. 怎么选择主键\n      3. 左连接和右连接的区别\n      4. redis底层数据结构（猜测问的是键值对和8种数据结构）\n      5. redis单线程了解吗\n    5. 计网 \n      1. 三次握手和四次挥手过程\n      2. 为什么TIME_WAIT要等待2MSL\n      3. 多路复用了解吗\n      4. 客户端从输入网址到显示网页内容经历的过程（解析域名、建立连接、请求与回应、解析网页）\n    6. 其他 \n      1. RPC了解么\n    7. 手撕算法 \n      1. LRU缓存\n      2. 给定一个数组，求和最大的连续子数组（前缀和+哈希表）\n    8. 反问：能过的话什么时候二面\n  * 二面： \n    1. 简历项目 \n      1. 介绍一下项目内容\n      2. Spring Security+JWT实现用户认证的原理是什么\n      3. 怎么基于RBAC分配用户权限\n      4. 用户-角色-权限的方式来分配权限有什么缺点（为用户分配权限必须创建角色，可以通过用户-权限方式来解决）\n      5. 怎么用定时任务调度解决分布式事务问题\n      6. 还了解多少分布式事务解决方案\n    2. java \n      1. java内存区域是什么\n      2. 局部变量和对象分别存储在哪里\n      3. 垃圾收集算法有哪些\n      4. 垃圾收集器有哪些，介绍一个熟悉的\n      5. 从写完一段java代码到执行经历了什么，类加载过程（双亲委派模型）\n    3. Spring \n      1. 介绍下Spring核心原理（IoC和AOP）\n      2. 如果自己写一个IoC框架，核心方法是什么（答了HashMap存储Bean对象）\n    4. 提问：愿意转c++吗，有没有困难\n    5. 闲聊：问了英语成绩、文体竞赛、个人生活等，感觉像hr面会聊的问题\n    6. 反问：部门所用技术栈\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603208805396008960?sourceSSR=users",
        "title": "中国邮政储蓄银行笔试攻略",
        "content": "中国邮政储蓄银行考什么？㊙️  \n中国邮政储蓄银行笔试主要包括EPI、英语、专业知识和综合知识🔥🔥  \n❇️EPI  \n中国邮政储蓄银行的EPI笔试内容主要包括数量关系、判断推理、言语理解和资料分析。  \n1️⃣数量关系  \n⭕主要测查：报考者理解、把握事物间量化关系和解决数量关系问题的能力，主要涉及数据关系的分析、推理、判断、运算等。  \n✔️常见题型：数字推理、数学运算等。  \n2️⃣判断推理  \n⭕主要测查：报考者对各种事物关系的分析推理能力，主要涉及对图形、语词概念、事物关系和文 字材料的理解、比较、组合、演绎和归纳等。  \n✔️常见题型：有图形推理、定义判断、类比推理、逻辑判断等。  \n 3️⃣言语理解与表达  \n⭕主要考察：报考者运用语言文字进行思考和交流、迅速准确地理解和把握文字材料内涵的能力。每道题给出一段语言文字，要求报考者根据对这段文字的理解或运用一定的语言文字知识，选出最符合要求的答案。  \n✔️常见题型：阅读理解、逻辑填空、语句表达等。  \n4️⃣资料分析  \n⭕主要测查：报考者对各种形式的文字、图表等资料的综合理解与分析加工能力，这部分内容通常由统计性的图表、数字及文字材料构成。  \n✔️常见题型：文字型、表格型、图形型和三种形式任意结合组成的综合型。  \n❇️英语  \n英语主要考题题型：词汇语法、阅读理解。  \n❇️综合知识  \n综合知识主要考察金融、经济、财会、法律、管理、信息科技、邮储特色知识、时事政治8个学科；建议把复习重点放在金融知识、时政以及邮储银行特色知识三个部分。这三块内容占比较大且相对比较好复习。  \n  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603201722223263744?sourceSSR=users",
        "title": "腾讯云 PC客户端开发实习生一面",
        "content": "1.一开始就给我介绍这个部门，问我是不是投错了\n\n2.问项目\n\n3\\.  3次握手，为什么2次不行，具体说说。\n\n4\\.  New 和maloc 的区别，以及他们低层的实现\n\n5\\.  C++11新特性的移动语意和move ，里面具体的构造函数，移动构造，赋值函数和移动赋值函数里的代码实现\n\n6\\.  最长重复子串\n\n  \n\n一共一个半小时\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603197783109038080?sourceSSR=users",
        "title": "美团暑期实习一面3.29",
        "content": "1.拷打项目\n\n2.MySQL的索引有哪些种类\n\n3.MySQL的索引应该如何设计\n\n4.MySQL的事务了解么，特性有哪些\n\n5.MySQL的一致性和原子性如何理解\n\n6.MySQL的MVCC了解么\n\n7.间隙锁了解么\n\n8.线程池了解么，如何创建，参数有哪些，拒绝策略有哪些\n\n9.线程池的任务队列是如何保障线程安全的（忘了阻塞队列是如何保障线程安全的，只能说阻塞队列是线程安全的[笑cry]）\n\n10.线程池的结束任务后我们如何获取返回的结果，语法上如何实现\n\n11.SynchronousQueue一般应用于什么场景\n\n12.Future类了解么\n\n13.Callable和Runnable有什么区别\n\n14.ConcurrentHashMap和HashMap的区别\n\n15.ConcurrentHashMap在JDK1.7和1.8的区别\n\n16.ConcurrentHashMap哪些操作是原子操作\n\n17.项目中提到了spring，spring cloud了解么（分布式方面其实只用到了分布式ID[笑cry]）\n\n18.商铺查询用到了redis，具体逻辑如何实现，缓存机制还有哪些\n\n19.秒杀业务中redis的分布式锁如何实现\n\n20.setnx命令和赋值超时时间是原子操作么\n\n21.秒杀业务用到了MQ，那MQ中消费者如何知道要消费的，语法上如何实现的\n\n22.手撕代码：二叉树的层序遍历\n\n23.你在学习过程中遇到了哪些问题，如何提升自己\n\n24.设计模式有了解么，简单工厂，抽象工厂，工厂方法说一下（学习过程中提到了设计模式）\n\n反问\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603195869336195072?sourceSSR=users",
        "title": "微派网络 服务器研发",
        "content": "感觉超级爱问redis，没有一轮不问\n\n一面\n\n1、实习的地点，做了什么\n\n2、业务层面介绍一下实习，参与了那些方面，背景，用的什么技术，什么情况下用到Java\n\n3、数组和链表区别和优缺点\n\n4、http与https的区别\n\n5、redis了解那些数据类型，说一下zset底层实现，跳表内部的逻辑，插入过程是怎么样的，节点高度是怎么生成的\n\n6、redis分布式锁的实现\n\n7、redis如何做消息队列\n\n8、mysql索引如何实现\n\n9、编程题：两个字符串s和p判断p是否是s的子序列\n\n10、多会毕业，之前有没有接到其他offer\n\n二面\n\n1、聊天：在学校吗，学校地点，为什么考虑来武汉，北上广深有考虑吗，有没有进展快的，假如好多城市都给offer愿意去那个，对武汉了解吗（比较宜居，节凑快一点），学校事情还多吗\n\n2、Redis的zset除了跳表还有其他数据结构吗，为什么要用两种策略呢，zset的业务场景，有些场景查具体某个人的得分怎么做，跳表怎么具体查找莫个人的具体分值，有没有好的设计方案快一点\n\n3、Redis应用排行榜分值高的在前面，两个人分一样看谁先完成在前面，怎么实现这个需求（分数+（最大值-当前时间）/ 倒数 拼起来）\n\n4、Redis分布式锁解锁怎么去解锁\n\n5、Mysql的二阶段提交有没有了解过，事务的隔离级别具体mysql是怎么实现了，mvcc具体流程说一下\n\n6、单向链表删除倒数第n个结点怎么做（遍历一次：双指针。两次：递归或者数组）\n\n7、50个人排队衣服号码1-50，一共50个位置，一开始是按顺序排列的，每次单数位置的人出队，后面的人补上去，多少次之后只剩下一个人，那个人衣服号码是啥，50变成n总结一个公式\n\n8、编程题：版本号比较，版本号类似ip地址就是由.分隔的数字，看那个版本号大，后缀0可以不计eg：2.2.0.0.00和2.2是一样的，9.1大于8.9.9.9.9\n\n三面\n\n1、武汉城市能接受吗\n\n2、Java转Golang可以接受吗\n\n3、实习拷打，酒店价格怎么展示，下单逻辑，怎么防止超卖\n\n4、Redis如何做分布式锁，如何释放锁，为什么用lua脚本\n\n5、算法：给一个有重复元素的数组在不排序的情况下找到倒数第k大的元素\n\n6、Redis消息队列有哪些方式\n\n7、Java的hashmap怎么扩容，currenthashmap怎么保证线程安全，红黑树和链表什么情况转换\n\n8、Jdk用的那个版本，用的那个gc，为什么不用cms，g1和cms区别\n\n9、Java运行慢如何做性能评估分析，可以用什么工具，具体jsp和jstack怎么用，jstack是看什么情况是堆还是栈，服务器上怎么看\n\n10、Java内存模型（不是jvm）\n\n11、Spring底层容器的数据结构，aop怎么实现的，jdk和cjlb的区别，cjlb是怎么做的\n\n12、统计系统的uv如何做，抖音过亿的访问可以使用HyperLogLog吗\n\n13、举一个你身边优秀的同学，优秀的点在哪里，你和他的差距在哪里\n\n14、学校成绩什么水平\n\n15、有在读的书籍吗\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603184303807217664?sourceSSR=users",
        "title": "面试贴—— 哔哩哔哩一面C++",
        "content": "1.RTSP、RTMP、HLS的区别\n\n2.视频编码\n\n3.影响编码效率的因素\n\n4.视频延迟来自于哪些方面\n\n5.开源流媒体服务器了解吗\n\n6.编码的参数有哪些\n\n7.I帧、P帧、B帧\n\n8.进程与线程\n\n9.线程通信方式\n\n10.多态\n\n11.手撕大小端转换\n\n12.手撕合并区间\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603180316013969408?sourceSSR=users",
        "title": "YY黑盒测试面试（面经）",
        "content": "笔试：\n\n网上能搜到题目，这里不赘述，半个小时10道题，时间充裕\n\n  \n\n面试：\n\n（两个技术面试官）没有录音，仅凭回忆，题目排序可能有点乱\n\n  \n\n第一个面试官：\n\n1.黑盒测试和白盒测试是什么？\n\n  \n\n2.给出一个场景，怎么测试？\n\n  \n\n3.场景题：ATM机取款，设计测试用例\n\n  \n\n4.当你发现bug，怎么做？\n\n  \n\n5.当你发现一个bug，但开发不认为是一个bug，怎么做？\n\n  \n\n6.（简历上写热爱测试）热爱测试，怎么体现？\n\n  \n\n7.做项目的时候，测试的地方又遇到什么问题吗？\n\n  \n\n反问环节：\n\n1.面试结果多久会出？\n\n2.你有什么建议给我吗？\n\n  \n\n第二个面试官：\n\n1.测试遇到困难怎么办？\n\n（踩雷回答：自己学着解决，不行问同事，再不行最后问leader）\n\n标准回答：1流程问题，比如业务流程不符合标标准存在卡bug，这种需要多方面考量，联系开发确认是否存在流程漏洞，确认后上报给领导，2.工具使用困难问题，比如自我熟练问题，会尽快跟进熟练度提升基础，3.沟通问题，根据不同情况，积极推进工作效率，最后总结一下，困难有不同情况，但是具体问题我都会独立分析应对\n\n  \n\n2.那你这样岂不是把工作都交给leader？\n\n  \n\n3.你学着做，不就完不成今天的任务？\n\n  \n\n4.测试是在干什么？\n\n  \n\n5.会python吗？自动化测试会不会？\n\n  \n\n6.会的比较基础，进来岂不是要带着你？\n\n标准回答：我学习能力强上手快，平常也在积极进修学习，相信不需要长期带我，我可以后期自我成长起来的\n\n  \n\n7.如何开展测试工作？\n\n  \n\n8.bug生命周期？\n\n  \n\n9.刚进入职场，刚做完不成怎么办？你肯定会完不成的，你怎么办？\n\n标准回答：这是我第一份工作，个人对工作要求比较严格，在校期间任务完成进度一直把握很好。不会可以学，做不完可以加班，完成是可以做到的\n\n  \n\n10.项目做完有没有做测试总结？\n\n  \n\n11.（简历写工作效率高）工作效率高怎么体现？\n\n标准回答：不拖进度，按需按时完成工作\n\n  \n\n12.（简历上写抗压能力强）抗压能力强怎么体现？\n\n标准回答：能接受加班，能接受突发性任务安排\n\n  \n\n（题外话，加班的满分回答是：回家会继续加班）\n\n  \n\n13.（简历上写沟通能力强）沟通能力强，怎么体现？（踩雷回答：根据需求文档的要求跟同事沟通，想出便于理解的方式）\n\n  \n\n14.什么都要想，岂不是做什么都很慢？\n\n  \n\n15.每周实习几天？（这里踩雷了，居然跟面试官说实话有课，但可以申请免听）\n\n标准回答：没课，可以全勤\n\n  \n\n16.你怎么知道免听会给你通过？\n\n（无反问环节）\n\n  \n\n总结：\n\n简历上能不写自我评价就不要写自我评价，八股文问得不多也不深入，behavioral\nquestions比较多，像pr那样脑子转得快，说话滴水不露的人会比较有优势。\n\n  \n\n面试新手且诚实不建议第一次面试选择yy，建议先面其他公司或者看behavioral questions的标准回答方式再来。\n\n  \n\n项目经验十分丰富的可以不参考本面经，身边人项目经验十分丰富的面试就是聊聊天。\n\n  \n\n题外话：虽然是招黑盒测试实习生，但是感觉面试官会更偏好会自动化测试的人，所以投之前要慎重。\n\n  \n\n最后，欢迎各位在评论区对我第一次面试给出建议，面试小白感谢各位啦！\n\n  \n\n  \n\n  \n\n  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603177879098195968?sourceSSR=users",
        "title": "腾讯IEG后台开发一面 凉经",
        "content": "小弟25届想找个暑期实习的，结果没想到腾讯光速约面，处女面就给腾讯了，LeetCode刷了200多道，八股背得不熟，项目去年做的还没来得及复习 [牛泪]\n\n1\\. 自我介绍\n\n2\\. 狠狠拷打项目\n\n3\\. 做两个算法题\n\n  * 无重复字符的最长子串长度\n  * 二维数组从左到右递增，从上到下递增，找第k大的数\n\n没想到直接没问八股，项目去年做的细节说不清楚，技术了解不够深，问的时候汗流浃背了胡说八道一通，两道算法题基本上都秒了，刚好1h面完，半小时喜提流程结束\n[掉小珍珠了]。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603182674240360448?sourceSSR=users",
        "title": "面试贴——海康威视",
        "content": "1.拷打项目\n\n2.RTSP、RTP、RTCP协议是做什么的\n\n3.怎么学习的\n\n4.RTP可以基于TCP吗\n\n5.QT用过哪些\n\n6.信号与槽\n\n7.TCP的可靠传输\n\n8.除了RTCP还可以用其他协议吗\n\n20min，问的不多，许愿二面\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603173322997649408?sourceSSR=users",
        "title": "计算机视觉算法岗面经（暑期实习）",
        "content": "终于轮到我写面经了，之前因为拿不到oc一直不敢写，现在感觉成功了90%，就先半场开个香槟，攒攒人品。\n\nbg：双9，非科班，一篇二区，一篇准备投二区，两个项目，一个项目论文，一个项目专利。\n\n**简历挂：360，携程，美团，阿里云**\n\n其中阿里云点名批评，hr给我打电话，问我要不要走他们部门的流程，如果走的话可能要一个月的时间，还贴心地说如果觉得部门不合适的话可以给我推到其他部门，我深受感动，当即同意进入流程，然后收到了笔试链接，等我周末准备做笔试的时候发现简历已经被挂了，流程终止。你要是觉得我简历不行直接别捞我呗，把我捞起来挂掉，还没笔试就全部结束了。实验室师兄也被阿里云的hr坑过，只能说大伙慎重对待，不要太相信阿里云的hr。\n\n**腾讯 （offer录用评估中）**\n\n一面：\n\n本人第一次面试，直接来个大的（指腾讯），但是面试官人很好，没有压力面。\n\n自我介绍\n\n问项目和科研的细节，具体实现，结合部门的场景问了些开放问题，这里就半个小时了\n\n因为科研用到了diffusion，贴了段DDPM的代码，让我翻译，并且问了些diffusion原理上的问题，虽然DDPM的代码没看过，但是diffusion比较了解，很快秒了。\n\n撕题：N个有序数组求交集，一开始打算用set或者map去做，面试官说复杂度太高，而且没有考虑有序。后来想到用双指针去做，面试官说这样会产生中间结果，可以直接N指针，因为时间关系没有写，但是面试官说思路没什么问题，让我受宠若惊。\n\n撕题：手写selfattention。大体上没什么问题，细节上有点小错误，面试官也在最后给我纠正了。\n\n聊天问题，包括接不接受北京工作，论文和毕业，开题什么时间，实习时间等等。\n\n反问环节\n\n一共一小时二十分钟\n\n二面：\n\n第二天就给了二面。本来以为会和一面差不多流程，但是不太一样。\n\n自我介绍\n\n项目的目的，流程，难点，创新，人员分工，指标等等。\n\n开放问题，针对项目本身提出了一些更难的场景，问怎么做，这里聊了半个小时\n\n性格问题，觉得自己是怎么样的人\n\n对大厂的看法，对大厂压力的看法等等\n\n关于团队合作，以及如果接手一个项目打算怎么推进等等\n\n反问环节\n\n聊天环节，接不接受北京，实习时长等等\n\n一共一小时二十分钟\n\n三面：\n\n本来以为只有二面的，一周后部门大领导打电话给我突击了一个三面，一共半个多小时。\n\n自我介绍\n\n问项目的细节\n\n结合项目，科研以及部门的实际场景的开放问题，很多很多，比如网络如何设计，如何把实际问题转化成算法等等。\n\n反问环节\n\n感觉面试官比较满意吧，说我答得不错，帮我推进一下后续流程。\n\nHR面\n\n大leader果然很有效率，第二天就给了HR面，第三天面试。\n\n自我介绍\n\n考研还是保研，为什么不去一个更好的学校读研\n\n哪里人，性格总结\n\n最有成就的事，读研期间遇到的困难，项目的难点和创新，收获等等\n\n一共半个小时，说一至两周给结果，两小时后就进信息核对环节了，刚刚提交。\n\n总结：感觉大厂的算法岗更看重思路和想法，能不能把实际问题转化成算法，用合理的方式去解决问题，八股和撕题反而少一些。虽然还没拿到offer，但是先半场开个香槟了。希望能有好结果。\n\n**文远（三面挂）**\n\n一面：\n\n自我介绍，问项目和科研，没有问的很深，大致讲了一下细节。\n\nselfattention 为什么要除以根号d\n\n自注意力的流程是什么\n\n撕题：概率为p的01生成器，返回等概率生成器\n\n一共一小时，当天给了二面\n\n二面：\n\n自我介绍\n\npython语法知识，包括语法糖，迭代器，magic function等等。我python都是直接用的，没有学过，这些知识我也只知其一不知其二，完全是被拷打\n\nC++知识，因为看过C++\nprimer，大部分还是能回答上来。vector、set、map、unordered的底层结构，vector的size和capacity的区别，如何改变预留空间等等，以及vector移动导致的迭代器失效问题。\n\n撕题：二叉树根节点到某个叶子节点的值之和最大，秒了\n\n撕题：打家劫舍 二叉树版，秒了\n\n一共一小时，当天给了三面\n\n三面\n\n自我介绍\n\nattention为什么要除以根号d，秒了\n\nattention的计算复杂度，提示下秒了\n\n多头attention的计算复杂度，忘记多头切N还是切D了\n\ndiffusion的加速方法，说了下\n\nbatchnorm的计算过程，训练和测试的区别，如何得到测试用的均值和方差，都说了下\n\n你知道的正负样本分配策略，loss函数等等，focal loss是什么，我知道的都说了下\n\nbatchnorm的加速，说了我知道的\n\n混合精度训练知道不，不了解\n\ndata parallel 和distributed data parallel的区别，不知道，我说我猜一下，后面查竟然猜对了\n\n撕题：二叉树上两节点的最短距离。我想到找公共父节点，说了两种找公共父节点的方法，没有想到怎么在找父节点的同时能直接算出距离。另外太久没用C++，构造函数都忘了什么格式，纯纯的寄。本来是二选一，另一道是写NMS，早知道去写NMS了\n\n一共一小时，周末给了感谢信。\n\n**阿里国际 （终面完）**\n\n一面：\n\n自我介绍\n\n问项目细节，虽然没有明说，但是面试官透露着一种”你这个东西不就是干了xxx吗“的隐含意味，也可能是我想多了吧\n\n问对大模型的了解，我说我不太了解。\n\n撕题：链表有环，秒了\n\n撕题：反转链表的一部分。一开始没考虑头节点要反转的情况，提示后加了哨兵，秒了\n\n反问\n\n一共四十二分钟，有一种KPI的感觉，以为自己要寄了，结果一周后给了二面\n\n二面：\n\n二面是终面，部门大主管和HR一起\n\n自我介绍\n\n关于diffusion项目的细节\n\ndiffusion在时序预测上有什么优势\n\n实际数据其实很复杂，为什么一个神经网络就能做到预测未来\n\n多变量多条件的场景下时序预测怎么做\n\n时序预测怎么和大模型结合\n\nHR部分：\n\n对工作看重哪些条件。我说看重工作时间和工资之间的性价比，主管和HR都笑了\n\n期望的工作城市\n\n对工作时间有什么要求\n\n实习生的待遇，能不能接受\n\n学校的论文和毕业方面需要部门给哪些支持\n\n最后说体检合格就会按刚才说的待遇给offer，也希望能有好结果吧。又是一个半场开香槟环节，感觉阿里国际这边过的有点轻松啊，尤其我还不是专门搞推荐搜索的，就凭一个论文面过去了。不知道是不是主管太高看我了，或者其实还不一定给我offer？[尴尬]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603173146719449088?sourceSSR=users",
        "title": "腾讯后台开发QQ实习一面凉经",
        "content": "  1. 自我介绍\n  2. 问实习，问的很细，包括对职位的理解，工作难点等等\n  3. OSI七层模型\n  4. HTTPS握手\n  5. HTTP3，怎样保证可靠性\n  6. TCP三次握手，三次握手少第三次会怎么样？\n  7. 四次挥手，四次挥手如果服务端数据都发送完了第二次和第三次挥手可以合并吗？\n  8. TCP拥塞控制如何实现\n  9. 同步IO异步IO\n  10. select/poll/epoll\n  11. 键盘按下回车的时候计算机系统发生了什么\n  12. 线程和协程\n  13. 浅拷贝和深拷贝\n  14. 有没看过源码\n  15. 有没有处理过很复杂的难点，例如内存泄漏等\n  16. 力扣1360计算日期差\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603150923178786816?sourceSSR=users",
        "title": "美团测开一面",
        "content": "没有录屏就凭印象记一记了。\n\n全程37min，说不定今天就通知凉了哈哈，但是还是打算分享给需要的人。\n\n面试官对部门和部门业务介绍，base成都，女面试官真的很温柔呜呜呜。\n\n自我介绍。\n\n针对项目提问，课程设计做的一个QT前后端导航，问了一下导航路径呈现方式和导航算法实现。\n\nTCP/UDP区别，UDP无连接特点\n\nTCP三次握手细节\n\n浏览器内输入www.baidu.com之后会发生什么（HTTP连接）\n\nGET和POST的区别（没来得及背这个...）\n\n常见的Linux命令\n\nSQL有用过吗\n\nC++的list，vector，map，set区别（可能因为看我熟练项目是C++）\n\n测试用例的设计方法\n\n当用户向客服机器人反馈服务但是点击选项没反应，该怎么排查（？）\n\n对测开工作的理解，因为我是被开发部门刷下来的所以问了一下二者偏好。\n\n手撕代码，回文链表。\n\n反问环节，问一般什么时候知道结果，面试官说得看hr通知速度。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603140569564528640?sourceSSR=users",
        "title": "腾讯云智一面（C++，70min）",
        "content": "**1.自我介绍。**\n\n**2.说一下C++中的多态是怎么实现的。**\n\n**3.说一下内存泄露是什么，造成内存泄露的情况。**\n\n**4.了解虚表和虚指针吗？**\n\n**5.说一下Linux下的malloc的底层实现原理。**\n\n**6.说一下虚拟内存和虚拟内存的作用。**\n\n**7.说一下在浏览器输入URL后浏览器做的工作。**\n\n**8.TCP靠什么保持可靠性的？**\n\n**9.进程间通讯的方式有哪些？**\n\n**10.有了解过Window下的页面开发吗？**\n\n**11.说一下static关键字的作用。**\n\n**12.为什么要有内核态和用户态？**\n\n**13.算法题目，力扣题号：252会议室||**\n\n**总结：面试官非常和善，面试题目总体来说较为简单，都答出来了**[没问题]**，不过算法题目解法同力扣解析2类似较为复杂花费时间较多，面试官说还有改进空间**[叹息]**，总的来说这次面试体验良好。**[喝可乐][喝可乐][喝可乐]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603051758130135040?sourceSSR=users",
        "title": "金山办公算法岗一二面面经",
        "content": "base 武汉  \n时间线：3.14一面，3.26二面，发发面经攒人品，许愿hr面[许愿]  \n一面(30 min)：  \n八股大考察+一个项目细节  \nPython的引用计数  \nPython的修饰器  \n深拷贝和浅拷贝  \nPython的多线程  \n为什么Python没有真正意义上的多线程  \n产生梯度消失和梯度爆炸的原因  \nbn的原理  \nlstm与rnn的区别  \nlstm三种门的实现方式  \ncasade-rcnn的原理(项目中提到)  \n双边滤波的实现方式  \ncanny边缘检测的步骤  \n霍夫直线检测的原理  \nc++中内存泄露的原因，怎么解决  \nc++中有哪些内存分配方式  \nsvm有哪些核函数  \nsvm的工作原理  \nbagging和boosting有什么区别  \n  \n二面(40 min)  \n围绕简历中的课题以及项目挨个问实现细节，涉及的八股不多  \nstable diffusion的原理  \nCross-attention的原理  \nLoRA的原理  \n除了反卷积还有哪些上采样操作  \n项目中用到的模型的模型结构  \n项目中团队分工是怎么样的，如何对接？  \n遇到的最大的困难是什么？  \n  \n总结：没做录音记录，纯靠回忆，可能有些想不起来漏了，想起来再补上。一二面面试官都很好，面试开始时都会告知具体的考察范围，并且面试过程中全程用笔做记录，非常认真。属于是遇到过的最专业最全面的面试了，再次许愿hr面！  \n  \n  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/603004016154398720?sourceSSR=users",
        "title": "西山居 游戏开发工程师",
        "content": "小插曲：面试前五分钟，以为挂了的游族网络打电话说过了，让我赶紧给答复，终于有offer了，瞬间底气就有了好吧\n\n# 一面\n\n面试官是按照简历上写了什么一个一个问的，**一个八股也没问**\n\n1\\. 介绍下自己\n\n2\\. 挑一个项目，介绍，技术难点\n\n3\\. 我看你简历上写了lua，假如有一个大一的刚学完C语言的学弟，你怎么向学弟解释lua中的table数据结构\n\n4\\. 打游戏都会遇到延迟，你觉得这个延迟会发生在哪\n\n自己的设备到路由器\n\n路由器找到目标路由器\n\n服务器处理数据\n\n数据返回到自己设备\n\n5\\.\n有一个叫md5码的东西，学没学过。没学过，那正好，就问这个。如果要你设计一种算法，让你实现无论输入多少字节长度的数据，可能就几个字节，可能几百个G，如何使用这种算法生成一个固定长度的效验码，数据发生微小变化会导致效验码发生巨大变化。\n\n这里应该是问TCP的序列码，不过我不太清楚，答得不好\n\n6\\. 游戏功能实现题。假如已经有一个游戏抽奖功能，策划跟你说要加一个一直抽一直抽直到抽出SSR的功能，怎么设计。\n\n面试官说这里我答的挺完美的。\n\n#  反问：\n\n技术栈\n\nunity+各种脚本，而且貌似服务端代码要自己写？\n\n项目组\n\n进了再分配\n\n竞争激不激烈\n\n不存在竞争激烈的问题，因为他们都是从HR筛选过的简历池里找人面，直到面中合适的。\n\n#  总结：\n\n感觉自己答的还不错，面试官有种大佬的气质，面试过程类似聊天，体验还是不错的，没有疯狂的八股拷打，一个八股也没有，白亏了我高强度三天背八股。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/602998182229856256?sourceSSR=users",
        "title": "美团后端一面",
        "content": "**时间：3.28 15:00-16:00**\n\n**岗位：****软件开发工程师-后端方向**\n\n**部门：****基础研发平台-基础技术部**\n\n**概述：50min，面试官上来说明了要考察基础，主要是OS和计网的八股**\n\n进程和线程，是否用过多进程多线程（聊到goroutine）\n\ngo的GMP调度模型（M和P的数量，关系，协程栈空间大小）\n\nGo的GC模型（三色标记、写屏障、GC触发时机）\n\nGo的内存泄露\n\n内存的分段分页，解决了什么问题\n\nLinux常用命令\n\nGit常用命令\n\nHTTP访问过程、DNS解析过程、MAC有哪些字段\n\nLinux下如何查看域名对应的IP\n\nTCP拥塞控制（拥塞情况、超时重传、快速恢复）\n\nLinux下抓包\n\nTCP为什么可靠\n\n为什么四次挥手，Time_Wait状态（2MSL、收到SYN包情况）\n\n**算法：反转链表Ⅱ（反转部分链表）**\n\n接着补充提问：常用的排序算法，冒泡、堆排、快排时间复杂度（平均、最差）\n\n反问：平台业务：分布式定时任务、图片服务等\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/602996206930784256?sourceSSR=users",
        "title": "蚂蚁数据分析暑期实习面经｜数字金融",
        "content": "面经05[mark一下] |【蚂蚁数据分析暑期实习面经-一面】电话面试\n\n1.面试官介绍工作内容\n\n2.学得最好的一门课？对它有什么独特的理解？为什么会诞生这么一门课？\n\n3.讲一个社团的活动案例，如何与社团同学沟通，如何与指导老师沟通\n\n4.某段实习做什么工作？想象工作和实际工作有什么gap？\n\n5.另一段实习做什么工作？\n\n6.实习case深挖，涉及到一些决策树算法知识\n\n7.如果与人有分歧如何解决\n\n8.SQL连接有哪些方式\n\n9.Python点乘和叉乘有什么区别\n\n[大厂offer]\n\n"
    }
]