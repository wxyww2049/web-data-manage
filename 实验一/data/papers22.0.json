[
    {
        "url": "https://www.nowcoder.com/discuss/562370973081591808?sourceSSR=users",
        "title": "某上市公司（类似华为云）面经（综合成绩第一 已OC）",
        "content": "base：北京\n\n薪资福利：转正后15-18k 我面试分数第一 按18k发放 六险一金（公积金最高标准12%） 午餐、晚餐免费\n\n实习薪资：180/天\n\n一面：\n\n1、介绍一下Python的设计模式\n\n2、在Python中装饰器是什么\n\n3、装饰器的原理\n\n4、装饰器在什么时候加载\n\n5、类如何实现装饰器\n\n6、Python类继承的顺序（2.X深度优先 3.X广度优先）\n\n7、Python有哪些内部方法\n\n8、Python垃圾回收机制（标记清除，GO是红黑树）\n\n9、介绍一下数据库mysql innodb\n\n10、对有主键的数据表的记录进行删除或修改的时候，是锁表还是锁记录\n\n11、如果一个字段有索引，这个时候是锁表还是锁记录\n\n12、索引的存储模型\n\n13、快速排序算法\n\n14、快速排序算法最差的时候是啥时候 时间复杂度为多少\n\n15、介绍一下TCP三次握手 四次挥手\n\n16、UDP需要三次握手吗 为什么\n\n17、介绍一下路由表\n\n18、了解django的orm吗 是如何对数据库进行映射的\n\n二面：\n\n1、介绍一下websocket 和http的keep-alive有什么区别\n\n2、如何找出字符串中出现次数最多的字符 多线程查找的时候需要注意什么\n\n3、如果字符串的大小为100GB，如何统计\n\n4、如何进行大数相加\n\n5、平时用Linux多的话 说几个查看日志的命令\n\n总结：以上除了数据库锁方面没了解 基本其他问题都是秒的 然后后面HR说我是所有面试者分数最高的 可能要多加一轮总裁办的面试 通过了就按18k的水平\n其实薪资福利挺好的 但是我拒绝了 现在接了上海某自动驾驶公司的offer 想去上海玩玩 北京这城市可能不太适合我 所以拒了 等春招再去试一试\n但是实习期工资给的低 不知道为什么很多北京的公司为什么实习期都是200左右\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562351527298359296?sourceSSR=users",
        "title": "游戏客户端面经 莉莉丝（一面）",
        "content": "# 目录/时间线\n\n  * [（返回汇总帖）](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F553531404814966784)\n  * 09061500 一面\n\n# 09061500 一面\n\n总共58min。\n\n自我介绍。\n\n游戏引擎\n\n  * 之前有用过UE不\n  * 有用UE做出什么项目吗\n  * 对Unity更熟悉些，那为什么这次要投UE的岗呢\n  * 了解UE的Gameplay框架吗\n  * 用过U++吗\n\nC++\n\n  * 引用和指针的区别\n  * 解释下智能指针的实现原理 \n    * `shared_ptr`什么情况下引用计数增加、什么时候减少\n  * 虚函数是什么\n  * 析构函数是什么 \n    * 析构函数应该被定义为`virtual`吗\n  * 构造函数应该被定义为`virtual`和被`override`吗\n\n实习\n\n  * C#和Lua跨语言交互的原理\n  * ToLua热更新的原理或做法\n  * 介绍下MVVM的思想 \n    * MVVM和MVC的区别\n  * Lua的反射库\n  * 局部变量相较于全局变量有什么优势\n  * 为什么没有继续实习下去呢\n\n项目\n\n  * 遇到的最大的问题是什么，是怎样解决的\n  * 采用ECS的目的是什么 \n    * 了解Unity的ECS吗\n\n编程题\n\n  * 实现矩阵乘法\n\n常规面试题\n\n  * 为什么会想从事游戏开发\n  * 挑一个最喜欢的游戏，介绍一下它的好玩之处\n  * 有在玩手游吗，和平精英之类的射击游戏感兴趣吗\n  * 对项目游戏类型有什么偏好吗\n\n反问\n\n  * 已经定下项目组了吗：还没\n  * 面试官所在的项目是用UE开发的射击游戏吗：是的\n  * UE项目的技术栈：（介绍的是UE的客户端服务端架构与分工方案） \n    * 用到哪些框架：（介绍的是客户端程序会涉及到的工作内容种类）\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562323121261305856?sourceSSR=users",
        "title": "Java面试题复习总结（自用）",
        "content": "# ****[羞涩]**多线程**\n\n##  线程池：\n\n  1. 为什么使用线程池？\n  2. 说一下创建线程池时的核心参数和线程池执行原理？\n  3. 线程池的拒绝策略有哪些？\n  4. 常用的阻塞队列有哪些？\n  5. ArrayBlockingQueue和LinkedBlockingQueue的区别？\n  6. 阻塞队列的作用？\n  7. 为什么不先创建救急线程而是先把任务添加到阻塞队列中？\n  8. 具体说说常见的线程池种类？\n  9. 如何确定核心线程数和最大线程数？\n\n##  线程基础：\n\n  1. 线程与进程的区别是什么？\n  2. 谈一谈守护线程？\n  3. 创建线程的方式有哪些？\n  4. 实现Callable接口和Runnable接口都可以创建线程，二者的区别是什么？\n  5. 线程的start()和run()方法的区别？\n  6. 线程有哪些状态，这些状态之间是如何切换的？\n  7. wait()、sleep()、yield()和join()方法之间的区别？\n  8. notify()和notifyAll()方法的对比？\n  9. 如何保证多个线程之间的执行顺序？\n  10. 如何终止一个正在运行中的线程？\n  11. ThreadLocal的实现原理？\n  12. ThreadLocal是如何导致内存泄漏的？\n  13. 如何防止ThreadLocal内存泄漏？\n\n##  并发安全：\n\n  1. 讲一下Java内存模型？\n  2. 谈谈你对线程安全问题的理解？\n  3. Java是如何保证多线程的执行安全？\n  4. Synchronized关键字的底层原理？\n  5. 锁机制是如何升级的？\n  6. Synchronized和Lock的区别？\n  7. 谈一谈你对volatile关键字的理解？\n  8. Synchronized和volatile关键字的区别？\n  9. 谈一谈AQS？\n  10. 了解CAS吗？\n  11. 讲一下乐观锁和悲观锁？\n  12. ReentranLock的实现原理是什么？\n  13. ReentranLock和Synchronized的区别？\n  14. 聊一下ConcurrentHashMap？\n\n# [诶嘿]**Spring**\n\n  1. 什么是Spring框架？\n  2. Spring框架的优势是什么？\n  3. Spring框架中用到了哪些设计模式？\n  4. 解释一下Bean的生命周期？\n  5. BeanFactory和ApplicationContext的区别？\n  6. 解释一下Spring支持的几种Bean的作用域？\n  7. Spring框架中的单例Bean是线程安全的吗？\n  8. 什么是Bean的自动装配？有哪些方式？\n  9. 解释Spring中的循环引用？\n  10. 构造函数中的循环依赖怎么解决？\n  11. 谈谈你对IOC的理解？\n  12. 如何实现一个IOC容器？\n  13. 什么是AOP？\n  14. Spring中事务是如何实现的？\n  15. 声明式事务的原理是什么？\n  16. Spring中事务的隔离级别？\n  17. Spring中事务的传播机制？\n  18. Spring中事务失效的场景有哪些？解决方法？\n  19. @Autowired和@Resource的区别？\n\n# [围笑]**SpringMVC**\n\n  1. SpringMVC的执行流程了解吗？\n\n# [围笑]**SpringBoot**\n\n  1. Spring、SpringMVC、SpringBoot有什么区别？\n  2. 如何理解SpringBoot中的starter？\n  3. 讲一讲SpringBoot中的自动配置？\n\n# [摸鱼中]MyBatis\n\n  1. MyBatis是什么？\n  2. MyBatis框架的优缺点？\n  3. ORM是什么？\n  4. #{}和${}的区别是什么？\n  5. MyBatis执行流程/工作原理是什么？\n  6. MyBatis是否支持延迟加载？\n  7. 延迟加载的底层原理是什么？\n  8. MyBatis的一级、二级缓存使用过吗？\n  9. 二级缓存什么时候会清理缓存中的数据？\n\n# [亲亲]MySQL\n\n##  事务：\n\n  1. 介绍一下事务的四大特性？\n  2. 并发事务会带来哪些问题？\n  3. 如何解决并发事务带来的问题/事务的隔离级别有哪些？\n  4. 可重复读和幻读的区别？\n  5. 事务的ACID靠什么保证？\n  6. 事务的三大日志是什么？作用？\n  7. bin log 和 redo log的区别？\n  8. undo log 和 redo log的区别？\n  9. 什么是MVCC？实现原理是什么？\n\n##  优化：\n\n##  其它：\n\n  1. MySQL主从同步是如何实现的？\n\n\\-----------------持续更新----------------------------------------\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562298293972111360?sourceSSR=users",
        "title": "momenta Golang日常实习一面",
        "content": "第一次面试有点紧张，感觉答的不咋样，结果第二天问HR说过了\n\n1\\. 项目、主要做的内容（实验室的项目，没问多深）\n\n2\\. go哪些数据类型是线程安全的（记错了一些）\n\n3\\. map的两种扩容方式（没看过，答成溢出桶方向了）\n\n4\\. map可寻址吗\n\n5\\. 读已经close的channel会怎么样\n\n6\\. 生产者、消费者用有缓存channel通信场景，如何让生产者和消费者退出\n\n7\\. GMP中调度机制，有了解过hand off机制吗\n\n8\\. mysql的事务隔离\n\n9\\. mysql B+树中主键为big int，数据大小1K，页大小16K，3层能存多少数据\n\n10\\. 有没有用过redis，持久化机制\n\n11\\. 四次挥手中TIME_WAIT状态的作用（答得有点混乱）\n\n12\\. 算法：全排列\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562288148936417280?sourceSSR=users",
        "title": "阿里健康 秋招 Java 一面（已过）",
        "content": "## 一面 9.12（30min）\n\n> 电话面，八股比较少，开放性问题比较多。\n\n  * 无自我介绍，讲一个你简历上的项目\n  * 项目\n  * SpringMVC和SpringBoot区别\n  * SpringBoot自动装配\n  * Spring有很多的bean，启动慢，怎么优化\n  * 怎么知道一个bean的启动耗时\n  * bean的初始化过程哪一阶段比较耗时\n  * 动态代理有几种方式\n  * jdk代理，cglib区别\n  * 知道哪些字节码框架\n  * 有没有用ASM来做什么\n  * 打印日志，比如：变量a，值为1，`log.info(\"a={}\", a)`，输出：`a=1`，在日志的底层方法中，我们怎么获得入参的变量名？ \n    * 这里我说用反射来实现，面试官问我能用ASM来实现吗？我说不会（别急，有反转）。\n  * 当别人调你的方法，你这个方法怎么知道是哪个地方调用的\n  * JVM类加载过程\n  * 同事想和你用一个jar包，你用的是1.0版本，他用的是2.0版本，冲突怎么解决？\n  * JVM内存结构\n  * 哪些是线程私有的，哪些是共享的\n  * 虚拟机栈包含了哪些信息 \n    * 说到了局部变量表，\n    * 面试官：那现在就知道怎么打印方法入参的局部变量名了吧？\n    * 然后面试官就回到之前那个打印日志的问题，拿到调用线程的栈帧信息，我们就知道当前调用的是哪个类，哪个方法，第几行，我们就可以通过ASM字节码解析工具来拿到局部变量表的信息，就可以拿到传递参数的变量名。\n    * 全串起来了，太强了。orz orz\n  * 平时怎么提升自己的技术，知识广度，通过什么渠道学习新技术\n  * 然后看了一下我的博客，说写的挺多的，都是自己写的吗？面试官说挺好的。\n\n> 面试官很有深度，一步步由浅入深，最nb的是还能拿当前问到的知识点来解决前面的问题，太强了。收获很多。\n>\n> 面完就说给我往上推进流程，之后发了测评。第二天做了测评。\n>\n> 但至今为止流程一直在待安排面试，没有推进了。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562239058273898496?sourceSSR=users",
        "title": "德拓-外包面试-大数据开发工程师",
        "content": "1.自我介绍\n\n2.数据采集相关，怎么把kafka中的数据采集到mysql中？ 忘了\n\n3.hive，两张表的重复数据，怎么去重？ 回答distinct,group by ，开窗取第一条，\n\n开窗函数是哪个？ 没回答上来\n\n4.udf函数写过吗，flink消费kafka中的数据写过代码吗，需要看代码？\n\n5.使用java干过那些代码？\n\n面试时长：10分钟，面试效果，差\n\n不足：对于简历上的内容，回答支支吾吾，甚至不能开口，所以面试失败\n\n面试官指点，认为hive sql只要熟悉就能胜任工作，在掌握一门计算语言，如java,python,就能干好工作\n\n挺感谢面试完别人指出你的缺点，当然面试挂了，问的都是些很简单的问题。\n\n面试难度：初级\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562219036587704320?sourceSSR=users",
        "title": "体育场找座位 - 华为OD统一考试（C卷）",
        "content": "> OD统一考试（C卷）\n>\n> 分值： 100分\n>\n> 题解： Java / Python / C++\n\n![alt](https://uploadfiles.nowcoder.com/images/20231201/644248237_1701399029315/A4F5E48572027B66E6ECFA2EF0A7C66A)\n\n## 题目描述\n\n在一个大型体育场内举办了一场大型活动，由于疫情防控的需要，要求每位观众的必须间隔至少一个空位才允许落座。现在给出一排观众座位分布图，座位中存在已落座的观众，请计算出，在不移动现有观众座位的情况下，最多还能坐下多少名观众。\n\n## 输入描述\n\n一个数组，用来标识某一排座位中，每个座位是否已经坐人。0表示该座位没有坐人，1表示该座位已经坐人。\n\n## 输出描述\n\n整数，在不移动现有观众座位的情况下，最多还能坐下多少名观众。\n\n## 示例1\n\n    \n    \n    输入：\n    10001\n    \n    输出：\n    1\n    \n\n## 示例2\n\n    \n    \n    输入：\n    0101\n    \n    输出：\n    0\n    \n\n**备注**\n\n> 1 <= 数组长度 <= 10000\n\n## 题解\n\n>\n> 通过贪心模拟的方法，遍历座位数组，统计连续的空座位并计算最多还能坐下多少名观众。在每次迭代中，检查当前座位及其相邻座位的状态，如果当前座位为空且两侧也为空，则可坐下一名观众。最后输出结果。\n\n### C++\n\n    \n    \n    #include <iostream>\n    #include <vector>\n    \n    using namespace std;\n    \n    int main() {\n        string seat;\n        cin >> seat;\n    \n        int result = 0, n = seat.length();\n    \n        // pre 用于表示前一个座位的状态， 0表示该座位没有坐人，1表示该座位已经坐人\n        char pre = '0';\n        for(int i = 0; i < n; i++) {\n            // seat[i] 没有人座 且两边都没有人座\n            if(pre == '0' && seat[i] == '0' and (i + 1 == n or seat[i+1] == '0')) {\n                result++;\n                p\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562051641344561152?sourceSSR=users",
        "title": "某小厂实习面经 （已oc）",
        "content": "一面\n\n自我介绍\n\nstring和stringbuffer,stringbuilder区别\n\nstring类能不能被继承，为什么\n\nstring intern作用（忘了）\n\nspring aop怎么实现的\n\ntry-finally,finally一定执行吗，有没有特别情况\n\n进程线程的区别\n\nautowired和resource什么区别(忘了）\n\nmysql事务特性\n\nmysql的隔离级别怎么实现的，解决了哪些问题\n\n介绍redis的数据结构\n\n算法题：数组去重\n\n二面\n\n自我介绍\n\narraylist 和 linkedlist区别，什么时候会用到Linkedlist (说的lru：双链表+hashmap)\n\nhashmap的底层实现\n\n解决哈希冲突的方法（只说了线性探测法和开链法）\n\nhashmap 的数组长度为什么取2的幂次方？\n\nhashmap为什么用红黑树不使用其他树（不知道，纯乱说）\n\nhashmap 和 concurrenthashmap区别\n\n说下hashmap线程不安全场景\n\nCAS 的ABA问题怎么解决。\n\nsynchronized 和 ReentrantLock的区别\n\nsynchronized 和 ReentrantLock 怎么实现可重入的\n\nReentrantLock 如何配置是否是公平锁。（忘了）\n\n垃圾回收的方式\n\n类加载的全过程\n\n解释下 spring ioc 和 spring aop\n\n动态代理的两种实现方式（忘了）\n\nmybatis $和#什么区别（尬了，mybatis没复习，这个都没说出来）\n\nmysql事务特性\n\nmysql的隔离级别怎么实现的，解决了哪些问题\n\nmvcc 如何执行的，跟undolog联系起来\n\nmysql 中的慢查询怎么解决。\n\n从索引方面，如何优化。\n\n算法题：137. 只出现一次的数字 II\n\n无语，不会做，面试官看我不会就说让我用哈希表做出来就可以。\n\n反问后结束\n\n二面面试官还挺不错，难度循序渐进，看我不会会给提示，面试也比较简单。\n\n面完后第二天hr来找我了解情况，问我是保研还是直接工作，我考虑了很久，最后决定如实告知，相当于放弃了offer。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562021350731177984?sourceSSR=users",
        "title": "2024届秋招剑心互娱游戏开发岗面经",
        "content": "## **一面 11.01**\n\n1\\. C++ 运行main()函数之前计算机会做什么准备工作\n\n2\\. 数据结构的堆栈有什么区别？\n\n3\\. 内存的堆栈有什么区别:\n\n4\\. 面向对象三要素\n\n5\\. 多态的实现\n\n6\\. 虚函数表是怎么实现的\n\n7\\. CPU大端小端，以及如何快速确定确定计算机是大端小端\n\n8\\. 宏和内联函数的区别\n\n9\\. New和malloc的区别？如果new之后，不用delete删除而是用free可能会导致什么问题？为什么？\n\n## **二面 11.02**\n\n  1. 虚函数表是什么时候建立的？\n\n2\\. 类的成员函数模板可以是虚函数吗？为什么？\n\n3\\. 声明一个类，没有定义，在主函数中调用会怎么样？报错。编译的时候会报错吗？不会\n\n### **coding：**\n\n1\\. 给两个有序升序数组A， B，将其排列为A[0], B[0], A[1], B[1], ……， A[n - 1], B[n - 1],\n不得使用额外空间\n\nint CardOrder(int A[], int B[], int nLen)\n\n2\\.\n一个天平，两边都有砝码，砝码分别是两个数组，代表砝码的个数和每个砝码的质量，每个质量砝码个数是无限的，砝码的质量是1-10g，要求把两边的砝码进行替换使其砝码质量相等的最少操作次数，比如left[]\n= {1,5, 5, 8, 10}, leftsum = 29, right[]={9, 4, 8}, rightsum=21,\n\n最少需要一次，把left[4]由10改为2即可平衡。要求时间复杂度O(n)，不能使用sort排序。(但是我感觉必须排序啊，我的时间复杂度是O(nlogn)，不符合要求)\n\n笔试编程题3道做出2道，二面没过，技术面三轮。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562018239509807104?sourceSSR=users",
        "title": "字节后端实习一面（挂）",
        "content": "1.5h\n\n自我介绍\n\n项目拷打(项目架构和怎么提高优化qps等)\n\nDocker:\n\n1.Docker原理\n\n2.Docker为什么能环境隔离\n\nRabbitMQ:\n\n1.为什么不用别的消息队列\n\n2.重复消费怎么解决\n\n3.消息丢失怎么解决的\n\n4.为什么能提高吞吐量\n\n计算机网络：\n\n1.3次握手4次挥手\n\n2.为什么4次握手中间两次不能变成一次\n\n3.http为什么不安全，如果恶意拦截在哪拦截\n\n4.TCP为什么可靠传输\n\n5.cookie和session，说说cookie安全性\n\n操作系统：\n\n1.什么是虚拟内存和物理内存\n\n2.页表和段表干什么的\n\n3.为什么要有二级页表\n\nJava:\n\n1.多线程的通信方法有哪些\n\n2.说说对泛型的理解，什么情况下会用到泛型\n\n3.说说对反射的理解，什么情况下会用到反射\n\n4.说一下类加载机制\n\n5.说一下内存模型，JMM讲一下\n\n6.垃圾回收算法\n\nMySQL\n\n1.MySQL执行流程\n\n2.一条update是不是原子性的？为什么？\n\n3.B+树的好处\n\n4.查索引情况有关命令\n\n5.如果一个列即使单列索引，又是联合索引，单独查它的话先走哪个？\n\n5.事务隔离级别\n\n6.幻读\n\n算法：leetcode763.划分字母区间\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562020297566621696?sourceSSR=users",
        "title": "腾讯微信安卓开发一面面经",
        "content": "  1. 介绍自己的项目，问了项目的难点和创新点\n\n2\\. 为什么算法转开发\n\n3\\. 介绍C++智能指针\n\n4\\. 下面两个样例的对象a有什么区别\n\n(1)\n\nPerson a();\n\n(2)\n\nPerson a;\n\na = Person();\n\n**5\\. coding**\n\n设置一个算法，有一下功能\n\n1.LFUCache(int capacity) ：用数据结构的容量 capacity 初始化对象\n\n[http://2.int](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttp%253A%2F%2F2.int)\nget(int key) ： 如果键 key 存在于缓存中，则获取键的值，否则返回 -1 。\n\n3.void put(int key, int value) ： 如果键 key 已存在，则变更其值；如果键不存在，请插入键值对。当缓存达到其容量\ncapacity 时，则应该在插入新项之前，移除最不经常使用的项。在此问题中，当存在平局（即两个或更多个键具有相同使用频率）时，应该去除 最近最久未使用\n的键。\n\n为了确定最不常使用的键，可以为缓存中的每个键维护一个 使用计数器 。使用计数最小的键是最久未使用的键。\n\n当一个键首次插入到缓存中时，它的使用计数器被设置为 1 (由于 put 操作)。对缓存中的键执行 get 或 put 操作，使用计数器的值将会递增。\n\n    \n    \n    #include <iostream>\n    #include <map>\n    #include <cstdio>\n    #include <vector>\n    using namespace std;\n    class LFUCache\n    {\n        private:\n            int capacity;\n            map<int , int> cache, count;\n        public:\n            LFUCache(int capacity1): capacity(capacity1) {}\n            int get(int key)\n            {\n                if(cache.count(key) == 1) \n                { \n                    count[key] += 1;\n                    return cache[key];\n                }\n                return -1;\n            } \n            void put(int key, int value)\n            {\n                int min = 1e9, index = -1;\n                if(cache.size() == capacity)\n                {\n                    for(map<int, int>::iterator it = count.begin(); it != count.end(); ++it)\n                    {\n                        if(it->second < min) \n                        {\n                            min = it->second;\n                            index = it->first;\n                        }\n                    }\n                    cache.erase(index);\n                }\n                \n                cache[key] = value;\n                count[key] += 1;\n            }\n    \n    };\n    int main() \n    {\n        LFUCache cache(3);\n        cout << cache.get(0) << endl;\n        int a[5] = {1, 2, 4, 3, 4};\n        for(int i = 0; i < 5; ++i)\n        {\n            cache.put(a[i], i);\n        }\n        // 2 1\n        // 4 4\n        // 3 3\n        // for(int i = 0; i < 5; ++i)\n        // {\n        //     cout << cache.get(a[i]) << endl;\n        // }\n        cout << cache.get(1) << endl;\n        cout << cache.get(2) << endl;\n        cout << cache.get(3) << endl;\n        cout << cache.get(4) << endl;\n        return 0;    \n    }\n    \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561942603944484864?sourceSSR=users",
        "title": "百度二面",
        "content": "1.自我介绍  \n2.布隆过滤器  \n3.介绍了下我的项目  \n4.char和varchar的区别  \n5.操作系统中的随机存储和连续存储  \n6.如何保证原子性  \n7.写一条sql，有ip,id，一个ip对应多个id，找到拥有id量前十的ip  \n8.不用redis，怎么实现本地存储  \n9.有十台服务器可以访问MySQL,如何保证MySQL的数据和服务器的数据同步  \n10.介绍下YAPI  \n11.介绍下git,git checkout,git push,git pull指令分别是什么意思  \n12.用nginx服务器是干什么的  \n  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561941270055096320?sourceSSR=users",
        "title": "智能成绩表 - 华为OD统一考试（C卷）",
        "content": "> OD统一考试（C卷）\n>\n> 分值： 100分\n>\n> 题解： Java / Python / C++\n\n![alt](https://uploadfiles.nowcoder.com/images/20231201/644248237_1701399029315/A4F5E48572027B66E6ECFA2EF0A7C66A)\n\n## 题目描述\n\n小明来到某学校当老师，需要将学生按考试总分或单科分数进行排名，你能帮帮他吗?\n\n## 输入描述\n\n第1行输入两个整数，学生人数n和科目数量m。0<n<100,0<m<10\n\n第2行输入m个科目名称，彼此之间用空格隔开。科目名称只由英文字母构成，单个长度不超过10个字符。科目的出现顺序和后续输入的学生成绩一一对应。不会出现重复的科目名称。\n\n第3行开始的n行，每行包含一个学生的姓名和该生m个科目的成绩(空格隔开)，学生不会重名。学生姓名只由英文字母构成，长度不超过10个字符。成绩是0~100的整数，依次对应第2行中输入的科目。\n\n第n+2行，输入用作排名的科目名称。若科目不存在，则按总分进行排序。\n\n## 输出描述\n\n输出一行，按成绩排序后的学生名字，空格隔开。成绩相同的按照学生姓名字典顺序排序。\n\n## 示例1\n\n    \n    \n    输入：\n    3 2\n    yuwen shuxue\n    fangfang 95 90\n    xiaohua 88 95\n    minmin 100 82\n    shuxue\n    \n    输出：\n    xiaohua fangfang minmin\n    \n    说明：\n    按shuxue成绩排名，依次是xiaohua、fangfang、minmin\n    \n\n## 示例2\n\n    \n    \n    输入：\n    3 2\n    yuwen shuxue\n    fangfang 95 90\n    xiaohua 88 95\n    minmin 90 95\n    zongfen\n    \n    输出：\n    fangfang minmin xiaohua\n    \n    说明：\n    排序科目不存在，按总分排序，fangfang和minmin总分相同，按姓名的字典顺序，fangfang排在前面\n    \n\n## 题解\n\n> 考察多字段排序的基本用法\n\n### C++\n\n    \n    \n    #include <iostream>\n    #include <vector>\n    #include <algorithm>\n    \n    using namespace std;\n    \n    struct Student {\n        string name;\n        vector<int> scores;\n        int totalScore;\n    };\n    \n    int main() {\n        int n, m;\n        // 输入学生数量（n）和科目数量（m）\n        cin >> n >> m;\n    \n        // 输入各科目名称\n        vector<string> subjects(m);\n        for (string& subject : subjects) cin >> subject;\n    \n        // 输入学生信息，包括姓名、各科成绩和计算总成绩\n        vector<Student> students(n);\n        for (Student& student : students) {\n            cin >> student.name;\n            student.scores.resize(m);\n            for (int& score : student.scores) {\n                cin >> score;\n                student.totalScore += score;\n            }\n        }\n    \n        // 输入要按照哪个科目排序\n        string sortSubject;\n        cin >> sortSubject;\n    \n        // 查找排序的科目在科目列表中的位置\n        auto it = find(subjects.begin(), subjects.end(), sortSubject);\n        int sortIndex = (it != subjects.end()) ? distance(subjects.begin(), it) : -1;\n    \n        // 使用 Lambda 表达式进行排序\n        sort(students.begin(), students.end(), [sortIndex](const Student& a, const Student& b) {\n            if(sortIndex != -1) {   // 按指定的成绩降序排序\n                if(a.scores[sortIndex] != b.scores[sortIndex]){\n                    return a.scores[sortIndex] > b.scores[sortIndex];\n                }\n            } else{   // 按总分降序\n           \t\tif(a.totalScore != b.totalScore) {\n                    return a.totalScore > b.totalScore;\n                }\n            }\n         \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562019734087012352?sourceSSR=users",
        "title": "2024秋招天翼云C++开发面经",
        "content": "(估计今年人太多了，面试官态度不太友好，11.02面的)\n\n1\\. 网络编程\n\n2\\. 多态的实现和本质\n\n3\\. TCP协议\n\n4\\. TCP在应用层是怎么断开连接的\n\n5\\. 知道哪些网络编程函数\n\n6\\. B+树\n\n、\n\n7\\. 跳表\n\n8\\. 对云原生的了解\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561922371657928704?sourceSSR=users",
        "title": "交通银行一面 软件开发工程师 秋招 面经",
        "content": "# 基本信息\n\n    \n    \n    时间：2023.11.27\n    时长：11 min\n    base：  深圳、广东省辖地级市、副省级市、国家计划单列市，超大城市，\n    \t\t经济特区、全国性经济中心城市、国家创新型城市，粤港澳大湾区核心引擎城市\n    \n\n# 问题\n\n  1. （HR）是选择的深圳吗？\n  2. （HR）自我介绍\n  3. （HR）你比较擅长的语言有哪些？\n  4. （面试官一）promise简述一下？\n  5. （第二个面试官）你在项目中遇到的比较难的东西是什么，可以简单说一下吗？\n  6. （又换了一个面试官，好家伙）说一下全栈、前端、后端的理解？\n  7. （又换面试官、好家伙，一个面试官一个题目，服了）手撕代码，一道很简单的题，三分钟不到秒了，真是浪费time\n  8. （HR）想问一下你B站视频搜什么可以搜到？\n  9. （HR身边的人）你的网课有经济效益吗？你知道吗，交通银行不允许员工在外兼职。\n  10. （换回HR）好的，你的面试今天结束了，保持你的联系方式畅通\n\n# 总结\n\n抽象、多人模式。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562018527859740672?sourceSSR=users",
        "title": "2024届快手测试开发面试面经",
        "content": "总共三面，技术面都参加了，题目也全部回答出来了，但是最终没过。\n\n## **一面**\n\n  1. 最熟悉的编程语言\n\n我说是C++和python\n\n2\\. C++ static的作用\n\n3\\. C++ const的作用\n\n4\\. coding\n\n合并两个有序链表\n\n将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。\n\n示例 1：\n\n输入：l1 = [1,2,4], l2 = [1,3,4]\n\n输出：[1,1,2,3,4,4]\n\n示例 2：\n\n输入：l1 = [], l2 = []\n\n输出：[]\n\n示例 3：\n\n输入：l1 = [], l2 = [0]\n\n输出：[0]\n\n提示：\n\n两个链表的节点数目范围是 [0, 50]\n\n-100 <= Node.val <= 100\n\nl1 和 l2 均按 非递减顺序 排列\n\n    \n    \n    class ListNode:\n        def __init__(self, val, next=None):\n            self.val = val\n            self.next = None\n    \n    def merge(l1, l2):\n        head1 = ListNode(0)\n        p1 = head1\n        for i in l1:\n            t1 = ListNode(i)\n            p1.next = t1 \n            p1 = p1.next \n        \n        head2 = ListNode(0)\n        p2 = head2\n        for i in l2:\n            t2 = ListNode(i)\n            p2.next = t2 \n            p2 = p2.next \n        \n        res = ListNode(0)\n        p = res\n        h1 = head1.next\n        h2 = head2.next\n        while h1 != None and h2 != None:\n            if h1.val <= h2.val:\n                t1 = h1.next\n                h1.next = None\n                p.next = h1\n                p = p.next\n                h1 = t1\n            else:\n                t2 = h2.next\n                h2.next = None\n                p.next = h2\n                p = p.next\n                h2 = t2\n        if h1 != None:\n            p.next = h1 \n        if h2 != None:\n            p.next = h2 \n        return res.next\n    \n    # l1 = [1,2,4]\n    # l2 = [1,3,4]\n    \n    # l1 = []\n    # l2 = []\n    \n    l1 = []\n    l2 = [0]\n    \n    head = merge(l1, l2)\n    while head != None:\n        print(head.val, end = \" \")\n        head = head.next\n    \n    \n\n5\\. coding\n\n实现快速排序\n\n    \n    \n    def findpos(a, l, r):\n        tmp = a[l]\n        left, right = l, r \n        while left <= right:\n            while left <= right and tmp >= a[left]:\n                left += 1\n            while left <= right and tmp < a[right]:\n                right -= 1\n            t = a[left]\n            a[left] = a[right]\n            a[right] = t \n        a[l] = a[left]\n        a[left] = tmp\n        return right\n    \n    def quicksort(a, l, r):\n        if l >= r:\n            return\n        p = findpos(a, l, r)\n        quicksort(a, l, p - 1)\n        quicksort(a, p + 1, r)\n    \n    arr = [1, 30, 10, 9, 54, 5, 43, 90, 8, 3, 2]\n    quicksort(arr, 0, len(arr) - 1)\n    print(arr)\n    \n\n## **二面**\n\n  1. 问实习项目\n\n2\\. 梯度爆炸的原因\n\n3\\. 使用激活函数的原因\n\n4\\. 为什么常见的激活函数是那几个\n\n5\\. http,ip是哪一层\n\n6\\. 拥塞控制算法\n\n7\\. 延迟和抖动\n\n8\\. 最擅长的编程语言是哪些？\n\n9\\. 虚函数和纯虚函数\n\n10\\. 分布式mysql\n\n11\\. 主从同步\n\n12\\. 多进程通信的方式有哪些\n\n管道 共享内存 信号量 消息队列\n\n13\\. coding\n\nLeetcode 买股票\n\n给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。\n如果你最多只允许完成一笔交易（即买入和卖出一支股票），设计一个算法来计算你所能获取的最大利润。 注意你不能在买入股票前卖出股票。要求只能遍历一次数组\n\n    \n    \n    def f(arr):\n        mi = arr[0]\n        n = len(arr)\n        ans = int(-1e9)\n        for i in range(1, n):\n            # if arr[i] > mi:\n            ans = max(ans, arr[i] - mi)\n            mi = min(mi, arr[i])\n        return ans\n    \n    arr = [6, 5, 4, 3, 2, 1]\n    print(f(arr))\n    \n\n## **三面**\n\n1\\. 问项目\n\n2\\. 场景题: 怎么计算两个手机视频通话的端到端延时\n\n条件和要求:\n\n(1) 我身边有两台手机，可以自己操作\n\n(2) 可以借助其他现实中存在的工具\n\n(3) 尽可能精确\n\n我的方案:\n\n用秒表，拍摄一个移动的物体，记录它刚进入第一个手机的镜头的时间，记录它第二个手机刚出现这个手机的镜头的出现时间。\n\n更好的方案:\n\n直接拍摄秒表，记录两只手机出现的秒表记录的时间的时间差。\n\n3\\. coding\n\n1\\. 题目：已知某棵二叉树的前序遍历结果和这颗二叉树中序遍历结果，重建这棵二叉树\n\n说明：（以C++为例）\n\n\\- 树节点定义\n\n    \n    \n      struct Node {\n    \n        Node* left;\n     \n        Node* right;\n     \n        int value;\n     \n      };\n    \n    \n\n\\- 前序遍历：当遍历到某个节点时，先访问当前节点，再访问左子树，再访问右子树\n\n\\- 中序遍历：当遍历到某个节点时，先访问左子树，再访问当前节点，再访问右子树\n\n\\- 举例：\n\n1\n\n2 3\n\n4 5 6\n\n前序遍历结果：1 2 4 5 3 6\n\n中序遍历结果：4 2 5 1 3 6\n\n\\- 实现：Node* rebuild(int* pre_order, int pre_len, int* in_order, int in_len);\n\n    \n    \n    #include <iostream>\n    using namespace std;\n    \n    Node* create(int* pre_order, int prel, int prer, \n    int* in_order, int inl, int inr) \n    {\n        if(prel > prer) {return NULL;}\n        Node *root = new node;\n        root->value = pre_order[prel];\n        int k = inl;\n        for(int k = inl; k <= inr; ++k) \n        {\n            if(in_order[k] == pre_order[prel]) { break; }\n        }\n        int numleft = k - inl;\n        root->left = create(pre_order, prel + 1, prel + numleft, in_order, inl, k - 1);\n        root->right = create(pre_order, prel + numleft + 1, prer, int_order, k + 1, inr);\n    }\n    \n    Node* rebuild(int* pre_order, int pre_len, int* in_order, int in_len)\n    {\n        Node *root = create(pre_order, 0, pre_len - 1,\n        in_order, 0, in_len - 1);\n        return root;\n    }\n    \n    int main() {\n        cout << \"Hello World!\" << endl;\n    }\n    \n\n4\\. 上述的二叉树应该使用哪些测试样例\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562015213357142016?sourceSSR=users",
        "title": "2024届阿里云羚羊算法工程师校招一面",
        "content": "  1. 聊项目\n\n2\\. 讲述一个机器学习模型的损失函数、优化方法等\n\n我讲了逻辑回归\n\n3\\. 两道场景题:\n\n(1) 抽奖系统的设计，要满足各种不同人群的获奖概率\n\n(2) 广告投放\n\n补充说明: 两道场景题并没有简单，当时是投屏展示的，面试中我没心思去保存题目，题目很多要求，比较繁杂，我只是写了一个大概\n\n4\\. C++怎么申请堆内存 栈内存\n\n5\\. 泰勒展开公式什么情况下在0的时候展开\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561918515368747008?sourceSSR=users",
        "title": "掌握科技三（HR）面 前端 秋招 面经",
        "content": "# 基本信息\n\n    \n    \n    时间：2023.11.20\n    时长：25 min\n    base：北京、首都、直辖市、国家中心城市、超大城市\n    \n\n# 问题\n\n确认求学经历， 学业成绩写的5-20%是区间值吗？\n\n  1. 我看到你过往有实习经历\n  2. 本科或者硕士有参加过竞赛吗？\n  3. 为什么选择前端开发？\n  4. 所以你觉得自己更熟悉前端？\n  5. qax是北京吗？\n  6. 问一下项目产出？\n  7. 哪一个难度高一点？\n  8. 是之前没做过，还是工作量上能体现难度？\n  9. 你们远程是打字吗，不允许视频吗？\n  10. 你是发布在b站吗？\n  11. 是你自主录制的吗？\n  12. 你是哪个阶段做的？\n  13. 你个人怎么想的，为啥要做这个事？\n  14. 开发岗位轮岗很难得，是怎么得到这样的机会的？\n  15. 工作量大吗？\n  16. 没有工作的时候，也要晚上很晚吗？\n  17. 你觉得怎么样的是合适的压力\n  18. 你现在有哪些offer\n  19. 你看重什么？\n  20. 你觉得offer拿的大概是什么范围？\n  21. 那些点是你希望的？\n  22. 你了解我们吗？\n  23. 你未来有实习的计划吗？\n  24. 你期望薪酬吗？\n  25. 反问。我愣住 我不知道问什么 G\n\n# 总结\n\nG了，可能觉得我不会去吧。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/562011768336211968?sourceSSR=users",
        "title": "2024届淘天阿里妈妈算法工程师机器学习面经",
        "content": "知乎链接\n[https://zhuanlan.zhihu.com/p/670356216](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F670356216)\n\n## 一面 11.15 60min\n\n1\\. Transformer\n\n(1) 结构\n\n(2) 为什么它能处理多种模态，是怎么处理的\n\n(3) 它怎么用于图像分类，怎么处理图像的\n\n(4) 他的解码器和编码器有什么不同\n\nMask编码\n\n2\\. BN的作用和好处\n\n减少损失函数后梯度消失\n\n3\\. Dropout的好处\n\n4\\. 梯度消失的原因\n\n5\\. Resnet为什么能减缓梯度消失的原因\n\n6\\. coding\n\n(1) 在nums寻找最小的连续子数组使得它们的和大于所给的targets\n\n法1: 前缀和+二分\n\n    \n    \n    def search(s, k, n, t):\n        t > s[n]:\n            return -1\n        l, r = k, n \n        res = n\n        while l < r:\n            mid = (l + r) >> 1\n            if s[mid] >= t:\n                res = mid\n                r = mid - 1\n            else:\n                l = mid + 1\n        return res\n    \n    def func(targets, nums):\n        if targets < sum(nums):\n            return 0\n        n = len(nums)\n        s = [0] * (n + 1)\n        for i in range(1, n+1):\n            s[i] = s[i - 1] + nums[i]\n        res = n\n        for i in range(1, n+1):\n            t = targets + s[i - 1]\n            d = search(s, i, n, t)\n            if d > i and d - i + 1 < res:\n                res = d - i + 1\n        return res\n    \n    target = 7\n    nums = [2,3,1,2,4,3]\n    print(func(target, nums))\n    \n\n法2: 双指针\n\n## 二面 12.01 50-60min\n\n  1. 介绍项目\n\n2\\. 说说对最近比较火的多模态 图像生成的了解\n\n3\\. coding\n\n(1) 求一个数的N次幂\n\n    \n    \n     def pow(k, n):\n        if k == 0 and n == 0:\n            return None\n        flag = 1\n        if n < 0:\n            flag = 0\n        res = 1\n        while n > 0:\n            if (n & 1) == 1:\n                res = res * k \n            k *= k\n            n >>= 2\n        if flag == 1:\n            return res\n        return 1.0 / res\n    \n\n(2)全排列\n\n输入: 5,3\n\n输出: [(1,2,3),(1,2,4),(1,2,5),(2,3,4),(2,3,5),(3,4,5),...]\n\n    \n    \n    import copy\n    def dfs(l, res, n, m, index, level, tmp):\n        if level > m:\n            return\n        if index > n:\n            return\n        if level == m:\n            t = copy.deepcopy(tmp)\n            res.append(tuple(t))\n            return\n        # print(\"index  \", index, \"  n - m + level + 1  \", n - m + level + 1)\n        for i in range(index, n - m + level + 1):\n            # print(\"i \", i, \" l[i] \", l[i])\n            tmp.append(l[i])\n            dfs(l, res, n, m, i+1, level+1, tmp)\n            tmp.pop()\n    \n    def pailie(n, m):\n        l = range(1, n+1)\n        res = []\n        tmp = []\n        dfs(l, res, n, m, 0, 0, tmp)\n        return res\n    \n    print(pailie(5, 3))\n    \n\n希望能过吧，有点大厂情结，有机会三面的话再来补充。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561915436980244480?sourceSSR=users",
        "title": "金山二面 前端 秋招 面经",
        "content": "# 基本信息\n\n    \n    \n    时间：2023.11.15\n    时长：35 min\n    base：珠海，广东省地级市、省域副中心城市，Ⅱ型大城市\n    \n\n# 问题\n\n  1. 自我介绍\n  2. 你跟别人一起开发过吗？用的git svn这些吗\n  3. 说一下git svn的区别？ 【不会】\n  4. 有master开发完了，提了mr，结果你下班了，然后负责人合并了，然后发布，发现问题，matster代码被rework了，你现在解决完问题了，你该怎么办呢？\n  5. 你比较好的是知道要同步最新分支，但是你功能分支已经合并到master分支，然后你要做的是xxxxx\n  6. 你的项目有没有使用ts\n  7. returnType是什么？ [https://juejin.cn/post/7151669172970192904](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fjuejin.cn%2Fpost%2F7151669172970192904)\n  8. 运维工具、部署工作流程大概是什么？\n  9. Jenkins构建打包，你写过相关的脚本吗？\n  10. 你了解过k8s大概是一个什么组成？\n  11. 你是vue、react都写过是嘛\n  12. vue和react的区别是什么？\n  13. 了解过哪些前端脚手架、构建工具、他的打包原理是什么？\n  14. 项目是ry二开的吗？\n  15. 我们完全不懂后端的人会啥要用ry，你有办法说服我去使用某个框架吗？\n  16. 全站框架有服务端，前端方面的服务端渲染有多少了解？\n  17. 没问题了，你有什么想问的，问了技术栈比例 vue3+ts+wx小程序等等\n\n# 总结\n\nG了，问了一堆非前端的东西，服啦！\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561884949033312256?sourceSSR=users",
        "title": "# B站测开",
        "content": "## 一面(12.5,30min)\n\n  1. 自我介绍\n  2. 实习的话可以多久，学校可以请假吗\n  3. 对测试开发有了解吗\n  4. 如果给你一个冰箱，你要怎么测试它的功能\n  5. mysql怎么使用联表查询\n  6. 怎么使用redis的\n  7. 对于缓存击穿，雪崩，穿透的了解\n  8. 操作系统的死锁怎么产生的\n  9. 操作系统怎么解决死锁\n  10. 对于那些linux有了解\n  11. Java是怎么实现多线程的\n  12. 讲一下HTTP和HTTPS的区别\n  13. http的请求方式有哪些\n  14. 近期有写什么东西\n  15. 讲一下你的单点登录的实现\n  16. 对于测试开发有什么看法\n  17. 口述算法：经典题：寻找两个有序数组的中位数\n  18. 在学校有没有做什么内容\n  19. 了解B站吗，平常怎么使用\n  20. 反问\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561846050613387264?sourceSSR=users",
        "title": "smartX分布式文件系统一面凉经",
        "content": "这次面试是我的第一次面试，算是处女面了，整体还是很紧张，感觉大概率寄了。\n\n上来先扣项目，一个个扣，问的很仔细，往底层和架构狂扣，问的我哑口无言直接。\n\n然后问了一些raft的算法问题：\n\n  * raft网络分区以后怎么同步日志，以及新老leader节点问题。\n  * raft怎么进行日志同步\n  * 线程、进程和协程的区别\n\n然后是对于linux文件系统的认识，关于Inode节点，目录项，以及VFS虚拟文件系统\n\n给定一个路径找到对应文件索引节点的过程\n\n算法题：摆动排序，leetcode原题\n\n反问环节：\n\n实习生和校招生面试难度有区别吗？\n\nsmartX对于实习生和校招生的面试难度是一样的，实习生招聘也希望后续能直接留下来工作。\n\n更看重实习生什么能力\n\n套话，看重学习能力\n\n现在主要在做什么，用什么语言\n\n主要在做分布式文件系统，原来做块存储，主要语言rust\n\n对于我的建议\n\n加强对项目的了解，不是自己做的部分也要主动去了解\n\n感觉smartX面试风格就是对于项目问的很细，一直问到很底层，然后传统八股文没啥用，更注重有自己的积累。整体来说面试官人很不错，但是自己太菜了，后续看是继续后端还是投基础架构，面完已经被拷打的没信心了。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561710677983813632?sourceSSR=users",
        "title": "同程前端面试",
        "content": "  1. flex,css相关\n  2. 项目提问\n  3. 实习工作内容\n  4. react封装过什么组件\n  5. 低代码做了什么\n  6. 数组的方法\n  7. es6\n  8. 异步方式\n  9. 闭包\n  10. 内存泄漏\n  11. 垃圾回收\n  12. localStorage、sessionStorage、cookie\n  13. 原型链\n  14. webpack工程化\n  15. 项目优化相关\n  16. 提前实习愿意不\n  17. 反问：公司主要Vue项目\n  18. 面试反馈：说我知道挺多的，也问我愿不愿意来实习，说下周hr联系我\n  19. 总结：面试完快两个月了，岗位下架了还显示在流程中，面试官和hr的话不能信，互相养鱼就完事了\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561701542093393920?sourceSSR=users",
        "title": "从各种地方整理的 Flink 面试题",
        "content": "  1. 能否详细描述下Apache Flink的架构组件和其工作原理？\n  2. Flink的窗口操作有哪些类型，它们之间有什么不同？请举例说明如何定义不同类型的窗口。\n  3. 请解释Flink中窗口函数的作用，并讨论与时间语义相关的问题。\n  4. 请详细介绍Apache Flink中的Watermark（水位线）机制。实现Watermark需要哪个接口？应在哪里定义？其主要作用是什么？\n  5. 能否描述Flink的窗口实现机制是如何工作的？\n  6. 请介绍一下Flink的复杂事件处理（CEP）库，并给出使用场景的例子。\n  7. 请解释Flink的Checkpoint机制，它是如何工作的？\n  8. Flink的Checkpoint机制是如何在底层实现的？Savepoint和Checkpoint有什么区别？\n  9. Flink进行Checkpoint时，整个流程是怎样的？\n  10. Flink的Checkpoint机制主要用来实现什么功能？\n  11. 在Flink中，Checkpoint超时可能是由哪些原因造成的？\n  12. Flink如何保证Exactly-Once处理语义？\n  13. 请解释Flink端到端的Exactly-Once处理语义，并描述如何实现。\n  14. Flink中的水印（Watermark）有哪几种类型？它们有什么区别？\n  15. 请解释Flink中的时间语义，并讨论其在事件时间处理中的重要性。\n  16. 与其他流处理框架相比，Flink有哪些优点？\n  17. Flink和Spark Streaming在流处理方面有什么不同？在什么情况下应该选择使用Flink？\n  18. 请描述Flink中的背压机制，并说明如何通过监控来识别和解决背压问题。\n  19. Flink是如何保证数据处理的一致性的？\n  20. Flink是否支持JobMaster的高可用性（HA）？其原理是什么？\n  21. 如何确定Flink任务的合理并行度？\n  22. Flink任务如何实现端到端的数据一致性？\n  23. Flink是如何处理反压（Backpressure）问题的？\n  24. Flink如何解决数据处理中的延迟问题？\n  25. 在Flink中，任务的并行度和消费Kafka分区数据之间有什么关系？\n  26. 使用Flink Client消费Kafka数据和使用Flink Connector消费有什么不同？\n  27. 在不重启Flink的前提下，如何动态修改Flink的配置？\n  28. 请解释一下Flink的流批一体架构。\n  29. 请描述Flink的checkpoint barrier机制。\n  30. 请讨论Flink的状态管理机制，包括状态的类型和如何使用。\n  31. Flink的广播流是什么？它有什么用途？\n  32. 在Flink中如何实现实时的Top N处理？\n  33. 你了解Flink的Savepoint机制吗？它与Checkpoint有何不同？\n  34. 为什么选择使用Flink而不是其他微批处理框架？你考虑过哪些因素？\n  35. 请解释背压（Backpressure）是什么，以及如何在Flink中处理背压问题。\n  36. 请描述Flink的分布式快照算法及其工作原理。\n  37. Flink SQL是如何进行查询解析和优化的？\n  38. 请介绍一下Flink on YARN部署模式的工作原理。\n  39. Flink是如何保证数据在处理过程中不丢失的？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561666823398121472?sourceSSR=users",
        "title": "字节补录-后端开发-新服务（挂了） 攒人品",
        "content": "11.19 周一投递 - 11.21 电话没接到，微信约面试（当晚） -11.22 一面 - 11.24 二面 -12.05（流程终止）\n\n一面 55分钟（心善小姐姐）\n\n1.自我介绍，为什么转专业，一些个人情况\n\n2.问了实习的项目和细节\n\n3.问了学校项目，为什么做这些，介绍一下\n\n4.mongodb和elasticsearch 特点和区别，为神马项目选ES，用来干嘛呢？一些ES的基本概念，学校项目为啥选mongoDB\n\n5.项目中用过mySQL吗？能说说里面有用到mysql进行优化的地方吗？\n\n6.介绍一下线程，进程，并发，并行\n\n7.java 和Go 你怎么看，有啥特点和区别，你常用哪一个，为什么\n\n8.你在实习中遇到的那些http code 的场景，你怎么解决的这些问题的。\n\n9.做题，最长回文串子序列\n\n\\-----------------------------------------------------------------------------------------------\n\n二面 80分钟（很难评）\n\n美国感恩节当晚面的，极限拉扯，真的很累\n\n面试官麦克风有问题，全程听不清楚话，感觉是一个领导的感觉，全程非常领导的感觉😭。\n\n1.问了个人情况，问留学原因，问什么时候可以来实习\n\n2.说了3分钟我们这里很辛苦，怎么累，怎么苦，不能实现生活和平衡，可以加入看看，喜欢就留下，不喜欢随时可以离开，这里面试官跟我说了3分钟\n\n3.开始让我自我介绍了\n\n4.做题，stack实现queue，但是没太用过这个做题的界面模式，我问是不是写一个类似OOD的模式，这个输入输出我是不是要杠掉，面试官没理解。思路和逻辑写的是对的，但是因为输入输出格式不熟悉，代码run不起来，报错。\n然后面试官一直在自说自话，他也不知道这个怎么改，然后他看了一眼答案可能，让我跟着说的改，怎么改都不对，然后改到最后 是我一开始跟他说的那个意思[牛泪]\n所以浪费了20分钟时间\n\n5.看过java的书吗，我说 看过一点点。 他说：一点点是什么意思？\n\n6.问了spring是什么，springboot，springcloud分别是什么，有什么区别。（这里，一开始说他的麦克风🎤有问题，然后这里彻底坏掉了，没声音了，他换了一个新的，问我\n你刚怎么不说话，没听到问题吗？）\n\n7.mysql的引擎有哪些，innodb里的数据结构，能介绍一下B+树吗，是什么，有啥特点呢。我让你现在写一个b+树，你会吗？（我当时就傻了，这里已经1小时了）\n\n8.如果产品上线了，API的问题挂掉了，你怎么办？如果你是负责人你怎么预防？你在实习中有过类似的经验吗？\n\n9.我看你实习写的前端比较多，为啥面后端呢，写过API吗？GET和POST啥时候用呢？他们主要的区别是啥呢？\n\n10.反问，问了业务（一面小姐姐说不知道能不能说，这里他明确的说了），问了他之前提及到的让先来实习的问题，我问了他转正的考核标准是啥：他说就是看你可不可以胜任工作，能不能和组员和谐相处，能不能承受压力，看你喜不喜欢这里，喜欢就留下，不喜欢随时可以离开。\n刚来会有mentor带，凭借你们年轻人的聪明才智，很快就可以上手。\n\n中间应该还有一些别的问题，记不得了反正80多分钟。\n\n\\-------------------------------------------------------------------------------\n\n等了挺久的没有反馈，没有感谢信，今早官网查到的流程终止。\n\n年美留子遇到了漂亮国今年最难秋招，那边几乎没有公司开应届生秋招，心血来潮的转码选手7月开始投了350多家，连个网测都没有，就做了一个北美字节OA，挂了，备战春招了，攒人品！\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561708905303171072?sourceSSR=users",
        "title": "理想UI架构",
        "content": "  1. 单例模式\n  2. http和https\n  3. 手写合并有序链表\n  4. 公司业务\n  5. java相关\n  6. 总结：岗位不匹配，愿不愿意转岗，面试20min左右\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561660544067887104?sourceSSR=users",
        "title": "货拉拉实习凉经",
        "content": "boss上投的\n\n# 一面\n\n1.自我介绍\n\n2.项目的亮点。\n\n3.项目的不足点。\n\n4.hashmap（八股吟唱）\n\n5.输入网址到显示内容全过程\n\n6.了解gc机制吗，详细讲一下（吟唱了快5分钟八股）。\n\n7.项目用过多线程吗（无）\n\n8.为什么要用多线程，介绍下线程池。\n\n9.redis在项目中怎么用的\n\n10.大数据了解吗？（没复习，寄）\n\n其他\n\n1.能实习多久？\n\n2.现在在哪个城市\n\n3.对gpt了解吗？\n\n反问\n\n1.提升建议（别光看八股，要跟项目结合起来，多进行项目实践）\n\n2.实习几面（两面技术面）\n\n面试官没开摄像头，感觉kpi面。\n\n# 二面\n\n深挖快30min项目\n\narraylist 如何对其优化保证其线程安全（在增加元素的同时删除元素不会出现问题）\n\n父类和子类静态变量的执行顺序，解释原因\n\nobject类有哪些常用方法\n\n有什么想问我的（我没问）\n\n结果：面完已挂\n\n总结：项目答得一般般，java基础需要着重复习（之前面试没考察过，没去复习给忘了，八股一个没答出来[发火]）\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561654766724562944?sourceSSR=users",
        "title": "B站  AI后端开发二面面经",
        "content": "1、自我介绍\n\n2、介绍科研项目\n\n3、介绍C++的三种智能指针\n\n4、weak_ptr如何解决shared_ptr循环引用？\n\n5、数组和链表的区别\n\n6、链表的应用场景\n\n7、调用vector的push_back方法会发生哪些事情？\n\n8、vector的resize和reserve的作用?\n\n9、代码题1.求一个整数的开方根(二分秒了)\n\n10、代码题2.给出如www.bilibili.com这样的字符串，将其转换为com.bilibili.www(一开始用栈写的，后面要求优化成O(1)空间复杂度)\n\n11、反问，面试官介绍业务主要和大模型相关的，看来和鹅厂这边应该差不多hhh。\n\n基本都答出来了，面试官人很好，当面说了后面会有hr跟进，有点不忍心刷kpi，但上海真的去不得，但凡在深圳或厦门我就冲了[牛泪]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561708157236436992?sourceSSR=users",
        "title": "申通快递前端（上海）",
        "content": "1\\. 自我介绍，介绍项目\n\n2\\. ==和===的区别\n\n3\\. 闭包\n\n4\\. 实习工作说说\n\n5\\. 基于antd封装和直接使用，有什么不同\n\n6\\. 实习中封装过哪些组件\n\n7\\. setState\n\n8\\. websocket\n\n9\\. 强缓存协商缓存\n\n10\\. git命令相关\n\n11\\. 禁用浏览器返回前进功能怎么做\n\n12\\. 场景题目，后端返回数据你怎么 处理，如果后端让你前端处理，你怎么处理、\n\n13\\. 水平垂直居中，position有哪些属性\n\n14\\. 正则去除空格\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561654690757328896?sourceSSR=users",
        "title": "B站日常实习一面面经",
        "content": "11.29 实习僧上投递，今天约面，官网好像都没这个岗位，看不了进度。\n\n1.算法题：全排列，3min写完, 说了思路。\n\n2.java写一个单例模式，然后逐行解释。（凭印象写的，没解释清楚，估计看出来我是背的了）\n\n3.项目用过多线程没有。（说了两个，都说不是，可能是要线程池相关的）\n\n4.springboot和springmvc区别\n\n5.springmvc的工作原理（说到一半他就不听了，南蚌）。\n\n6.mysql 最左匹配原则（太紧张了，竟然忘说是联合索引的了）\n\n7.项目中遇到的困难。\n\n反问：\n\n1.业务（番剧、电影、综艺相关）\n\n2.怎么提升（多写代码）\n\n3.面试几面（两次技术面）\n\n30分钟左右结束，答得挺差，大概是寄了。\n\n12月19号，有hr再找我，让我再面这个岗位，没有说清楚是一面还是二面，我以为是一面就直接拒了，后来想起来之前面过，就给一面hr发消息询问，结果打电话直接挂，发短信也不理，那就算了吧。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561651269178265600?sourceSSR=users",
        "title": "校招面试，讲好简历等于成功了一半",
        "content": "最近模拟面试辅导了不少同学，不少同学模拟面试问题比较多，之前简历内容和基础专业能力静心准备，但由于面试经验不足，缺乏针对性训练，在自己最熟悉的简历讲解交流中表现不理想，面试评分较低。\n\n面试过程中简历讲解是非常重要的内容，通过简历内容特别是项目经历，个人学习情况，获奖等的沟通交流，很快能定位候选人的基本情况，对于下一步的综合评定提供很大的参考，大家注意，面试官能跟同学们去具体聊简历的内容，其实是很好的开端，简历的内容都是同学们很熟悉而且精心准备的内容，比抛开简历随机提问要有优势的多，这也说明之前讲简历篇，写好简历的重要性。\n\n之前我面试的时候，有的同学简历非常简单，看不出有什么内容，这种情况要么基于简历的某个点展开问题细问，有的面试官直接跳过简历，进行问题考察。\n\n如何引入话题到简历\n\n面试过程中，很多面试官可能一上来倾向于题目考察，如果我们在题目考察的过程中能够将话题引入到简历内容上，引入到自己熟悉且精心准备的方面，让面试官对简历内容感兴趣并展开讨论和考察，是占有很大的优势。那么如何将话题引入的简历内容，有几个经验点分享给同学们：\n\n1.以题目考察的内容为契机，如考察的内容跟自己简历的内容有交集，可以在答题的同时告诉面试官我在某某项目中使用过此技术点或知识点，面试官如果感兴趣，可以讲下我怎么做的。自然就引入到了简历内容上。\n\n2.如果探讨到某个技术或处理题目思路，自己简历的项目可以用但是没有用，如果参考引入在性能或其他方面有提升，可以在答题的同时告诉面试官，这个思路很不错，让我想到了我的某某项目，如果参考引入，某方面可以提升不少。面试官如果感兴趣，自然就引入到了简历内容上。\n\n其他的方式或场景我就不多说了，同学们根据现实情况和场景，灵活应变。\n\n项目经历讲解准备\n\n项目讲解内容一定是要提前准备，对于自己的项目一定要全面的梳理，总结内容，在项目讲解上，我一般会这样提问：我看你简历写了几个项目，对xx\n项目比较感兴趣，能否跟我讲下这个项目的架构细节，你主要负责的内容，遇到了哪些问题，有哪些不足和改进点？\n\n通过对这些内容的讲解，来进一步细致的展开对细节技术点的讨论和考察。所以对项目的讲解准备上，我们准备架构图，分层有条理的讲解架构图。\n\n如果是多人项目，你主要负责的内容，肯定是核心的内容，遇到哪些问题，注意这些问题一定是已经解决的，并且体现个人能力的问题，比如新技术采纳要求我快速的学习掌握，体现了个人快速学习能力，某个模块数据量大，功能复杂我如何拆解的等等。\n\n有哪些不足和改进点，任何系统都不是完美的，一定有不足，要提前总结出来我们系统的不足和改进点，体现候选人的思考和规划能力。\n\n另一方面，项目中用到的技术点，有时间尽量再对其原理及相关的技术点快速全面的了解学习，很多面试官在项目讲解讨论中，会针对用到的技术点进行进一步考察，这也是公平的方法，毕竟你在项目中用到的技术，应该是你会的。\n\n但是开发过程中用到的很多技术，更多是工具化的调用和引入，对于原理及相关技术点同学们很容易忽略，这点一定要提前准备。\n\n除了简历上的项目内容，还有其他包括个人竞赛，学习成果，个人评价等，如何简单几句话，有理有据的证明自己的能力，也是很重要的点，这点也要提前准备。\n\n简历上项目讲解内容、其他各项内容的论述讲解一定是要提前准备完善，才能临场随机应变游刃有余的发挥。这点同学们一定要注意。\n\n涛哥希望同学们针对自己的各项不足，在简历讲解上认真准备。有条件的参加模拟面试，总结出来问题和不足，针对性训练，事半功倍。\n\n我是涛哥，曾任某互联网大厂技术总监，十年面试过500人，培养新人超百人。有任何求职问题欢迎留言。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561707239409508352?sourceSSR=users",
        "title": "卓望数码前端一面（广州）",
        "content": "  1. flex布局\n  2. 数组的方法\n  3. Vue的指令\n  4. Vue3和Vue2的区别\n  5. Vue项目做了哪些优化\n  6. Webpack做了哪些优化\n  7. 代码规范，eslint\n  8. git相关，master, git回滚\n  9. XSS攻击如何防御\n  10. 反问，公司技术栈主要是Vue,业务很杂，基本都会涉及\n  11. 面试比较简单，每个人30分钟左右，基本都在问Vue\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561610586262368256?sourceSSR=users",
        "title": "同程旅行  数据开发  面经",
        "content": "Timeline：\n\n9.1 投递\n\n9.14 笔试\n\n9.25 一面\n\n11.1 二面  技术+HR面\n\n9.25 一面 23min：\n\n1.项目经历\n\n2.数仓分层\n\n3.数仓执行引擎\n\n4.Sql关键字执行顺序\n\n5.Mysql索引引擎\n\n6.Innodb和myisam区别\n\n7.Flink基本算子\n\n8.Map和flatmap\n\n9.Keyby\n\n10.数据倾斜 怎么定位\n\n11.Hive分区表和非分区表\n\n12.增加或删除字段\n\n13.Hive内外部表\n\n14.UDF\n\n15.窗口函数\n\n16.Redis数据结构\n\n17.Java hashmap线程安全形式\n\n18.简单SQL：所有得分高于90的学生、任意学科大于90\n\n11.1 二面 19min：\n\n1.实习经历\n\n2.数仓主题域\n\n3.渠道归因处理\n\n4.数据量级别\n\n5.业余爱好\n\n6.职业规划\n\n7.手上有其他offer吗 不太理想的原因\n\n8.为什么选择投递同程\n\n9.实习的帮助\n\n10.为什么选大数据专业\n\n11.为什么不读研\n\n12.本科生和研究生校招机会的差异\n\n13.哪些方面会让企业选择你\n\n14.什么时候可以实习 HR说要保持实习连贯性\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561609396137082880?sourceSSR=users",
        "title": "12.5高途ai产品一面",
        "content": "1.你上一个公司是怎么挣钱的，商业模式是什么？你负责什么？\n\n2.你使用过竞品公司的产品吗？对方的准确率可以达到多少？\n\n3.你的这个项目最初的精确率是怎么确定的？\n\n4.哪些人会买你们项目？为什么？\n\n5.你们在给对方的合同中，对方要求准确率达到多少？\n\n6.chatgpt4发布会看过吗？\n\n7.你用过chatgpt4吗？\n\n8.chatgpt4+教育可以做什么？\n\n9.做过用户调研吗？怎么做的？\n\n10.做AI产品经理必须的两个素质？\n\n11.你觉得抖音是一个好的产品吗？什么样素质的产品经理可以做出抖音？\n\n建议：AI+行业，行业需要更加细化，做一些相关项目。需要更加关注公司的商业模式。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561603388593422336?sourceSSR=users",
        "title": "欢聚前端实习（已oc）",
        "content": "**一面（25min）**\n\n  * 自我介绍\n  * 介绍项目\n  * 项目优化手段\n  * 详细讲讲长列表的优化\n  * 懒加载和虚拟列表\n  * 首屏时间优化在哪看\n  * 怎么配置的代码分包\n  * cdn 是什么\n  * js 闭包的理解，实际使用场景\n  * 防抖节流是什么，实际用在什么地方\n  * （接上题）滚动条和搜索框分别用防抖还是节流\n  * vue3 diff 算法\n  * vue2 vue3 实际使用区别、响应式原理区别\n  * webpack 有哪些配置项\n  * 跨域问题解决方式有哪些\n  * 一周能到岗几天\n  * 能实习多久\n  * 咱们部门目前多数用的都是 vue2，如果进来让你用 vue2 开发，有什么想法（面试官看我的项目用的都是 vue3）\n  * 反问\n\n**二面（15min）**\n\n二面是 leader 面\n\n  * 自我介绍\n  * 项目介绍\n  * vue 组件间传值\n  * 能实习多久\n  * 多久能入职\n  * 反问\n\n**hr 面（15min）**\n\n常规 hr 面内容\n\n总体体验：面试时间短，流程光速\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561599665041338368?sourceSSR=users",
        "title": "欢乐互娱特种兵训练营 二面",
        "content": "  * 自我介绍\n  * 谈谈我的经历：acm组内职位，分工\n  * 算法题1：给很多单词，然后多次询问，每次给一个字符串，问能不能由其中两个单词组成。（哈希或字典树）\n  * 算法题2：同上，但问的是单词可以重复用，字符串能不能由给的这些单词组成。（dp+字典树）\n  * 算法题3：二位平面上有n个点，要分成k类，有什么好的方法。（k-means，我提了一个类似k-means的方法qwq）\n  * k-means算法有哪些缺陷？(好几种，不熟k-means，断断续续想了很久，不断请教面试官qwq）\n  * 反问训练营安排，大概如下：![](https://uploadfiles.nowcoder.com/message_images/20231205/222102121_1701768537803/discuss_1701768538391.jpeg)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561587343845605376?sourceSSR=users",
        "title": "百度一面",
        "content": "1.自我介绍  \n2.索引  \n3.Redis的数据结构，和MySQL的区别，为什么Redis读取数据快，把索引的底层数据结构替换成Hash表会怎么样  \n4.Linux语句，管道了解吗  \n5.Redis缓存三问题  \n6.Redis的双写一致性  \n7.http和https的区别，https为什么更安全  \n8.MySQL主从同步  \n9.除了BINLOG日志还知道其他的日志嘛  \n10.怎么看索引是否失效，索引的最左前缀法则  \n11.从输入URL到页面展示发生了什么  \n12.TCP的三次握手和四次挥手，用四次握手行不行  \n13.TCP的四次挥手中的2MSL了解嘛  \n题：找出数组中第k个大的值\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561586672060624896?sourceSSR=users",
        "title": "转转 java凉面",
        "content": "一个数组基本有序应该采用哪种排序方法\n\n为什么要有线程池 ，线程太多会怎么样？？\n\n阻塞队列与普通队列的区别是？\n\n递归与非递归区别是什么？各自的优缺点？\n\n递归如何转为非递归？\n\n操作系统为什么会有内核态和用户态？\n\n代码编写中什么操作会触发内核态到用户态的转变？\n\npython c++ java各自的执行效率为什么会有差别？\n\n腾讯会议打开了，现在又点击会提示已经打开，这怎么实现的？\n\n腾讯会议语音传输用的是哪个协议，为什么？\n\n情景：需要实现一个文件传输，且需要限速，怎么实现？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561531295931580416?sourceSSR=users",
        "title": "字节国际化电商前端",
        "content": "1面:  \n\n206状态码底层原理，分片上传原理\n\ncsp底层原理，具体怎么设置\n\n图片怎么转cancas，canvas转图片\n\nssr优缺点，实现的具体过程\n\n路由懒加载原理，是不是所有import（）都会分出一个文件，这个文件以什么形式存在，什么时间点下载什么时候解析。import（）分包是谁实现的，是脚手架还是打包工具\n\n事件循环输出题\n\n算法:一个数组里有一堆数字，拼接得到一个最大的数字\n\n2面\n\nvue23区别，对数组如何处理，如果直接object.defineproperty劫持数组会发生什么情况\n\n富文本编辑器中如何实现上传图片\n\n图片css存在服务器的哪里，文件如何命名，命名冲突怎么解决\n\npnpm原理\n\n算法:合并共同区间\n\n3面\n\n基本纯聊天，科研方向，实习内容，除了问了一下假如你是项目负责人，react和vue如何进行技术选型\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561524265527287808?sourceSSR=users",
        "title": "航旅纵横面经（技术群面，必须记录）1208OC",
        "content": "航旅一共3+1轮面试，第二次和第三次是技术群面，秋招一来第一次技术群面，必须记录。\n\n**timeline：一面11.14；二面11.17；三面11.23；hr面12.4**\n\n**一面：**\n\n1、Redis的数据结构有哪些，底层实现分别是哪些，跳表如何理解？\n\n2、Redis集群了解吗？如何部署？不同的部署方式有哪些区别？你项目中是怎么部署的？\n\n3、说下具体的配置步骤，要去修改哪些文件？\n\n4、一致性hash算法了解多少？介绍一下。\n\n5、springboot核心注解有哪些？说下你项目中用到的。\n\n6、说下springboot自动配置原理\n\n7、mybaties缓存机制有哪些？去修改过吗？\n\n8、线程池八股，各种线程池的区别和参数。\n\n9、乐观锁和悲观锁，sychronized的升级原理，对象的mark word\n\n10、说下项目中用到的java的锁，起到了作用吗？（到现在也没看懂这句啥意思）\n\n11、mysql的索引 b和b+的区别。\n\n12、java实现序列化的步骤和类，不想被序列化怎么办\n\n13、linux修改权限用什么命令，777是什么意思\n\n还有Java基础就没放上去，都是常规的，面试官问的口干舌燥，我答的口干舌燥。\n\n**二面：技术群面，我和另外一个bro**\n\n1、说下你们项目中用到的快排，场景是什么，数据分布式什么。我就随便说了个快排，反问我快排的原理，时间空间复杂度\n\n2、Java的gc算法有哪些？不同的垃圾回收器对应什么算法，分别作用在哪些区域\n\n3、g1和cms的区别\n\n4、内存溢出java的原因有哪些？\n\n5、项目中发生过OOM吗？（当然没有），有，怎么排查的？\n\n6、线上项目OOM了怎么办？（看日志啊，还能怎么办）\n\n7、你们项目中用到了哪些设计模式？我说了工厂模式，反问我工程模式的实现有哪几种？简单工厂模式、工厂方法模式和抽象工厂模式\n\n8、你项目中工厂模式用的多吗？多的话，你觉得有哪些问题？ 我当时回答的是会发生对象爆炸和违反开闭原则\n\n9、我看你实现了raft协议，你知道哪些工具用的是这个算法吗？（**etcd** ）\n\n10、常规八股，Java基础\n\n**三面：继续群面**\n\n1、自己印象最深的一个项目是什么？深刻在哪儿？\n\n2、项目浅浅问一下？就问为啥要写这些项目。\n\n3、象征性问下实习是做的什么，具体的工作是什么，自己获得哪些收获，自己有哪些改进的。\n\n4、最大的优势和劣势，自己是怎么学习的\n\n5、对我们航旅有哪些认识？譬如技术栈，业务啥的\n\n6、为什么选择航旅\n\n7、随便瞎问了几个八股，都是常规，譬如concurrenhashmap为啥能用在并发环境下。\n\n**HR面：**\n\n1、为啥要来北京？（我是江西人）\n\n2、优势劣势\n\n3、加班怎么看\n\n4、期望薪酬怎么看\n\n5、未来的职业规划\n\n6、反问。结论是：不是所有人都有北京户口，需要审批。\n\n**吐槽：**\n\n二三轮的技术群面，就是拿两个人来对比，譬如学习方法，每个人都有区别，没有最好的，只有最适合自己的，但是有些人的学习方法看起来是科学的，所以一前一后说起来就会有差距。\n\n技术面，先说的总是吃亏，因为给了后面一个人充分的时间去思考，而且可以以一种总结的方式去回答，补充前面的人没说到的，就不是很公平。\n\n**薪酬部门**\n\n**一、 百分百解决北京户口（入职年的十二月拿到新的身份证，专业代码081200）**\n\n**二、 薪酬：总包24w:**\n\na) 基本工资20w+1w的补贴（补贴每个月发833元）\n\nb) 房补+餐补各1.5w。房补需要补齐发票1.5w，餐补每天40元\n\nc) 年终：1.3个月，按照绩效上下浮动\n\n三、 六险一金，首年按照1.2w的基数，按照北京市的最高标准缴纳\n\n四、 职业发展：入职第二年开始，会有10%-20%的工资涨幅，按照个人表现。会有敬业奖金，如果个人工作很认真（内卷奖）：最高可达3k元每月\n\n五、 国企的日常福利：体检+节假日补贴+地方政府补贴\n\n六、 公司准备上市，员工持股计划已经实施了两期，目前还在实施。（持续画饼）\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561511297716699136?sourceSSR=users",
        "title": "腾讯软件开发-数据工程七天速通面经",
        "content": "废话不多说直接上干货：\n\n11.24 初试（基本是通用知识）40min\n\n问答：\n\n自我介绍\n\n提问技术栈（我是c++和python）\n\nc++和python的区别（语言特性）\n\nMySQL的索引架构，内部采用了什么结构\n\nB+树的结构是什么\n\n什么是红黑树，简单介绍一下其性质，讲一下红黑树插入的具体过程\n\n手撕：\n\n1.查询合并两个SQL表\n\n2.给定递增序列求最长等差子序列\n\n3.用两个栈实现队列\n\n初试通过后隔一个工作日就约了复试\n\n————————————————————————————\n\n11.27 复试一面（主要根据经历来问）50min\n\n问答：\n\n简单自我介绍\n\n介绍阿里的实习，做了什么主要工作，有哪些实习产出，作为中台的实习生如何协调集群的实习生\n\n介绍研究生的研究项目，做了哪方面工作，用到了什么技术\n\n对称加密算法的缺点，https用的是对称加密还是非对称加密，哪些攻击会影响非对称加密的安全性\n\nc++11的特性有哪些，介绍一下其中的智能指针（三种智能指针的作用，优缺点）\n\nvector容器在删除的时候会出现什么问题\n\n介绍c++面向对象的特性，介绍一下纯虚函数和抽象类\n\nMySQL事务隔离级别大概有哪些\n\n数据库的日志有哪几种\n\n无手撕\n\n复试一面通过后隔天约了复试二面\n\n11.28 复试二面（基本在聊天，介绍业务）30min\n\n没有自我介绍，面试官上来直接介绍部门业务\n\n介绍事业部的业务，部门做的一些产品\n\n介绍CDG这个部门的愿景balabala\n\n介绍部门数据工程岗的职责，需要快速学一些东西但不用很精通（哈哈哈是我了）\n\n提问对于岗位的意愿，是否愿意做部门业务\n\nbase在北京愿不愿意（山东人狂喜）\n\n无手撕\n\n反问：\n\n部门规模，是否加班，压力大不大，还需要掌握什么技术栈\n\n复试聊的挺开心，面试官很和蔼，隔天上午就约了HR面\n\n————————————————————————————————\n\n11.30 HR面（无技术，聊经历）20min\n\n问答：\n\n自我介绍\n\n本科和研究生都是通信，为什么想来这个岗位\n\n在实习中如何处理与上级和同级的关系\n\n谈谈如何在做到学习成绩优异的同时积极参加学生组织\n\n讲一讲自己的优缺点\n\n讲一下毕业3-5年内的职业规划\n\n提问其他家offer情况，哪些已经开奖了\n\n反问：\n\nHR面结果什么时候可以出\n\nbase地确定在北京吗\n\n部门作息\n\nHR面结束加了微信 表示和部门确认一下没问题就谈薪发offer，当天云证和录用评估\n\n————————————————————————————————————\n\n12.1 电话谈薪\n\n12.4 正式offer签约\n\n补充一下楼主背景：211本985硕，本硕通信专业。有国家奖学金，本科专业第一硕士前15%自学转的cpp。。暑假有阿里云实习\n\n如果有问题欢迎评论私聊，祝在流程中的鹅友们早日上岸~![](https://uploadfiles.nowcoder.com/message_images/20231205/155917638_1701748835724/discuss_1701748835174.jpeg)![](https://uploadfiles.nowcoder.com/message_images/20231205/155917638_1701748846386/discuss_1701748845888.jpeg)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561502756813414400?sourceSSR=users",
        "title": "国汽智控一面凉经",
        "content": "自我介绍  \n问了问项目  \nc++11新特性  \n函数指针和指针函数  \n结构体重写和类重写的区别  \n数组和链表的区别  \n四种强制转换，应用场景  \n  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561487629351395328?sourceSSR=users",
        "title": "base成都 卫翎科技 前端实习面经",
        "content": "## 卫翎科技\n\n投递渠道: BOSS 直聘\n\n时间线\n\n  * 2023-11-23 上午 hr 发起打招呼,遂投递简历,下午约面\n  * 2023-11-27 一面\n  * 2023-11-29 上午约二面, 下午二面\n\n**一面**\n\n  1. 自我介绍\n  2. 字节青训项目中最有挑战或者收获的点\n  3. lint-staged 的主要作用是什么(搭配 husky 在 commit 时进行代码检查,面试官补充说只对暂存区的代码进行检查)\n  4. Vuex 与 Pinia 的区别 💤 (以为掌握了但答得并不好！)\n  5. 为什么需要对 axios 进行二次封装\n  6. 虚拟滚动是如何实现的\n  7. 项目中的防抖技术做了什么\n  8. CSS 中 px,rem,em 分别是什么\n  9. 水平垂直居中的实现方式\n  10. position 有哪些属性, absolute 是相对于谁的\n  11. 盒模型\n  12. 隐藏一个元素的方式: display(回流) / visibility(重绘) / opacity(硬件加速)\n  13. flex 布局设置元素间隙的方式 `gap`\n  14. JavaScript 中判断数据类型的方法\n  15. this 的指向???完全不知道怎么说,让我看代码讲还可以\n  16. 改变 this 指向的方法 -> call 与 apply 的区别\n  17. 箭头函数有 this 吗?\n  18. 讲讲原型和原型链\n  19. 讲讲 Event Loop\n  20. script 标签会阻塞 DOM 的解析吗 -> 有什么方式可以解决这个问题\n  21. 讲讲你对 Promise 的理解 Promise 三种状态: pending / fulfilled / rejected链式调用是如何实现的: then 方法返回的是一个新的 Promise 对象\n  22. 数据类型的隐式转换 发生时机：算术运算符 / 比较运算符 / 逻辑运算符 / if 语句\"1\" \\+ 1 的结果(\"11\")\"2\" \\- 1 的结果(1)\n\n看代码说结果:\n\n    \n    \n    const promise = new Promise((resolve, reject) => {\n      resolve(\"success1\");\n      reject(\"error\");\n      resolve(\"success2\");\n    });\n    \n    promise\n      .then((res) => {\n        console.log(\"then\", res);\n      })\n      .catch((err) => {\n        console.log(\"catch\", err);\n      });\n    \n    // then success1\n    // Promise 状态改变后就不能再改变,虽然后面的代码还能继续执行.\n    \n    \n    \n    \n    var name = \"World\";\n    (function () {\n      if (typeof name === \"undefined\") {\n        var name = \"Jack\";\n        console.log(\"Goodbye \" + name);\n      } else {\n        console.log(\"Hello \" + name);\n      }\n    })();\n    \n    // Goodbye Jack\n    // var 变量提升: 只提升定义不提升赋值,并且之提升到所在的作用域的顶部\n    \n    \n    \n    \n    function f1() {\n      console.time(\"time span\");\n    }\n    \n    function f2() {\n      console.timeEnd(\"time span\");\n    }\n    \n    setTimeout(f1, 100);\n    setTimeout(f2, 200);\n    function waitForMs(n) {\n      var now = Date.now();\n      while (Date.now() - now < n) {}\n    }\n    waitForMs(500);\n    \n    // 在执行 setTimeout(f1, 100) 后会开启一个定时器,并在 100ms 后将 f1 放入宏任务队列, 但是回调函数 f1 并不会立即执行,而是等主线程空闲才会执行.\n    /**\n     * 上述代码的执行过程是:\n     * 1. 执行 setTimeout(f1, 100)\n     * 2. 执行 setTimeout(f2, 200)\n     * 3. 执行 waitForMs(500);\n     * 4. 由于 waitForMs(500) 会阻塞主线程 500ms, 此时 f1 与 f2 已经被放入宏任务队列中会被取出并且立即执行,所以 time span 实际上是执行带来的延迟而非定时器的延迟.\n     */\n    \n    \n\n**二面**\n\n  1. 为什么选前端\n  2. 职业规划，对前端的发展方向有了解吗？\n  3. Github 活跃一般是在看哪些内容？\n  4. 介绍一下项目中最有挑战的点\n  5. 对这份工作有什么期待\n  6. 有没有关注 AI 相关的内容\n\nemmm，其实就是氛围很轻松的闲聊。\n\n结束后 hr 约线下详谈。\n\nhr 姐姐人真的超级好！！！！！！！[牛泪]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561420280950702080?sourceSSR=users",
        "title": "美团NLP算法面试，挂",
        "content": "笔试11月初做的。然后11月中捞起来面试。一共两轮\n\n第一轮，问简历上实习经历，再挑一个项目讲讲，讲讲multi-head attention, batch norm, dropout。最后两个答得不是很好。\n最后问反馈：基础还不错，深度不够。\n\n第二轮，一周之后接到电话，约二面。面试官说给我打了好几个...\n主要人在美国，手机还不能双卡双待，之前阿里两个电话都没接到，直接给我挂了，麻，为啥留了邮箱不能发个邮件呢。\n上来讲实习经历，有什么收获，讲完之后几乎没有问问题，也没有八股文，略惊讶。然后一道链表的算法题，O(n)空间的解法很简答，提示下才找到O(1)空间的思路，最后时间不够了，有bug。\n面试官一直说我实习经历多，还是挂了，原因可能是算法题没做出来，也有可能电话接的太晚了，岗位已经招满了，不知道为啥。有牛油知道不？\n\n面了几家公司之后，感觉八股文翻来覆去就那么几个，算法题都是常见的题，在准备好这些东西之后，可能还是实习和项目重要些(这不是废话)？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561288070369132544?sourceSSR=users",
        "title": "360   C++二面面经",
        "content": "1、自我介绍\n\n2、虚函数表的机制\n\n3、构造函数可以是虚函数嘛说出原因\n\n4、C++11新特性\n\n5、介绍三种智能指针\n\n6、weak_ptr如何访问指向的数据\n\n7、右值引用\n\n8、将亡值有哪些\n\n9、new出来的数据存放在哪里\n\n10、多线程的模式\n\n11、介绍项目中用到的生产者消费者模式\n\n12、生产者生产太快，消费者消费太慢怎么办(条件变量)\n\n13、负载均衡算法有哪些(只答了概念，没具体了解有哪些算法)\n\n14、介绍thrift框架\n\n15、介绍rpc框架\n\n16、介绍项目中的raft协议\n\n17、发生网络故障时raft协议如何工作的\n\n18、tcp和udp的区别\n\n19、介绍websocket\n\n20、介绍redis，为什么redis快？\n\n21、redis的两种落盘方式？\n\n22、redis如何做分布式?(不会)\n\n23、决策树节点分裂的算法？\n\n24、在腾讯实习的大语言模型用的哪些？\n\n25、会Python嘛，是否用过pandas之类的库，平时如何学Python 的\n\n26、leetcode23.合并k个升序链表（用优先队列秒了）\n\n27、反问，面试官说主要用c++和python的，同时给了建议可以学一学c++服务端开发方向的内容。\n\n还有一些服务端开发相关的问题记不清了，但其它的基本都答出来了，应该是过了，总体来说360的面试强度还是比较大的。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561486208484876288?sourceSSR=users",
        "title": "base成都 话树网络 前端实习面经",
        "content": "投递渠道: BOSS 直聘\n\n时间线\n\n  * 2023-11-15 下午投递，当晚发送笔试邮件\n  * 2023-11-20 约面\n  * 2023-11-24 面试\n\n**面试流程**\n\n  1. 自我介绍\n  2. 对于 H5 语义化标签的理解\n  3. 逻辑像素与物理像素是什么，如何去调整？（答得不是很好）\n  4. 单页面应用和服务端渲染应用的区别 ❌\n  5. 如何实现一个简单的 loading 遮罩\n  6. relative / absolute / fixed 定位的区别 🍧\n  7. 实现一个元素的显示和隐藏，以及不同方法的区别 🍩\n  8. 回流与重绘\n  9. V-if 与 V-show 的区别\n  10. Vue 中 key 的作用\n  11. CSS 盒模型\n  12. outline 属性是否会占用宽度\n  13. flex: 1 是什么的简写，以及三个属性的含义 🏃‍♂️\n  14. for...of... 与 for...in... 的区别\n  15. Vue 修饰符 .prevent 与 .stop 的区别\n  16. 事件冒泡与事件捕获\n  17. 弱等于(==) 与 强等于(===) 的区别\n  18. 类型转换 0 == false 的结果\n  19. Vuex 与 Pinia 在设计上的优势与劣势\n  20. Vuex 中有 Mutation 的操作，为什么 Pinia 中没有\n  21. 用过 hooks 吗\n  22. reactive 与 ref 在使用上有什么区别\n  23. Vue 响应式原理（开始吟唱 🥰！）\n  24. 设计模式相关，了解工厂模式吗\n  25. 了解 CDN 吗？是为了解决什么问题，具体的原理是怎样的\n  26. 怎样学习前端的\n  27. 阅读英文文档有问题吗，开始闲聊....\n\n结束后，约线下简单笔试。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561283936182083584?sourceSSR=users",
        "title": "测试开发岗位笔试&面试经验分享",
        "content": "千呼万唤终于憋出来了，楼主bg双9科班硕士，对技术追求不高，加上没有及时准备秋招，故转投测开岗，共投递公司50+，基本都是中大厂，总计offer8个，拿到包括百度、京东、阿里等大厂测开offer。整理了份整体的思路，具体细节大家根据自身情况把控。\n\n**1、笔试**\n\n**笔试难度、综合性都比面试要高。**\n\n题型：\n\n① 单选15-30道。\n\n② 2-3道coding。\n\n③ 1-2道简答题（部分企业会考）。\n\n**单选** 部分除了基础的计网、操作系统、数据结构等课程知识以外，还会有测试理论的题目，**牛客基本可以满足** 。\n_（非科班没学过测试课的同学，可以花1-2天时间找文档系统看下，把基础知识补齐。市面上任意文档都可以，内容大差不差，不建议花钱。除非时间非常充裕，不然也不建议看视频课，太罗嗦了。）_\n\n**代码** 题基本以链表、数组为主。除了打卡题，常考的有：动规、滑动窗口、搜索与回溯、矩阵、位运算数学这种。也会有树的题但不多。**难度mid+为主**\n，但都是新题，需要掌握相关知识点，所以多积累，多刷题，能a多少a多少，学会骗分。\n\n**简答题** 部分，常见的是根据某个功能背景**设计测试用例**\n。举例：请写出微信朋友圈发图片功能的测试用例。笔试时间很紧张，我一般写测试用例格式为：编号+名称+输入+预期输出+实际输出。可以从功能、性能、兼容性、易用性、安全性、可扩展可维护、异常情况等方面分点叙述。其次也可能会出八股简答题，比如简述tcp和udp之类的。\n\n综上，很多测开的笔试试卷都是开发统卷，**总体难度和开发相当** ，编程会简单一点（大概是删1道hard难度coding的程度）。\n\n个人备考是**选择题刷牛客，编程题刷力扣** 。楼主比较懒，练习量比较低，平均ac数是2/3（除了阿里这种地狱难度），大部分时候还是能过笔试的。\n\n**2、面试**\n\n面试考核主要分为5点：①个人介绍、②实习/项目、③测试理论、④八股、⑤手撕。\n\n**①个人介绍** ：包含学校经历、项目经历、实习经历等方面。\n\n个人介绍推荐大家准备两个版本，3分钟左右详细版和1分钟左右省略版，最好要提前捋明白，一定**不要磕磕绊绊** ，一个优秀的自我介绍是一个好面试的开始。\n\n项目经历方面，网络上测试相关的项目很少，质量也参差不齐，拿准备测试项目的时间去**学测试工具更有性价比** 。没有实习的 _至少_ 额外学 _2个_\n测试工具，并且一定要**亲手试用** ，常用功能**底层原理**\n也要了解，楼主之前就被问到抓包原理之类的。项目本身，准备1-2个开发项目即可，有精力的最好可以把学的测试工具在项目中的使用体现一下。如何自测、白盒做了什么、怎么使用的测试工具、黑盒怎么测的。（楼主没有准备测试项目）。\n\n实习经历方面，还是推荐有时间的同学去刷一段实习的（有开发实习也行，讲明白为什么选测试不选开发，千万别说卷不过开发才做测试）。在面试过程中明显感觉到面试官**偏好有实习经历的同学**\n（具体实习中的工作内容分享在文末）。而且在实习中接触具体的工作内容往往可以解决你对于测开工作的很多疑惑。\n\n**②测试理论** ：包含测试的基本知识，比如测试类型、用例编写、测试工具使用、测试人员具备的素质、bug定位方法等等。\n\n这部分最常见的提问：给你个xxx怎么写测试用例？ 测试流程分为几个阶段？xx测试工具原理是什么？怎么理解测试开发岗位？……\n\n测试理论八股网络上资料也是参差不齐，目前楼主没有找到一份完整完善的汇总资料。在有测试基础知识的前提下，通过**看面经准备**\n就足够了。可以收集近3年收集牛客上测开面经，摘取测试理论部分，归纳整理一下即可。测试理论不会很难，大部分都是场景题， _主要考察表达能力和逻辑思维能力_ 。\n\n**③八股** ：这部分没啥可说的吧，**408+语言**\n。计网+操作系统+数据库+数据结构+linux我是看的小林coding。语言根据具体选啥就背啥八股。不过无论选啥语言，建议大家都去学点python，去\n_自己写一下自动化测试脚本，让面试官知道你有所准备_ 。\n\n**④手撕** ：比笔试简单多了，都是**力扣原题** ，难度**普遍mid** ，部分easy。全部都是链表、数组的题。\n\n常考知识点：双指针、链表、二分、堆栈、动规、滑动窗口、排序算法。\n\n常考题目：回文串、递增子序列、第k大元素、无重复字符的最长子串这种，都是非常经典的面试题，剑指刷熟练完全够用。\n\n还可能会有一些分析日志之类的。比如：给你一份日志文件，想从中提取出某段特定文字。这种不好预判，但模拟基本都能解决。如果思路卡壳，多和面试官交流，寻求提示，甚至申请换题也是可以的。\n\n_ps：测开实习中的工作内容参考（不到三个月）：分析需求，给需求排期。拉三方会议，把控测试节奏。写测试用例，review用例。执行用例，多轮测试。流程控制，盯上线。CI/CD的使用。自动化脚本编写、执行，定期查看日志。_\n\n拖延症没救了，未来有时间写个秋招时间线复盘，希望大家能收获心仪的offer~\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561248000786407424?sourceSSR=users",
        "title": "华为机试&面经c++",
        "content": "机试三道题\n\n第一题：简单的数组题，具体内容忘了。只记得输出是类似“1 2 3”这样用空格隔开的一个个结果。我本来在循环中直接计算完每一个答案以后cout<<ans<<'\n'; 结果最后面多了一个空格答案不通过，无奈给最后一个结果单独输出。\n\n第二题：最大拓扑网络。给定n个节点（0~n-1），每个节点都有其对应的层级（1<=level<=1000)。节点之间有链路连接，比如{0，2}表示节点0和节点2之间可以连接，这个连接是双向的。每个节点可以有多条链路，但只能属于一个层级。最大拓扑网络表示在同一层级下，能用链路直接连接起来的最大节点数量。（比如共有3个节点，节点0，1，2都属于层级1，且给定链路{0，1}，{1，2}，则它们组成了大小为3的拓扑网络。如果节点0，2属于层级1，节点1属于层级2，则最大拓扑网络大小为1）。\n\n输入：n（代表n个节点）\n\nn个数字（代表每个节点所属的层级）\n\nm（代表共有m条链路）\n\nm行，每行为两个数字（代表每条链路连接的两个节点）\n\n输出：最大拓扑网络的大小\n\n这道题我用广度搜素写的，测试用例增减了几条链路完全没问题，结果通过率只有10%，百思不得其解。贴一下代码希望有大佬解惑。\n\n    \n    \n    #include <vector>\n    #include <queue>\n    #include <iostream>\n    using namespace std;\n    int main()\n    {\n        int n;\n        cin >> n;\n        vector<int> level;\n        for (int i = 0; i < n; i++) {\n            int l;\n            cin >> l;\n            level.push_back(l);\n        }\n        int linkNum;\n        cin >> linkNum;\n        vector<vector<int>> link(n);\n        for (int i = 0; i < linkNum; i++) {\n            int left, right;\n            cin >> left >> right;\n            link[left].push_back(right);\n            link[right].push_back(left);\n        }\n    \n        int ans = 1;\n        queue<int> visit;\n        for (int i = 0; i < n; i++) {\n            if (level[i] == -1) { continue; }\n            visit.push(i);\n            int nowLevel = level[i];\n            int size = 1;\n            while (!visit.empty()) {\n                int nowVisit = visit.front();\n                level[nowVisit] = -1;\n                for (auto it : link[nowVisit]) {\n                    if (level[it] == nowLevel) {\n                        visit.push(it);\n                        size++;\n                    }\n                }\n                visit.pop();\n            }\n            ans = max(ans, size);\n        }\n        cout << ans << endl;\n    \n    \n\n第三题：菜单组合种类。为了科学饮食，控制每天摄入的卡路里数。最低值应不低于kcal_low,\n最高值应不高于kcal_high。现在给出n个菜品的卡路里数，菜品可以重复选择。为满足总共摄入的卡路里数在规定的区间，可以有多少种菜品选择方式？\n\n输入：kcal_low kcal_high\n\nn\n\nn行，表示每个菜品的卡路里数。\n\n输出：所有合理的菜品组合方式数量。\n\n例：输入350 500\n\n3\n\n100\n\n200\n\n500\n\n输出：7\n\n解释：500*1，200*2，200*1+100*2，200*2+100*1，100*4，100*3+200，100*5共7种选择。\n\n完全背包问题，动态规划。代码没存。\n\n\\----------------------------------------------------------------------------------------------------------------------------------\n\n一面：开局经典自我介绍。然后让介绍一个代码量最多的项目，并且问了一些相关问题。\n\n做题：输入hello world world\n\n输出world 2\n\nhello 1\n\n按出现频次最多的单词排序。相同频次按字母表排序。哈希表解决。\n\n之后问了一些c++八股文。后悔没好好背，答的磕磕绊绊。主要是面向对象相关，多态虚函数之类。还有指针和引用、内存等等。\n\n二面：大体和一面内容差不多。八股+手撕代码。简历上每个项目都延申问了点相关知识，一路深入，直到我答不出来。但是面试官人很好，试出我的深浅之后就换话题，态度很友善类似闲聊，所以压力不大。\n\n主管面：本来以为会压力面，结果还好。主管虽然比较严肃但没给太多压力。主要问了实习相关：碰到的最喜欢的人和最讨厌的人？遇到那些困难如何解决？如果重来一次实习有那些地方可以改进？实习收获？如何看待工作和学习的区别？介绍你认为最有效的学习方法？未来的职业规划？你认为作为技术专家/管理人员应该具备什么能力？最后问了华为企业文化的认识。总共30min。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561485959758454784?sourceSSR=users",
        "title": "base成都 零一悦动 前端实习面经",
        "content": "投递渠道: BOSS 直聘\n\n面试时间： 2023-11-19\n\n> 当天投递当天约面，建议在下午三点发起对话，好像回复率很高！\n\n**面试流程**\n\n  1. 自我介绍\n  2. 挑选一个项目进行详细介绍\n  3. 项目的技术选型是怎么考虑的\n  4. 说一下不同技术选型给你带来的体验（这里我提到了 js 和 ts 在类型提示上的区别以及普通 css 与 tailwind 的区别）\n  5. 项目中与后端接口联调的流程是怎样的\n  6. 在你使用 tailwind 时遇见复杂的样式如何处理（老老实实回归普通 css）\n  7. 盒子模型: `content-box` 与 `border-box`\n  8. 防抖节流: 说一下应用场景与口胡实现原理\n  9. 项目中用到过哪些组件通信的方式（答得感觉不是很满意，我真的只用过 props 与 emit 😭）\n  10. 深拷贝实现方式（JSON 与手写深拷贝）\n  11. 对 async/await 与 Promise 的理解（解决回调地狱的问题，语法糖提高代码可读性）\n  12. 平常开发中如何进行代码调试\n  13. Vue 中 key 的作用（与 diff 算法相关，为了更好的复用 DOM 节点，提高渲染性能） 如果一个列表中有两个元素的 key 值相同，那么会带来什么影响（错误更新）\n  14. 什么时候接触前端？对后端有了解吗？\n  15. 反问。\n\n半小时结束，当晚约线下详谈。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561241461103030272?sourceSSR=users",
        "title": "滴滴前端实习",
        "content": "### **一面（50min）**\n\n  * 自我介绍\n\n  * 项目介绍、难点介绍\n\n  * 做了哪些优化\n\n  * 分包怎么分的，分完之后优化了什么\n\n  * 依赖用了 cdn 之后主要优化了什么\n\n  * 介绍下懒加载\n\n  * 登录怎么做的\n\n  * url 到界面\n\n  * http2 一次最多能发几个请求\n\n  * 介绍下宏任务微任务\n\n  * 讲讲事件循环\n\n  * webpack 有哪些 loader\n\n  * webpack 主要作用是什么\n\n  * webpack HMR TreeShaking 原理\n\n  * vite 和 webpack 的区别\n\n  * vite 兼容性如何\n\n  * vite 为什么依赖 esm\n\n  * vue3 diff 算法\n\n  * vue3 diff 算法的时间复杂度是多少\n\n  * vue3 双向绑定原理\n\n  * vue2 vue3 响应式原理区别、vue2 响应式有什么缺点\n\n  * js 数组有哪些方法\n\n  * 看输出：\n    \n        async function async1() {\n      console.log('async1 start')\n      await async2()\n      console.log('async1 end')\n    }\n    async function async2() {\n      console.log('async2')\n    }\n    \n    console.log('script start')\n    \n    setTimeout(function () {\n      console.log('setTimeout')\n    }, 0)\n    \n    async1()\n    \n    new Promise(function (resolve) {\n      console.log('promise1')\n      resolve(1)\n    }).then(function (res) {\n      console.log('promise2', res)\n    }).then(function (res) {\n      console.log('promise3', res)\n    })\n    console.log('script end')\n    \n\n  * 写题：数组拍平后排序\n\n  * 反问\n\n屏幕共享的时候面试官：”你游戏还挺多哈......“。。。我汗流浃背了。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561223223296237568?sourceSSR=users",
        "title": "蚂蚁-财富管理-后台开发-一面（社招）",
        "content": "  * 形式：电话面试\n\n## 项目\n\n  1. 介绍一个项目\n  2. 数据库选型，为什么\n  3. MongoDB关联查询是怎么做的？\n  4. 项目性能如何\n\n## 技术\n\n  1. Redis持久化机制\n  2. Redis是怎么序列化的\n  3. Redis有哪些读写模式\n  4. 主从同步过程中，COW过程具体是怎样的\n  5. Redis key的最大长度，过长的key会有什么问题？\n  6. Redis的原子性是怎么实现的？\n  7. 双缓存了解吗？\n  8. 本地缓存和分布式缓存区别？\n  9. Memecach 和 Redis 区别？\n  10. 缓存击穿、穿透、雪崩了解吗？\n  11. 让你设计布隆过滤器，你会怎么设计\n  12. 双缓存，更新时应该如何操作缓存？\n  13. MySQL的分库分表怎么设计？ShardingKey怎么选取？按照什么原则选取？\n  14. 数据倾斜，对接口性能会有什么影响？\n\n## 反问\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561484939217104896?sourceSSR=users",
        "title": "滴滴 前端实习 一面面经",
        "content": "Base 北京\n\n投递渠道: BOSS 直聘\n\n时间线\n\n  * 2023-11-23 投递简历\n  * 2023-11-29 约面\n  * 2023-11-31 一面\n\n**一面**\n\n  1. 介绍一下青训营的项目,在其中扮演了怎样的角色\n  2. CSS 定位有哪些 -> 讲讲 sticky\n  3. Webpack 的使用情况\n  4. 浏览器从输入 URL 到页面呈现的过程发生了什么\n  5. 同源策略与跨域解决方案\n\n手撕代码:\n\n  1. 对象数组根据 key 值去重\n\n    \n    \n    [\n      { \"key\": 1, \"value\": \"Tom\" },\n      { \"key\": 1, \"value\": \"Jack\" },\n      { \"key\": 2, \"value\": \"Anna\" }\n    ]\n    \n\n  2. 嵌套对象数组根据 key 值去重\n\n    \n    \n    [\n      {\n        \"key\": 1,\n        \"value\": \"Tom\",\n        \"children\": [\n          { \"key\": 4, \"value\": \"John\" },\n          { \"key\": 4, \"value\": \"Linda\" }\n        ]\n      },\n      { \"key\": 1, \"value\": \"Jack\" },\n      { \"key\": 2, \"value\": \"Anna\", \"children\": [{ \"key\": 1, \"value\": \"Jack\" }] }\n    ]\n    \n\n  3. 判断回文字符串\n\nemmmm,八股答得也还行,手撕代码也全都做出来了,但是没有后续流程了...\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561208265908961280?sourceSSR=users",
        "title": "越凡创新-成都-线下面试-Java",
        "content": "越凡创新-成都-线下面试\n\nspi\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701673172596/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701673181237/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n类加载器\n\n类加载的几个过程：加载、验证、准备、解析、初始化。然后是使用和卸载了\n\n1\\. 加载(Loading) 加载阶段是将类的字节码文件加载到内存中，并创建一个对应的Class对象。\n\n2\\. 验证(Verification) 验证阶段会对字节码进行验证，以确保其符合Java虚拟机规范。\n\n3\\. 准备(Preparation) 准备阶段是为类的静态变量分配内存空间，并设置默认初始值。\n\n4\\. 解析(Resolution) 解析阶段将符号引用转换为直接引用。\n\n5\\. 初始化(Initialization) 初始化阶段是对类的静态变量进行赋值和静态代码块的执行。\n\n什么是类加载器，类加载器有哪些?\n\n通过类的权限定名获取该类的二进制字节流的代码块叫做类加载器。\n\n主要有一下四种类加载器:\n\n1\\. 启动类加载器(Bootstrap ClassLoader)加载 java 核心类库\n\n2\\. 扩展类加载器(extensions class loader):加载 Java 的扩展库。\n\n3\\. 系统类加载器（system class loader）：它根据 Java 应用的类路径（CLASSPATH） 来加载 Java类。\n\n4\\. 用户自定义类加载器，通过继承 java.lang.ClassLoader 类的方式实现。\n\n类加载器双亲委派模型机制？\n\n核心思想是：当一个类加载器（Child，子类加载器）收到加载类的请求时，它首先会委托给父类加载器（Parent，父类加载器）进行加载，只有当父类加载器无法完成加载时，子类加载器才会尝试加载。这个模型有助于维护类加载器之间的层次关系，防止类的重复加载，提高类加载的效率，同时确保\nJava 核心类库的安全性。\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701673574655/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n怎么打破双亲委派模型？\n\n自定义类加载器，继承ClassLoader类，重写loadClass()方法和findClass()方法；\n\npackage包与类加载器的关联\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701673584292/D2B5CA33BD970F64A6301FA75AE2EB22)\n\njvm分区\n\n1、内存模型以及分区：JVM 分为栈区、堆区和方法区\n\n初始化的对象放在堆里面，引用放在栈里面， class 类信息、常量池（static 常量）放在方法区。\n\n1\\. 栈：栈的结构是栈帧组成的，调用一个方法就压入一帧，帧上面存储局部变量，局部变量存放8大基础类型和指向引用类型的指针。\n\n2\\. 堆：初始化的对象，类的成员变量 （那种非 static 的变量），所有的对象实例都在堆上分配。\n\n3\\. 方法区：主要是存储类信息，常量池（static 常量），编译后的代码（字节码）等数据。\n\n2\\. 堆里面的分区：Eden，survival （from+ to）\n\n堆里面分为新生代和老生代（java8 取消了永久代，采用了 Metaspace）\n\n新生代包含 Eden 和 Survivor，Survivor 区里面分为 from区 和 to 区。内存回收时，如果用的是复制算法，从 from 复制到\nto。当经过一次或者多次 GC 之后，存活下来的对象会被移动到老年区，当 JVM 内存不够用的时候，会触发 GC，清理 JVM\n老年区。当新生区满了之后会触发GC，先把存活的对象放到其中一个 Survice 区，然后进行垃圾清理。\n\n3\\. GC 的两种判定方法\n\n1\\. 引用计数法：指的是如果某个地方引用了这个对象就+1，如果失效了就-1，当为 0 就会回收但是 JVM没有用这种方式，因为无法判定相互循环引用（A\n引用 B,B 引用 A） 的情况。\n\n2\\. 引用链法： 通过一种 GC ROOT 来判断，如果有一条链不能到达 GC ROOT 就说明可以回收。\n\ngc回收机制\n\n1\\. 标记-清除（Mark and Sweep）：\n这是最基本的垃圾回收算法。它分为两个阶段：标记阶段和清除阶段。在标记阶段，垃圾收集器标记出所有活动对象。在清除阶段，垃圾收集器清除所有未标记的对象，即未被标记为垃圾的对象。\n\n2\\. 复制（Copying）：\n这个算法将堆分为两个区域，一半用于存活对象，一半用于非存活对象。在垃圾回收时，将存活对象复制到另一半区域，然后清除当前区域的所有对象。这种算法简单高效，但浪费了一半的内存。\n\n3\\. 标记-整理（Mark and Compact）： 结合了标记-\n清除和复制两种算法的思想。标记阶段用于标记存活对象，然后将存活对象移动到一端，清理掉其他未标记的对象。这样可以保持对象在内存中的紧凑排列，减少碎片化。\n\n4\\. 分代收集（Generational Collection）：\n将堆分为年轻代和老年代。大部分对象在年轻代中被分配，年轻代的垃圾回收频率较高。当对象在年轻代存活一段时间后，就会被移动到老年代。年轻代通常使用复制算法，而老年代使用标记-\n整理算法。\n\n连接池的大小与数据库有什么关联\n\n连接池的大小与数据库之间存在一定的关联，特别是在应用程序与数据库之间频繁建立和关闭连接的情况下。连接池是一种管理数据库连接的机制，它允许应用程序在需要时从池中获取连接，而不是每次都建立新的连接。以下是连接池大小与数据库性能和资源利用之间的关联：\n\n1\\. 性能优化：\n连接池的大小直接影响到应用程序对数据库连接的获取和释放效率。如果连接池大小适当，可以避免频繁地建立和关闭连接，从而减少了连接的开销，提高了数据库访问的性能。\n\n2\\. 资源利用：\n连接池的大小也与系统资源的有效利用有关。过小的连接池可能导致连接不足，从而影响应用程序的性能。然而，过大的连接池可能会占用过多的系统资源，导致资源浪费。因此，需要根据应用程序的负载和系统资源情况来调整连接池的大小。\n\n3\\. 数据库连接数限制：\n数据库管理系统（DBMS）通常对同时连接到数据库的最大连接数有限制。连接池的大小不能超过数据库允许的最大连接数，否则会导致连接请求被拒绝或性能下降。\n\n4\\. 并发访问控制：\n连接池的大小还可以用于控制并发访问数据库的连接数。适当调整连接池的大小可以防止过多的并发连接对数据库造成过大的压力，从而提高系统的稳定性\n\n线程设置最大线程数\n\n内存溢出的情况\n\n内存溢出（Memory\nOverflow）是指程序在运行时尝试申请更多内存空间，但无法满足需求，导致程序无法正常执行的情况。内存溢出通常是由于程序申请的内存超出了系统或进程的可用内存限制引起的。\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674085882/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674094944/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n什么情况下会发生栈内存溢出？\n\n栈内存溢出（Stack\nOverflow）通常发生在程序的递归调用过程中，尤其是递归调用没有明确的终止条件或者终止条件不容易达到的情况下。栈内存主要用于保存方法的调用栈和局部变量，每个方法调用都会在栈上分配一段内存，如果递归调用层次太深，栈空间会被耗尽，从而导致栈内存溢出。\n\n无限递归： 当一个方法无限递归调用自身，而且没有明确的终止条件时，栈内存就会迅速耗尽。\n\n递归深度过大： 即使有明确的终止条件，但递归调用的层次过大，也可能导致栈内存溢出。\n\n数据库查看当前线程数的命令\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674128551/D2B5CA33BD970F64A6301FA75AE2EB22)\n\nspringIOC容器创建的过程\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674135883/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674145067/D2B5CA33BD970F64A6301FA75AE2EB22)\n\nioc加载机制\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674157428/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n建立索引，邮箱查询唯一\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674172769/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n数组跟列表的区别\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674180847/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n链表节点的删除操作通常包括以下几个步骤：\n\n1\\. 定位要删除的节点： 在链表中找到要删除的节点，通常需要从链表的头节点开始遍历，直到找到目标节点。\n\n2\\. 调整前后节点的指针： 将目标节点的前一个节点的next指针指向目标节点的下一个节点，跳过目标节点，从而将目标节点从链表中删除。\n\n3\\. 释放内存（可选）： 如果使用动态内存分配创建节点，可以考虑释放目标节点所占用的内存。\n\nB树和B+树的区别\n\nB 树的所有节点既存放键(key) 也存放数据(data)；而B+树只有叶子节点存放 key 和 data，其他内节点只存放 key。\n\nB 树的叶子节点都是独立的;B+树的叶子节点有一条引用链指向与它相邻的叶子节点。\n\nB 树的检索过程相当于对范围内的每个节点的关键字做二分查找，可能还没有到达叶子节点，检索就结束了。而\nB+树的检索效率就很稳定了，任何查找都是从根节点到叶子节点的过程，叶子节点也可以做顺序检索。\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674213232/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n数据库的回表查询\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674241128/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674249248/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674256780/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674264781/D2B5CA33BD970F64A6301FA75AE2EB22)\n\nHashMap\n\n1、底层数据结构是什么？\n\n在 JDK 1.7 中，HashMap 底层使用数组+链表的形式进行存储，在 JDK 1.8 之后，增加了红黑树，即数组+链表+红黑树的形式存储元素。\n\n其中数组是用来存储元素，链表是用来解决哈希冲突，而红黑树是用来提高查询效率的。\n\nPS 可能会被问到解决 Hash 冲突的常见方法？\n\n• 开放定址法：\n\n线性探测法\n\n二次探测法\n\n• 链地址法\n\n• 再哈希法\n\n• 建立公共溢出区\n\n2、链表和红黑树之间的转换？\n\n• 链表长度大于 8 且数组长度大于 64，则将链表转换成红黑树；\n\n• 链表长度小于 6 时会将红黑树转换成链表。\n\n为何使用红黑树而非二叉树或平衡树？\n\n相比普通二叉树，红黑树是一棵平衡树，它的添加、删除和查找操作最差时间复杂度为 O(logn)，避免了普通二叉树最差情况下 O(n)\n的复杂度。平衡二叉树是比红黑树更加严格的平衡树，为了达到平衡需要进行更多的旋转次数，所以红黑树插入删除操作效率更高。\n\nHashMap为何负载因子是 0.75？(时间与空间转换)\n\n1）如果我们设的负载因子比较大，元素比较多时，扩容时数组发生碰撞的位置较多，增加查找时间成本。\n\n2）如果设置的比较小，元素又比较少时，数组还有足够空位的时候就发生了扩容，发生哈希碰撞的概率就降低了，查找时间成本降低，但是就需要更多的空间去存储元素，空间成本就增加了。\n\nHashMap 是非线程安全的，可以使用 Java 中线程安全的Map，如 HashTable（数组+链表）\n\nredis的缓存雪崩怎么处理\n\n雪崩出现的原因\n\n1\\. Redis 挂掉了，请求全部走数据库。\n\n2\\. 对缓存数据设置相同的过期时间，导致某段时间内缓存失效，请求全部走数据库。\n\n缓存雪崩如果发生了，很可能就把我们的数据库搞垮，导致整个服务瘫痪！\n\n解决方案\n\n缓存挂了的情况\n\n1\\. 事发前：实现 Redis 的高可用(主从架构+Sentinel 或者 Redis Cluster)，尽量避免 Redis 挂掉这种情况发生。\n\n2\\. 事发中：万一 Redis\n真的挂了，我们可以设置本地缓存(ehcache)+限流(hystrix)，尽量避免我们的数据库被干掉(起码能保证我们的服务还是能正常工作的)\n\n3\\. 事发后：redis 持久化，重启后自动从磁盘上加载数据，快速恢复缓存数据。\n\n过期时间情况\n\n在缓存的时候给过期时间加上一个随机值，这样就会大幅度的减少缓存在同一时间过期。\n\nredis数据类型\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674326626/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n过期时间\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674333834/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n注意事项：\n\n过期时间的设置和查询都是以秒为单位的整数。\n\n过期时间是针对键的，而不是键的值。\n\n过期时间的精度是秒，不支持毫秒级别的过期时间。\n\n过期时间设置后，如果在此期间对键进行了更新操作，过期时间会重置。\n\n同步锁和lock\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674345456/D2B5CA33BD970F64A6301FA75AE2EB22)\n\nlock锁的重用锁\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674369006/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n资源对象（两个属性）\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674375954/D2B5CA33BD970F64A6301FA75AE2EB22)\n\ncas函数有几个参数，如何保证原子性\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674381815/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n在系统中在各个层次如何保证高并发\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674389613/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n秒杀，同一订单多线程保证数量正确\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674401723/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674409513/D2B5CA33BD970F64A6301FA75AE2EB22)\n\nmysq索引最左匹配原则\n\nMySQL 索引最左匹配原则是指，在使用联合索引（Composite\nIndex，也叫复合索引）时，查询条件必须从联合索引的最左边的列开始，并且依次向右，才能充分利用这个索引。\n\n这是因为 MySQL 索引的最左匹配原则，在查询时只能利用索引的最左侧的列，如果索引的前缀部分未被使用，那么查询性能可能无法得到优化。\n\nmybatis中# {}的区别\n\n1\\. #{}：预编译参数：#{} 是 MyBatis 中用于预编译参数的语法。在 SQL 语句中，#{} 会被 MyBatis\n替换为一个占位符，并使用预编译的方式将参数值传递到 SQL 中，以防止 SQL 注入攻击。\n\n2\\. ${}：直接拼接参数值：${} 是 MyBatis 中用于直接拼接参数值的语法。在 SQL 语句中，${} 会被 MyBatis\n替换为实际的参数值，并将其直接拼接到 SQL 中。这样的处理方式存在 SQL 注入的风险，因为参数值可能直接影响 SQL 语句的结构。\n\n• #{}：用于预编译参数，可以防止 SQL 注入。\n\n• ${}：直接拼接参数值，存在 SQL 注入的风险，不建议在动态 SQL 中使用\n\n最近最少使用回收算法\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701674418047/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561192787442409472?sourceSSR=users",
        "title": "嵌入式综合 c语言 面经 笔试题",
        "content": "### 4.综合题（18道）\n\n###\n\n**4.1**  **下面代码输出是几？**\n\n    \n    \n     int main()  \n    {  \n        int j = 2;  \n        int i = 1;  \n        if(i = 1) j = 3;  \n        if(i = 2) j = 5;  \n        printf(\"%d\", j);  \n    }  \n\n**答案：** 输出为5。\n\n**解读：** 注意if的条件语句用的是赋值符\"=\"而不是等号\"==\"，因此条件一直为真。\n\n**  \n**\n\n**4.2**  **负数和正数的反码、补码分别是什么？**\n\n（1）负数的反码：对原码除符号位外的其余各位逐位取反就是反码。\n\n（2）负数的补码：负数的补码就是对反码加1。\n\n（3）正数的原码、反码、补码都一样。\n\n  \n\n**4.3**  **编译和链接有什么不同？（如对外部符号的处理）**\n\n（1）编译（+汇编）生成的是目标文件(*.o)。编译过程中对于外部符号（如用extern跨文件引用的全局变量）不做任何解释和处理，外部符号对应的就是\"符号\"。\n\n（2）链接生成的是可执行程序。链接将会解释和处理外部符号，外部符号对应的是地址。\n\n  \n\n**4.4**  **函数参数的传递方式有几种？**\n\n（1）两种：值传递、指针传递。\n\n（2）严格来看，只有一种传递，值传递，指针传递也是按值传递的，复制的是地址。\n\n  \n\n**4.5**  **局部变量能否和全局变量重名？**  ** **\n\n**答案：** 能，局部会屏蔽全局。要用全局变量，需要使用\"::\"。\n\n**注意：**\n对于有些编译器而言，在同一个函数内可以定义多个同名的局部变量，比如在两个循环体内都定义一个同名的局部变量，而那个局部变量的作用域就在那个循环体内。\n\n  \n\n**4.6****如何引用一个已经定义过的全局变量？**** **\n\n**答案：** 可以用引用头文件的方式（不建议，可能会造成重复定义），也可以用extern关键字。\n\n**注意：**\n\n（1）如果用引用头文件方式来引用某个在头文件中声明的全局变理，假定你将那个变量写错了，那么在编译期间会报错。\n\n（2）如果你用extern方式引用时，假定你犯了同样的错误，那么在编译期间不会报错，而在链接期间报错。\n\n**  \n**\n\n**以上内容摘自[牛客](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E7%2589%259B%25E5%25AE%25A2)官方专刊《嵌入式岗位笔试面试真题讲解》，数千位同学已订阅，该专刊不仅有真题讲解，还有经验分享，不清楚嵌入式该学什么的同学，想找嵌入式实习/正式工作的同学，都可以来看看：\n**\n[https://blog.nowcoder.net/zhuanlan/v0ELPM](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.nowcoder.net%2Fzhuanlan%2Fv0ELPM)\n\n  \n\n  \n\n  \n\n嵌入式推荐公司：[华为](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E5%258D%258E%25E4%25B8%25BA)、[小米](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E5%25B0%258F%25E7%25B1%25B3)\n、[OPPO](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3DOPPO)、VIVO、荣耀、努比亚、[CVTE](https://www.nowcoder.com/jump/super-\njump/word?word=CVTE) 、\n[大疆](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E5%25A4%25A7%25E7%2596%2586)、insta360影石、[美的](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E7%25BE%258E%25E7%259A%2584)、\n[TCL](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3DTCL)、创维、海信、海尔、长虹、烽火、[经纬恒润](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E7%25BB%258F%25E7%25BA%25AC%25E6%2581%2592%25E6%25B6%25A6)\n、小鹏、[图森未来](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E5%259B%25BE%25E6%25A3%25AE%25E6%259C%25AA%25E6%259D%25A5)、\n[百度](https://www.nowcoder.com/jump/super-\njump/word?word=%E7%99%BE%E5%BA%A6)、[滴滴](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E6%25BB%25B4%25E6%25BB%25B4)、蔚来、理想、比亚迪、吉利、小马智行、元戎启行、摩拜、豪威、\n联发科、\n[紫光展锐](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E7%25B4%25AB%25E5%2585%2589%25E5%25B1%2595%25E9%2594%2590)、全志、\n[寒武纪](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E5%25AF%2592%25E6%25AD%25A6%25E7%25BA%25AA)、[晶晨半导体](https://www.nowcoder.com/jump/super-\njump/word?word=%E6%99%B6%E6%99%A8%E5%8D%8A%E5%AF%BC%E4%BD%93)、汇顶、\n[华为](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E5%258D%258E%25E4%25B8%25BA)、[中兴](https://www.nowcoder.com/jump/super-\njump/word?word=%E4%B8%AD%E5%85%B4)、[浪潮](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E6%25B5%25AA%25E6%25BD%25AE)、[TP-\nLINK](https://www.nowcoder.com/jump/super-jump/word?word=TP-\nLINK)、讯飞、商汤、[海康威视](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E6%25B5%25B7%25E5%25BA%25B7%25E5%25A8%2581%25E8%25A7%2586)、浙江\n[大华](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fjump%2Fsuper-\njump%2Fword%3Fword%3D%25E5%25A4%25A7%25E5%258D%258E)、旷视、360。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561482449637720064?sourceSSR=users",
        "title": "Momenta  研发实习 面经",
        "content": "Base 北京\n\n投递渠道: BOSS 直聘\n\n时间线\n\n  * 2023-11-24 投递简历\n  * 2023-11-28 下午一面,结束后立马约二面\n  * 2023-11-29 上午二面,中午 OC\n\n**一面**\n\n  1. 青训营经历简单介绍\n  2. 手撕算法: 【LC56. 合并区间】,要求原地操作数组.\n  3. 反问环节\n\n**二面**\n\n  1. 如何调试 hover 样式(我的回答是开发者工具中可以勾选,但是存在不够精确的问题)\n  2. 除了使用 vercel 之外,有没有自己去尝试过部署前端项目\n  3. 有没有用过 Docker\n  4. 浏览器跨域解决方案\n  5. 有没有用过 iframe 标签\n  6. git rebase 有用过吗(没有,但是个人比较常用 git stash)\n  7. 介绍一下青训营的项目 -> NPM 的扁平化安装机制\n  8. 关于事件循环的一个场景题: 在 JavaScript 中，你在一段同步代码中创建了一个 Promise。然后，在代码的末尾，你编写了一个 while(flag)循环来阻塞程序的执行。你的计划是在 Promise 的回调函数中将 flag 设置为 false，这样就可以退出这个循环。然而，由于 JavaScript 的事件循环机制，这种做法在 JavaScript 中是行不通的。有没有什么方法可以让这种情况在 JavaScript 中成为可能。\n  9. 前端工具链: Rollup / Webpack / Vite 的使用经验与理解\n  10. UI 组件测试是否了解\n  11. TailwindCSS 暗黑模式布局是如何实现的，常规 CSS 如何实现暗黑模式的布局\n  12. 虚拟滚动技术如何实现的\n  13. 项目中的防抖具体是如何实现与应用的\n  14. 反问\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561201418590232576?sourceSSR=users",
        "title": "成都网安科技-线下面试-JavaWeb岗位",
        "content": "成都网安科技-线下面试-JavaWeb岗位\n\n笔试+面试\n\n笔试：\n\n1\\. collection与collections的区别，以及一些常用类\n\nJava 中有 Collection 接口和 Collections 类，它们分别用于表示集合（collection）的接口和包含集合工具方法的类。\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672635024/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n2\\. 字符串与数组的切片、分割、获取字串等相关类与方法\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672643684/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672652062/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n3\\. Java反射机制的原理与使用场景\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672658433/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672665823/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n4\\. HTTP中的GET请求和POST请求的区别\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672673092/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672684207/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n5\\. 大型文件上传过程涉及到分片上传，大致思路\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672693024/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672700278/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672708625/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n6\\. 数据结构中常用的排序算法\n\n面试：\n\npom.xml文件的scope是什么\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672717539/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672724963/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672732395/D2B5CA33BD970F64A6301FA75AE2EB22)\n\nmongdb集群\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672739125/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672745061/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672753918/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n23种设计模式分类：\n\n创建型、结构型和行为型设计模式。\n\n堆排序\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672760050/D2B5CA33BD970F64A6301FA75AE2EB22)\n\nrabbitmq的队列类型\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672768067/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672774262/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231204/879830933_1701672782826/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561178460652060672?sourceSSR=users",
        "title": "24届TCL安卓开发笔试",
        "content": "**投递岗位：** TCL，安卓开发岗位（惠州/深圳）\n\n**投递时间：**\nTCL开校招的时间不算晚，大概8月月底就开了，我是国庆之后投递的，10月8号进行英语测评，10月19号进行了笔试，10月27号确认流程为“面试中”。11月4号进人才库。\n\n****\n\n**英语笔试（45min，时间比较紧）：**\n\n1，短文阅读。（考研英语类似的阅读题），一共有14题，给了2篇短文。\n\n2，小作文。（考研英语类似的小作文），用英语写一个小作文，要求书信体，不少于150词。\n\n**笔试题目：**\n\n**单选题（50个单选题）**\n\n**1-10：**\n1，SQL查询语句。2，哪个是非对称加密算法。3，并发导致的数据不一致的具体表现。4，LSB和MSB。5，Java的ContentValue类。6，根据配置来读取apk里面的内容（xxhdpi）。7，两个Activity交互的生命周期的顺序。8，模块独立性应该具备什么（高内聚，低耦合）。9，Java变量的规范表示。10，接口里面的方法的权限。\n\n**11-20：**\n11，private只能被谁访问。12，抽象类和普通类的区别。13，main方法的形参。14，出栈序列。15，线程的运行相关。16，程序设计的原则。17，代码运行结果（switch可以选择string吗）。18，二维数组定义方式。19，编程原则（要少用公共变量）。20，抽象类。\n\n**21-20：**\n21，1234/1000*1000=？，22，Java基础类型的大小和赋值。23，代码运行结果（循环）。24，递归的概念。25，Java的底层语言是什么。26，Thread类有哪些方法。27，Java的编译结果是（字节码）。28，接口的修饰符。29，构造方法。30，java.sql是做什么的。\n\n**31-40：**\n31，合法的运算符。32，代码的运行结果。33，抽象方法的规范表达（没有花括号）。34，形参的概念。35，子类访问父类方法的限制。36，合法的变量名。37，数组的概念。38，Java.exe相关。39，Java的方法和成员。40，关系型数据库是哪个。\n\n**41-50：**\n41，基础类型浮点float（初始值和范围）。42，字符输入流。43，流对象建立。44，代码运行结果（代码块的运行顺序）。45，接口的修饰符。46，非基础类型。47，Java的基类是谁。48，abstract关键词。49，2进制到10进制转换。50，代码运行结果。\n\n**多选题（14个多选题）**\n\n**51-64：**\n51，HASH查找。52，APP安全防护。53，AndroidManifest相关。54，public关键字可以修饰谁。55，构造方法（有没有返回值）。56，哪些属于重载的函数。57，Thread类有哪些方法。58，类的内部成员调用规范。59，String的equal。60，一维数组的声明。61，类内部成员的访问权限。62，protected访问权限。63，package和import使用规范。64，非对称加密算法有哪些。\n\n****\n\n**总结：**\n\n1，TCL的英语笔试还是挺正式的，可能在考前需要看看考研英语小作文模板啥的。\n\n2，笔试题目不难，而且没有编程。\n\n3，应聘流程从“笔试完成”到“面试中”，最后再到“进入人才库”。我想这个问题并不复杂，就是投递的晚了导致HC没了。也就是说现在投递TCL大概也没啥机会了。如果TCL开春招，那么这些笔试经验或许还能派上用场。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/561139754251689984?sourceSSR=users",
        "title": "AI算法工程师/深度学习工程师岗位面经",
        "content": "记录一下面试遇到的一些题目，有的我自己写了答案，有的没写，这只是目前我能想起来的所有问题，希望可以给大家一点参考，如果我写的答案有不对的也请大家指教！\n\n1.BN和LN的区别\n\n2.什么情况下会发生梯度爆炸，如何解决（我们初始化的w是很大的数，w大到乘以激活函数的导数都大于1，那么连乘后，可能会导致求导的结果很大，形成梯度爆炸。\n梯度截断：首先设置梯度阈值：clip_gradient，在后向传播中求出各参数的梯度，不直接用梯度进行参数更新，求梯度的L2范数，然后比较范数||g||与clip_gradient的大小，如果范数大，求缩放因子clip_gradient/||g||，由缩放因子可以看出梯度越大，缩放因子越小，就可以很好的控制梯度的范围。最后将梯度乘以缩放因子得到最后需要的梯度。L1范数是指向量中各个元素绝对值之和，L2范数是指向量各元素的平方和然后求平方根。\n\n2、可以通过添加正则项，避免梯度爆炸。正则化是通过对网络权重做正则限制过拟合，仔细看正则项在损失函数的形式：regularization 公式：\n\nLoss=(y−WTx)2+α∣∣W∣∣2,其中,α\n是指正则项系数，因此，如果发生梯度爆炸，权值的范数就会变的非常大，通过正则化项，可以部分限制梯度爆炸的发生。\n\n3、使用LSTM等自循环和门控制机制，避免梯度消失\n\n4、优化激活函数，譬如将sigmold改为relu，避免梯度消失）\n\n5、使用残差网络，避免梯度消失\n\n3.网络收敛很慢可以用什么方法解决：\n\n为了解决收敛速度慢的问题，我们可以从以下三个方面入手：\n\n数据预处理：对于训练数据，可以尝试进行数据清洗、增强、扩充等操作，以提高数据的质量，减少噪声和不平衡现象，从而帮助模型更快地收敛。\n\n优化模型：可以根据任务需求，选择合适的模型结构，避免过度复杂化，以减少计算量和训练时间。同时，可以考虑引入正则化、dropout等技术，以防止过拟合，提高模型的泛化能力。\n\n改进训练代码实现：可以选择合适的优化算法，如随机梯度下降（SGD）、Adam等，并合理设置学习率和批量大小，以加快训练速度。同时，可以尝试使用并行化、分布式等方法，利用多GPU或者多机进行训练，以提高计算效率。\n\n4.dropout为什么能起到正则化\n\n5.用了什么优化器，Adam的原理是什么，Adam为什么可以自适应调节\n\n6.数据量很大的话怎么构建图神经网络（随机游走）：\n\nMini-batch采样：将大型图数据分割为小的子图（mini-\nbatch），然后在每个子图上进行训练。这样可以减小每个训练步骤中需要处理的数据量，降低计算和内存需求。通常，可以使用不同的采样策略（如随机采样或邻域采样）来生成子图，并在每个子图上进行训练。图剪枝和采样：对于大型稀疏图，可以通过图剪枝和采样来减少图的规模。可以根据节点的重要性、连接的强度或其他准则来剪枝图的边或节点。然后，可以根据需要对剪枝后的图进行采样，生成更小的子图进行训练。图嵌入降维：对于高维图数据，可以使用图嵌入技术将节点和边表示为低维向量。图嵌入可以通过诸如节点2vec、GraphSAGE、GCN等方法获得。通过将图数据降维为低维表示，可以减少计算和内存开销，并且可以更高效地训练图神经网络。并行计算：利用GPU和分布式计算的能力，可以在多个设备上并行处理图数据。通过将图数据分配给多个GPU或计算节点，并进行并行计算和通信，可以加速训练过程并提高效率。图网络模型的简化和优化：有时，可以对图神经网络模型进行简化和优化，以减少模型参数和计算量。例如，可以使用图卷积网络（GCN）的稀疏化技术，减少图卷积层中的参数数量，或者使用注意力机制来降低计算复杂度。近似计算：对于大型图数据，可以使用近似计算方法来加速图神经网络的训练。例如，可以使用近似的图聚合操作，或者使用近似的图卷积算子来减少计算复杂度。\n\n7.了解哪些推荐算法\n\n8.注意力机制的计算方法\n\n网络不收敛可能原因：\n\n没有对数据进行归一化\n\n忘记检查输入和输出\n\n没有对数据进行预处理\n\n没有对数据正则化\n\n使用过大的样本\n\n使用不正确的学习率\n\n在输出层使用错误的激活函数\n\n网络中包含坏梯度\n\n初始化权重错误\n\n过深的网络\n\n隐藏单元数量错误\n\nCNN和TRANSFORMER有什么区别：\n\n一、模型结构\n\nCNN是一种基于卷积层的特征提取网络结构，主要用于图像处理领域。卷积层可以提取出图像中的空间特征，例如边缘、角点等。在卷积层后添加池化层可以进一步减小特征图的大小，降低计算量。CNN还可以通过多层卷积层和全连接层组合，实现对复杂图像的分类和识别。\n\nRNN是一种基于循环层的特征提取网络结构，主要用于处理序列数据，例如自然语言文本和时间序列数据等。循环层可以将前一个时间步的隐藏状态传递到下一个时间步，从而实现对序列数据的建模。RNN中的门控循环单元（GRU）和长短时记忆网络（LSTM）可以有效地解决梯度消失和梯度爆炸问题，提高训练效率和模型泛化能力。\n\nTransformer是一种基于自注意力机制的特征提取网络结构，主要用于自然语言处理领域。自注意力机制可以对输入序列中的每个位置进行注意力计算，从而获取全局上下文信息。Transformer中的编码器和解码器可以实现机器翻译、文本生成等任务。\n\n二、特征表示能力\n\nCNN可以通过卷积层提取出具有空间特征的特征表示，例如边缘、角点等，这些特征表示可以用于图像分类、目标检测、人脸识别等任务。RNN可以通过循环层提取出具有时序特征的特征表示，例如序列中的依赖关系和上下文信息，这些特征表示可以用于文本分类、语音识别、音乐生成等任务。Transformer可以通过多头注意力机制提取出具有上下文关联性的特征表示，例如文本中的关键词和语义信息，这些特征表示可以用于机器翻译、文本生成、问答系统等任务。\n\n三、训练效率\n\nCNN在处理大规模图像数据时训练效率较高，由于卷积层的共享权值和池化层的降采样，可以大大减小计算量和内存占用。RNN由于存在循环结构，每个时间步的计算都要依赖上一个时间步的隐藏状态，导致计算复杂度较高，而且容易出现梯度消失或梯度爆炸的问题，导致训练效率低下。Transformer采用自注意力机制进行特征提取，可以并行计算，提高训练效率。\n\n四、模型复杂度\n\nCNN和RNN在处理大规模数据时需要占用大量的内存和计算资源，尤其是在深层网络中。而Transformer在特征提取中采用了自注意力机制，避免了RNN中梯度消失和梯度爆炸问题，可以更深层次地进行特征提取，同时内存和计算资源占用也比较低。\n\ntransformer可以用于图片吗：\n\n这是由于它的自注意力的计算复杂度是图像大小的平方，从而使计算时间和内存需求激增。相反，研究人员将这种平方计算复杂度替换为图像大小的线性计算复杂度。\n\nThe Swin Transformer：\n\n实现此目的的过程非常简单。首先，像大多数计算机视觉任务一样，RGB图像被发送到网络。该图像被分解成图像块，每个图像块都被当作一个 token。这些\ntoken\n是像素本身的RGB值。与NLP进行比较，你可以看到它，因为整体图像是句子，每个图像块都是该句子的单词。自我注意力会应用到每个图像块上，这里称为窗口。然后，移动窗口从而产生新的窗口以再次应用\nself-attention。同时允许跨窗口连接，从而带来更高的效率。与卷积神经网络相比，这非常有趣，因为它允许出现长距离像素关系。\n\n卷积的强大之处在于，过滤器在全局范围内使用固定的权重，从而实现了卷积的平移不变性，使其成为一个强大的广义过滤器。在自注意力中，权重不是全局固定的。相反，它们依赖于本地环境本身。因此，自注意力不仅考虑了每个像素，还考虑了它与其他像素的关系。\n\nViT:\n\n其实很简单，原paper里首先把图像切成16*16的小块，然后再把所有小块扔进一个全连接层里，这个全连接层就可以把每个小块变成token。为什么可以这样做呢？因为全连接层（不带任何激活函数，不带bias）其实就是一个矩阵乘法。你把一个16*16=196的向量乘以一个矩阵，然后把它变成一个token，这个操作本质上和NLP里的embedding是完全一样的。Embedding就是因为one\nhot encoding太长太稀疏，所以需要乘以一个可学习的矩阵，把它变为一个短并且不稀疏的token。\n\n卷积核为什么是3*3而不是2*2的：\n\n卷积核作为一个特殊的结构，当大小为奇数的时候，方便我们确定卷积核的位置，一般情况下，卷积核在源数据上的移动是以卷积核的中心点作为基准的，这个中心点非常重要。\n\n（1） 卷积中有一种same convolution，也就是卷积前后尺寸（高x宽）不变。实现same convolution（n + 2*padding -\nk + 1 = n） 。若 k\n为偶数，那么padding就为奇数，就不能平均分配到卷积张量两边。（2）此外，奇数尺寸的卷积核便于用中心定位。达到相同感受野的情况下，卷积核越小，所需要的参数和计算量越小。所以2×2排除了，一般都用3×3作为卷积核的大小。1×1的卷积核不能提升感受野，不能应用在需要提升感受野的应用中，也排除了。\n\n（2）Channel数如何选取？\n\n这与特征层的大小及能抽象出来的特征数量有关，特征层池化压缩后越小，图片的潜在的东西越复杂，所需要的深度或通道数越多。\n极端情况下，假设一个通道只放一个特征例如嘴的特征，那这个图如果为了做一定性能的脸部识别，有千多个特征，那深度可能要一千多个了；幸好一个通道可以不用池化压缩得太小，一个通道放多个特征也能满足卷积的要求。\n\n什么是过拟合，怎么解决过拟合\n\n不平衡数据怎么处理 focalloss的公式\n\n1.准确率，精确率，召回率。AP，AUC，TPR,FPR。都是什么，有什么意义\n\n2.在比赛中如何调节的网络\n\n3.学习率的优化\n\n4.优化器的选择（ADAM,Adagrad,RMSprop的区别和优点）\n\n5.卷积中的pooling和卷积核有什么区别\n\n6.为什么大部分网络都用卷积代替池化？为什么有的网络必须用池化而不是卷积？\n\n7.卷积size的公式\n\n8.使用过opencv的什么东西\n\n9.正则化的导数？L1 L2是怎么强化网络的\n\n10.不均衡数据除了focal loss还有什么方法可以解决\n\n11.transformer的positionembedding有什么缺点，有什么改进方法\n\n12.SNN的部署，怎么从float转变为int的？在片上怎么回传的（不需要回传，使用代理梯度，每个脉冲*weight累计到therehold才传播）\n\n13.多线程和多进程\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560939306211098624?sourceSSR=users",
        "title": "腾讯音乐后台开发(面试官太狗了） 一面 二面",
        "content": "时间线：10月底投递的简历，11月开始面试。过了笔试时间，没做笔试\n\n#### 腾讯一面\n\n两道题\n\n  1. 合并两个有序数组\n  2. 使用快排的方式，知道第K大的数（代码逻辑没问题，结果没有做出来） a. 快排最快时间复杂度是多少，最差时间复杂度是多少（没答出来，和他扯皮，拉跨）\n\n项目\n\n  1. 你说一下你负责的项目\n  2. 如何保障写入的数据不会冲突 a. 这个没有思考过（空气宁静了半分钟，拉跨）\n  3. 有没有想过你这个项目，如何提高写入磁盘的效率？ a. 这里没有答上来，说没有思考过\n\nC++\n\n  1. int a[10]; int *a = new int[10]; 的差别\n  2. C++11新特性你了解过那些，用过哪些\n  3. C++容器使用过那些（说自己实现过，加分）\n  4. 说一下静态多态和动态多态\n  5. 指针和引用的区别是什么\n\n计算机网络\n\n  1. 说一下TIME_WAIT的作用（卡了一下，说的第一个点不感兴趣，第二个点说让对端正常关闭——态度好些）\n  2. 说一下HTTPS和HTTP的差异\n  3. 说一下TCP的拥塞控制\n  4. select poll epoll的差别是什么 a. 源码看了多少（疯狂吹，说的他有点激动）\n\n数据库\n\n  1. 说一下乐观锁和悲观锁\n  2. 项目中用过索引优化吗（只说了explain）\n  3. 数据库主从同步了解过吗 （只说了一下binlog，不满意）\n  4. redis 的 缓存击穿、缓存穿透、缓存雪崩（不会，给我解释了一下）\n  5. 你知道你使用redis的版本吗？（不会，不满意）\n  6. 有没有思考过redis为什么更快（强答内存+数据结构，没说啥）\n\n操作系统进程和线程的关系，最大区别是什么\n\ngit和linux使用过吗\n\n● 熟悉那些命令\n\n○ 公司使用过find ps vim,说到top的时候（面试官很激动，说这个项目还是有实操经验的）\n\n反问\n\n  1. 公司技术栈是什么 a. golang\n  2. C++如何集合redis学习\n  3. 公司的业务部门负责什么 a. 腾讯音乐的广告部门（我疯狂点头，说我每天都看视频白嫖半小时音乐时间）\n\n#### 二面\n\n二面项目你实习过程中做了什么？\n\n为什么spdlog会比glog好\n\n异步写入的时候，有没有看过资源的问题\n\n这里保证服务的高可用指的是什么？\n\n问了一大堆场景问题，都不会\n\n问我有没有offer（字节三面刚刚挂了，说还在流程被他看出来了）\n\n题外话：面试官真的鸡贼，在博弈。太**菜了\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560933587177021440?sourceSSR=users",
        "title": "游戏客户端面经 完美世界（一面、二面）",
        "content": "# 目录/时间线\n\n  * [（返回汇总帖）](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F553531404814966784)\n  * 09121630 一面\n  * 09141530 二面\n  * 1027 流程结束\n\n# 09121630 一面\n\n总共47min。\n\n自我介绍。\n\n算法面试题\n\n  * 介绍一下数据结构中的堆\n  * 介绍一下堆排序的过程 \n    * 空间复杂度是怎样的\n    * 是稳定的吗\n  * 讲一下建堆的过程 \n    * 建堆是从哪个结点开始的\n  * 用两个栈实现队列\n  * 怎么判断链表有没有环 \n    * 接着刚刚的算法{哈希表}，怎么找到环的入口\n    * 可以讲下快慢指针怎么找环的入口吗\n\nC++\n\n  * 递归深度过深会出现什么问题\n  * 简单介绍一下什么是面向对象设计\n  * 知道多态的实现原理吗\n  * C++的类默认会有哪些函数\n  * 怎么阻止编译器创建默认的构造函数\n  * 子类和父类的构造函数执行顺序是怎样的\n  * 构造函数可以调用虚函数吗\n  * 子类的析构函数不是虚函数会有什么问题\n  * 怎么让类的所有实例之间共享数据 \n    * 静态数据成员会影响类的大小吗\n    * 如果静态数据成员是私有的，那么还可以通过类名限定访问到吗\n  * `new`和`malloc`有什么区别\n  * 内联函数的作用是什么 \n    * 有什么缺点吗\n    * 和宏有什么区别\n  * 了解右值引用吗\n  * 怎么将一个左值转换为右值\n  * 介绍一下STL\n  * `vector`和`list`的区别是啥 \n    * 对于插入和删除，哪个数据结构效率更高\n\n计算机基础\n\n  * 介绍一下线程和进程的概念\n  * 线程有自己的资源吗 \n    * 它共享了进程的哪些资源\n\n反问\n\n  * 这个岗位{游戏C++客户端开发}和另一个岗位{游戏UE客户端开发}有什么差距：不太确定\n  * 为什么这个岗位没有安排笔试：不清楚\n  * 有决定项目组分配吗：有，是MMORPG，用UE5开发的（后来在二面问到了——诛仙世界端游）\n  * 客户端的技术栈是怎样的：C++为主、Lua做界面、蓝图给策划用\n  * Code Review：之前有说要搞过，但没搞起来，只是偶尔看下SVN提交记录，但不会作为研发流程的一部分，因为目前研发工期还是比较紧的\n\n# 09141530 二面\n\n总共42min。\n\n自我介绍。\n\n项目\n\n  * 介绍自己做了哪些事情，以及做了哪些比较好的事情\n  * 详细介绍一下这些比较好的事情\n  * 对ECS是怎么理解的\n  * 采用ECS有什么好处\n\n实习\n\n  * 做了哪些工作 \n    * 做的还挺多的，就三个月期间内完成的吗\n  * 了解虚幻引擎吗\n\n计算机基础\n\n  * 堆内存和栈内存的区别\n  * 怎样降低动态创建大量对象的性能开销 \n    * 如果这些对象大小不一呢\n    * 这些不同粒度的内存池能合并在一起吗\n    * 有办法减缓内存碎片的负面效果吗\n\nC++\n\n  * `vector`在扩容时会对其内现存的对象调用拷贝构造和析构函数吗 \n    * “不会调用这些函数”这一事实，意味着有哪些需要特别注意的坑（答错了，事实上会调用到）\n\n算法面试题\n\n  * 给定1000x1000的二维平面，其中有大量半径为R的圆，要求能够快速查询给定的一条直线段与哪些圆相交了\n\n反问\n\n  * 项目的规模和进展如何：客户端加引擎差不多30人左右；在准备二测 \n    * 既然已经首测公开过了，那是什么游戏呢：诛仙世界\n  * 对正式员工会有什么形式的培训：公司层面不太清楚，项目内部会有指导、有导师指引\n  * 入职后大概会从事什么工作：主要是做Gameplay层的开发，从界面入手，然后到场景相关的。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560937735280672768?sourceSSR=users",
        "title": "美团客户端 一面 二面 面筋",
        "content": "#### 美团 一面\n\n实习：\n\n  1. 日志库的替换是自己的想的吗，为什么会加快这么多\n  2. 为什么使用protobuf作为压缩选择\n  3. protobuf压缩的原理是什么\n\n八股\n\n  1. 线程和协程\n  2. 进程通信的方式是什么\n  3. 线程通信的方式是什么\n  4. 死锁的条件是什么\n  5. tcp和udp的差异\n  6. HTTP中get和post的差异\n  7. http如何实现断点续传，如果这个时候客户端收到一般就结束了的话\n  8. https可以被中间人劫持吗\n  9. C++源码到可执行文件\n  10. 动态链接和静态链接\n  11. 指针和引用的区别\n  12. vector的扩容原理\n  13. 如何在高德地图、美团地图、百度地图来回切换\n\n代码题：\n\n    \n    \n    const int a;\n    int const a;\n    const int* a;\n    int* const a;\n    // 这些差别是什么\n    \n    \n    \n    int *a;\n    float *b;\n    float c;\n    long long d;\n    // 这些sizeof是多少\n    \n    \n    \n    struct A{\n    \tint* a;\n        char b[10];\n        int c;\n        float d\n    };\n    // 这个sizeof是多少\n    \n    \n    \n    char *s[3][5] = {\"a\",\"c\",\"grea\"};\n    // sizeof(s)的大小是什么\n    \n    \n    \n    #include <iostream>\n    using namespace std;\n    \n    class Base {\n    public:\n        // virtual void makesound() {\n        //     cout << \"Base is asking\" << endl;\n        // }\n    \n        void makesound() {\n            cout << \"Base is asking\" << endl;\n        }\n    };\n    \n    class Derive : public Base {\n    public:\n        void makesound() {\n            cout << \"Derive is asking\" << endl;\n        }\n    };\n    \n    int main() {\n        Base* b = new Derive();\n        b->makesound();\n        delete b; // Don't forget to release the allocated memory\n    }\n    \n\n#### 美团 地图 二面\n\n  * 写一下拷贝构造函数\n  * 写一下单例类\n\n题外话：还是第一次这样考C++基础的，不错\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560902612648730624?sourceSSR=users",
        "title": "6、面试软技能真的很重要",
        "content": "**hello大家好，我是达同学，一个在大厂工作三年的Java后端工程师。**\n\n这里是我们6篇文章的最后一篇：面试软技能篇。\n\n软技能的作用是什么呢？分享一个经历：当时有两个在技术上都相差不大的候选人，我们团队需要在他们中间选一个，当前团队内部定下来的筛选标准是：\n\n  1. 沟通能力：这两个同学在面试过程**是否可以流畅的沟通、表达** 。\n  2. 性格：团队偏向于招一些，性格不能太强势，也不能太听话的同学。也就是既可以把任务很好的完成，又有一些自己的想法，**不是接到任务就去执行** ，而是有**质疑任务** 的勇气。\n  3. 有没有团队协作的意识和经验。\n\n可以看出来，在大家的技术方面都差不多的情况下，软技能成为了能否通过面试的决定性筹码。\n\n这里我列举了我认为面试中最重要的几个软技能：\n\n### 心态\n\n关于心态，在前面几章里也有提过。我们在面试中应该有的心态是：面试不是考试！通过了也只不过是找个地方打工。所以，我一直强烈建议大家放下学生思维，不要神话面试官，就把这场面试当作和面试官的一次沟通，你通过和面试官聊天摸清市场行情冷暖和自身的一些短板，面试官通过和你聊天完成自己的kpi。\n\n而且其实面试官是非常希望面试者可以通过的！毕竟通不过就意味着又要面其他人了，又得加班[抱抱]。\n\n所以，大家在面试前一定要放平心态，把面试当作一场谈话去交流。\n\n### 沟通能力\n\n沟通能力这个词有点太宽泛了，对校招生来说，正常的交流一般都问题不大。有两个点大家注意下：\n\n  1. 不要面试官问一句话你就回答几个字，在我看来一场优秀的面试，面试官和面试者说话的占比应该在1：2左右。\n  2. 多提问少沉默，面试官问个问题，你说我想一想哈，然后就自己想5分钟，这种新手很容易犯的错误一定要避免！除非面试官说你自己想几分钟（有些算法的面试官会让面试者写出来再说思路）。在面试过程中多和面试官聊天，让他知道你的思考过程，这很重要！在第三章里我提到过我曾经在一场算法二面中没有写出来，但是通过沟通的方式让面试官认可了我解决问题的能力。\n\n### 问有价值的问题、挖有价值的坑\n\n应该很多同学都看到过一个建议——给面试官挖坑，引导他问你会的问题。这里我想强调的一点是，在面试中问的问题/给面试官挖的坑，要么可以给我们自己信息，要么要给到面试官好感。\n\n比如你算法写不出来，你问面试官自己的想法对不对，通过他的回答，你可以获得解出算法相关的信息。还有一种情况就是，你告诉面试官你觉得他说的某个知识点还有优化的空间，然后说你的优化思路，这就是通过自己的知识储备刷好感。\n\n反例就是质疑面试官的一些说法，但是又给不了足够优秀的解法，这种就变成给自己挖坑了。\n\n### 没有正确的道路，无论是某次面试还是某家公司\n\n无论面试通过与否、无论是不是拿到了心仪公司的offer，人生都没有绝对正确的道路，不要因为一次失利就灰心丧气。我工作三年，回头再看当年校招时认为正确的\"选择\"，其实很多都错得很离谱。无论大厂中厂小厂，我们都预知不了未来。5年前字节跳动可能还是一个中厂，10年前阿里在我们学校招聘很少有人愿意去。时代的洪流无法预知，而人生本来就是一场长跑，作为技术的同学，我们能做的就是持续学习技术，不断充实自己。\n\n最后，《6篇短文速通Java面试》这个专栏就在这篇里完结啦，这是我第一次用博客的形式公开分享经验，能收到这么多朋友的点赞和收藏非常开心，感谢各位！我会一直站在求职者的角度给大家带来有用面试知识。\n\n有想找我规划复习安排、辅导Java、修改简历的同学，欢迎私戳我。\n\n楼主本硕北邮计算机，在BAT某大厂工作三年。后续会持续和大家分享Java技术和职场经验，欢迎关注。\n\n欢迎关注专栏，本专栏已完结：\n\n《6篇短文速通Java面试》[https://www.nowcoder.com/creation/manager/columnDetail/j3Kwpj](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fgw-c.nowcoder.com%2Fapi%2Fsparta%2Fjump%2Flink%3Flink%3Dhttps%253A%252F%252Fgw-c.nowcoder.com%252Fapi%252Fsparta%252Fjump%252Flink%253Flink%253Dhttps%25253A%25252F%25252Fgw-c.nowcoder.com%25252Fapi%25252Fsparta%25252Fjump%25252Flink%25253Flink%25253Dhttps%2525253A%2525252F%2525252Fgw-c.nowcoder.com%2525252Fapi%2525252Fsparta%2525252Fjump%2525252Flink%2525253Flink%2525253Dhttps%252525253A%252525252F%252525252Fgw-c.nowcoder.com%252525252Fapi%252525252Fsparta%252525252Fjump%252525252Flink%252525253Flink%252525253Dhttps%25252525253A%25252525252F%25252525252Fgw-c.nowcoder.com%25252525252Fapi%25252525252Fsparta%25252525252Fjump%25252525252Flink%25252525253Flink%25252525253Dhttps%2525252525253A%2525252525252F%2525252525252Fwww.nowcoder.com%2525252525252Fcreation%2525252525252Fmanager%2525252525252FcolumnDetail%2525252525252Fj3Kwpj)\n\n附目录：\n\n[0、目标：Java大厂offer！如何复习Java——纲领篇](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F556965553601044480%3FsourceSSR%3Dusers)\n\n[1、定制合适的复习方案](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F556977228941123584%3FsourceSSR%3Dusers)\n\n[2、5分钟带你速通Java面试高频八股文](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F557350871567216640%3FsourceSSR%3Dusers)\n\n[3、写不出算法？不用慌！面试不是考试！](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F557682018394353664%3FsourceSSR%3Dusers)\n\n[4、场景题&系统设计题很简单，直接背套路！](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F557948698907418624%3FsourceSSR%3Dusers)\n\n[5、如何有深度的介绍项目](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F558456647572566016%3FsourceSSR%3Dusers)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560935519438270464?sourceSSR=users",
        "title": "小米安卓 一面 二面 三面 面筋",
        "content": "时间线：11月中旬\n\n#### 一面\n\n手撕\n\n  1. 三数之和（做的太快，加一题）\n  2. N皇后问题（确定好每一行的值，回溯处理，结合判断条件）\n  3. 单例类实现\n\n项目\n\n  1. 介绍一下你的项目\n  2. spdlog 和 glog是如何替换的\n  3. 数据压缩处理的一个过程\n  4. 池化操作的过程\n\n八股\n\n  1. tcp的三次握手，四次挥手 java\n  2. java的hashmap实现原理，红黑树的结构特点\n  3. java编译一般经过几个步骤 cpp\n  4. 指针和引用的区别\n  5. static和const的区别\n  6. malloc 和 new 的差别\n\n#### 二面\n\n项目：\n\n  1. 你这个怎么样cmake的\n  2. make -j4 多线程编译，你了解里面的原理吗\n  3. 编译的产物是什么\n  4. 你怎么样进行单元测试的\n\n八股：\n\ncpp\n\n  1. 说一下封装继承多态\n  2. 说一下STL的容器和特点\n\n操作系统\n\n  1. 线程和进程的差别\n  2. 进程通信的方式\n\nmysql\n\n  1. 说一下mysql事务的特点\n  2. 说一下死锁的特点，如何解决死锁，mysql有多少种锁\n\n  1. 实习和平时做项目有什么不一样的地方\n  2. 相比于其他实习生，你有什么优势\n  3. 如何看待安卓这个岗位\n\n手撕\n\n写一下快排\n\n智力题\n\n两次机会如何确定8个球中最重的那个，其他7个都一样重\n\n#### 三面\n\n  1. 介绍一下mysql的四种隔离级别\n  2. 可重复读是怎么样实现的？原理是怎么样的\n  3. mysql有多少种索引 a. 介绍一下B+树\n  4. 索引什么时候失效\n  5. mysql聚簇索引和非聚簇索引的差别\n  6. 接受一下TCP和UDP的差别\n  7. HTTP3.0使用UDP实现的，这个你具体了解吗\n\n题外话：感谢小米的面试官，面试体验真的很好\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560878003895508992?sourceSSR=users",
        "title": "金山办公面试全流程！爱山信山等山！",
        "content": "还记得约一面时就很坎坷了，当时金山打了几个电话我都阴差阳错地没有接到，还想着错过就错过了吧，后面国庆后又给我打了电话，感动+1。之后便是等待一面，还记得一面前一晚上到2点左右才睡着。金山的面试官都很好，一面安慰我让我不要紧张。在我秋招低谷的时候给我发了二面通知，感动+1；二面面试官给我讲学生进入职场的注意事项，指出我存在的问题，感动+1。二面后一直没有消息，慌得很，还好看到牛客其他bro主动去催，我也试了下找hr，结果直接约了隔天hr面，感动+1，hr面当成谈薪，感动+++。所以朋友们一定要主动！\n\n金山办公服务端开发工程师一面（10.11）\n\n面试体验非常好，面试官迟到了还给我道歉，一开始比较紧张还安慰我不用紧张\n\n  1. TCP为什么要进行三次握手连接\n  2. TCP为什么要进行四次挥手\n  3. 用什么工具做开发\n  4. C++四种强制类型转换\n  5. C++虚继承（答成虚函数了）\n  6. STL常用对象及其原理\n  7. 用过哪些数据库\n  8. 用的MySQL版本\n  9. 有用过其他的数据库和缓存吗\n  10. 有没有用过腾讯云之类的服务器\n  11. 为什么数据库索引要用B+树\n  12. Redis用过哪些数据结构\n  13. 有没有了解过其他的缓存数据库之类的\n  14. 在项目中用C++做了什么东西\n\n反问：\n\n岗位的业务：统招统分，还不知道。\n\n学习建议学习方法：问这个问题以后被看到了项目，又继续问了\n\n协程与线程的区别\n\n有写过测试来对比协程跟线程的实际情况\n\n协程调度会不会影响线程调度\n\n什么场景下使用线程协程\n\n什么情况下会发生死锁\n\n发展的想法和方向（职业规划）\n\n金山办公服务端开发工程师二面（10.24）\n\n  1. 说一下实习的一个需求\n  2. 针对需求提出一些问题：测试能否调用命令？函数是已有的还是我做的？\n  3. 脚本开发用了多长时间\n  4. 需求难点是什么\n  5. 做这个脚本的过程中有需要帮助的地方吗\n  6. 进程的状态有多少个，怎么转换？\n  7. 阻塞状态会发生在什么情况下\n  8. 杀死进程的shell命令 \n  9. 查看一个操作系统上的进程命令\n  10. 观察任务的实时执行情况\n  11. 第二个实习需求\n  12. 性能提升情况\n  13. 讲一下生产者消费者模式\n  14. 说一下面向对象的几个特性\n  15. 开发语言为go语言，能接受吗\n  16. 有没有学习过高可用或分布式知识\n  17. 有没有做过服务器上的优化（网络状态的优化，数据协议的优化）\n\n以上为技术，下面是一些综合能力\n\n  1. 项目人数\n  2. 上游跟下游的部门会有多少个\n  3. 在沟通的时候做哪些准备\n  4. 沟通四要素（问这个是我没想到的）\n  5. 实习任务紧张吗\n  6. 有没有出现交付不了的情况\n  7. 场景：一个任务，有经验的员工需要1个星期去完成，我需要2个星期去完成，我是一定完成不了的，接受到这个任务后会怎么做\n  8. 继续场景，做到一半，偏离轨迹，发现没办法交付，要怎么做（后面解释说问这个问题主要很多应届毕业生没办法交付的情况）\n  9. 给我讲一些道理：很多学生到职场没有转变过来，还是继续在单兵作战的状态，没有把团队看成一个可以依靠的对象，有什么问题得汇报给团队，并且说出自己需要的帮助，并且不只是做任务的执行者，也要承担起任务的拆解，调度工作了。职场第一件事是角色的转变，你既是被安排者也是安排者\n  10. 对实习公司游戏的目标是否清楚（营收目标，自己的作用和位置）\n\n就是是否了解自己现在做的需求是贴合公司的哪个目标的哪个步骤\n\n讲道理：不仅要知道开发技术，还要知道公司目标，自己的位置和作用，以及未来公司的阶段是怎么样的，任务无法完成会有什么风险，要多跟组长，同事打听目前公司的状态\n\n反问环节：\n\n  * 金山办公的业务：\n\n业务不是按区域划分的，整个公司围绕几块业务去做。金山办公，分别有toB和toC。toB重点保障安全可控，产品有面向企业管理的管理后台，包括日志，审计，功能开关，人员管理，文档安全流转；多端的在线预览和协作工具；会议、日历、待办、邮箱、知识库，企业人群，政企、民营。\ntoC稻壳，会员增值，pdf转word；系统后台：运营后台，广告投放、账号存储、容器云、部署\n\n挖出我的深一层的想法：我会被分配到哪个部门：答案是统招统分，入职培训三个月后根据表现\n\n  * 学习的方法和建议：\n\n稳扎稳打，深入技术；承接项目多一点需求，吃多一点亏，多一点经验；沟通、项目规划、风险预知的能力；不忘初心\n\n  * 如何主动承接项目需求，不是分配的吗？\n\n不仅是产品需求，还可以是技术上的需求，这里涉及到一个如何发现问题，解决问题的思路。除了产品需求，还有一些技术上的需求，要会发现和发掘，屎山越来越多，要学会优化需求；多了解同事在做什么，有哪些技术难点，如何优化\n\n金山办公服务端开发工程师三面（11.7）\n\n  1. 能否接受其他城市\n  2. offer情况\n  3. 校招投递了哪些行业\n  4. 还有其他公司在走流程吗\n  5. 从什么时候开始计划做服务端开发的\n  6. 技术栈是golang，能接受吗\n  7. 专业课程排名情况\n  8. 大学期间时间和精力的分配情况是怎么样的\n  9. 根据什么去决定是否参加这一类比赛\n  10. 项目性质是什么项目，个人练手还是团队\n  11. 怎么检验自己的项目学习成果\n  12. 实习经历是确定了方向才找的吗\n  13. mentor如何评估我的产出有没有达到要求，从哪些角度\n  14. 你对自己有小目标或者要求吗\n  15. 为什么会对自己有这些要求\n  16. 作为一个工程师需要关注哪些环节和内容\n  17. 职业规划\n\n反问：\n\n考核应届生的能力：专业基础能力，可塑性比较高*\n\n什么时候出结果：问我能不能接受转base，我说可以，当场口头oc！谈薪谈待遇，以及提交书面offer审核\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560833917394120704?sourceSSR=users",
        "title": "唯品会C/C++开发一二面",
        "content": "## **一面**\n\n  1. 自我介绍\n  2. 介绍项目\n  3. redis 数据结构\n  4. 实时排行榜的功能怎么做？（Redis， zset ，客户端去请求，服务端被动等待）\n  5. Redis在你项目里是怎么用的\n\n### 反问：\n\n对应届生有什么要求？\n\n先广度后深度，有了视野能更好的深入\n\n## **二面**\n\n  1. 多路复用这些是怎么学的\n  2. 写一下memcpy\n\n### 反问：\n\n有哪些需要改进的？\n\n多看外文文献，C++啥的巩固一下\n\n部门是做什么的？\n\nAI特征工程，业务相关\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560817441597661184?sourceSSR=users",
        "title": "京东实习",
        "content": "全程1H，记录一下\n\n1.自我介绍\n\n2.介绍项目亮点\n\n3.项目实现时棘手的问题\n\n4.HashMap线程不安全的原因及CurrentHashMap线程安全的原因\n\n5.jvm内存模型&每部分的作用及分代&GC\n\n6.双亲委派\n\n7.redis数据类型及分布式锁（有效时间之前出现故障---尝试把操作进行原子化）&redis事务\n\n8.redis缓存雪崩、缓存穿透、缓存击穿\n\n9.redis哈希槽\n\n8.简单介绍ES\n\n\\--转推荐\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560789847611293696?sourceSSR=users",
        "title": "如何通过面试？面试基本流程",
        "content": "专栏地址：[嵌入式面经地址](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fgw-c.nowcoder.com%2Fapi%2Fsparta%2Fjump%2Flink%3Flink%3Dhttps%253A%252F%252Fgw-c.nowcoder.com%252Fapi%252Fsparta%252Fjump%252Flink%253Flink%253Dhttps%25253A%25252F%25252Fwww.nowcoder.com%25252Fcreation%25252Fmanager%25252FcolumnDetail%25252FMJNwoM)\n\n如果是中小型公司，面试两次基本就可以了；如果是大公司，一般至少需要面试三到六次才能确定是否录用你。\n\n面试组成基本上是10%手写代码+20%基础问题+40%深挖项目+20%开放问题+10%聊人生。\n\n**手写代码是必要的**\n，一般会共享屏幕或者在指定oj上手写代码。除此之外面试中的手写代码还有一个目的就是看你的代码风格和debug能力，毕竟代码风格不是一朝一夕能养成的，面试官看你的代码风格也是能够看出来你是不是经常写代码，看你的变量命名是否合理等。经常写代码和不经常写代码的人代码风格完全不一样的。Debug能力更不用说，考察的就是你能否快速定位到bug，进而解决它。\n\n面试过程中有一些需要注意的地方：\n\n1、不要紧张，一般面试官也不会太为难你，为难你没有用处，面试关键是在最短的时间里确定你的水平，所以一般都会循序渐进，看看到底什么水平。\n\n2、一定要诚实，会就是会，不会就是不会，不要浪费面试官时间。说了谎话被发现，绝对gg，毫无疑问。\n\n3、对于编程题，就算不会，也要说思路，实际工作中，只要有思路，都可以解决。\n\n4、自己要多总结，多回顾。\n\n5、嵌入式考察的编程题，主要由字符串变换、链表的翻转和插入等。\n\n# 1 一面\n\n第一面都是基础技术面，就是考察面试者的基础，有时候也会问一下你的项目。一面是考察范围最广的一轮面试了，面试时间也比较长，大厂一面基本都在30-60分钟之间。\n\n面试开始的时候都会让你简单介绍一下自己，为什么明明简历上都写了自己的信息，还需要自我介绍呢，主要有以下2个原因：\n\n1、面试官很忙，没看你的简历。很多面试官本身就是公司的一些部门主管或者技术leader，他们本来就很忙，每天要处理很多的事情，可能他刚拿到你的简历没几分钟，HR就安排了这次面试。在你进行自我介绍的时候，他也可以看看你的简历，熟悉一下你的技术栈和项目。\n\n2、了解面试者的沟通能力，语言表达能力。面试官通过听你的自我介绍也能看到的你总结概括能力、逻辑思维能力等。\n\n一面最后的时候，面试官一般会问：你有什么要问我的吗？这个时候不要乱问，你可以问以下几个问题：\n\n1、你们部门在做些什么？如果自己很荣幸的能够进入贵部门会负责些什么？因为面试者就是这个部门的，通过他的回答，你也能够了解到这个部门正在做的产品和使用的技术。\n\n2、您认为我在哪些方面还存在着不足？如果面试官带有指导性的回答出了你的不足，你需要补充的知识点，这样就代表你这次面试差不多了，应该是能好好准备二面了；如果面试官直言不讳的说你很差或者基础太弱这样的话，你也就知道凉凉了。\n\n# 2 二面\n\n一般二面面试官都是技术 leader 级别的了。二面就开始考察你的实习/项目了，而一般中小厂可能将二面和HR面放在一起了。\n\n二面没有一面那么注重基础，会开始问你一些这个项目的细节部分。这个时候你就要跟面试官讲你精心准备的实习或者项目，一般都会是让你说一下你这个项目是用来做什么的？为什么会有这个项目？如何实现某某细节的，用的是什么技术和框架？一般面试官问你问题的都是他们擅长或者喜欢的技术点，所以你如果仔细讲述清楚并且能加入一些自己的思考会加很多面试分，比如当前这个项目还存在着那些不足，可以用什么样的技术去改进它之类的。\n\n# 3 三面\n\n三面一般都是综合面考察，并不是很在乎你的基础了，而是会考察你这个人的思维能力、分析能力等，将事务看清楚、看明白，提炼总结的能力，换句话说就是看你这个人是不是脑子够灵活，是不是够聪明。\n\n在三面过程中，还有一些问题是看你的抗压能力以及处理意外情况的能力，比如：\n\n1、分享一件你觉得压力比较大的事？你的压力从何来？你是如何克服他的？\n\n2、你长这么大以来遭受过的最大挫折是什么？你是如何克服它的？\n\n3、你取得的最大成就是什么？\n\n从面试官的角度来看，他问你经历过的最大困难是什么是真的对你所经历的困难感兴趣吗？不是的，这个问题的重点是在考察你面对困难时所做的思考和应对，是想看到你的努力以及解决问题的能力。\n\n# 4 交叉面\n\n如果求职者被HR告知要进行一轮交叉面或者加面一轮，基本是出自以下两个原因：\n\n1、前面三轮还不足以确定你的程度，需要加面一轮才能确定你的评级，才能最终给你定薪资。这种情况就属于比较危险的，如果交叉面没答好，很有可能前功尽弃。\n\n2、二种情况就是求职者过于优秀。加面一场，如果你答得不错的话，给你更高的面试评级，这也意味着SP、甚至是SSP。答得不好也不取消offer和降低原有的评级，这一点不需要担心。\n\n# 5 HR面\n\nHR面也重要，很多公司的HR权力是很大的，拥有绝对的一票否决权，即使部门主管想要你，HR不同意那也没有办法。\n\nHR面主要是看你对公司文化的理解和价值观的认同，建议在HR面前，先去了解一下公司的文化和公司的优势之处，这样在被问到为什么选择本公司的时候能够把自己对公司的了解和优势说出来，体现自己的诚意。\n\nHR面的时候也会问一些其余的问题，比如你的最大优点和缺点，这也是HR面试高频问题，大家最好提前准备好这个问题的答案，真的很高频。\n\n另外HR面会问你家庭情况，男女朋友情况，主要是确定你的稳定性，你到底会不会来。这里你就看情况回答啦。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560548265226256384?sourceSSR=users",
        "title": "长鑫设备岗面经",
        "content": "长鑫的设备不出意外是两面，两面内容高度相似。  \n1、自我介绍  \n2、聊天形式询问个人基本情况  \n3、对来合肥工作怎么看待  \n4、怎么看待长鑫  \n5、你的专业对设备岗来说有什么优势  \n6、询问对加班，夜班的看法  \n7、让你提问  \n基本上就这些，完了。面试体验提好的，面试官会开摄像头，全程微笑，语气温和。不会push或当面直接cpu你，说你哪儿不行。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560487457959976960?sourceSSR=users",
        "title": "得物一面",
        "content": "  1. 算法（二叉树中的最大路径和）\n  2. 详细介绍一下实习项目中的技术栈、难点\n  3. 如果想要查询出10w条订单数据，请给出你的方案设计 a. 分页查询 b. 索引查询（聚簇索引与非聚簇索引，覆盖索引） c. 缓存热点数据\n  4. Java反射机制 a. 在List集合中，如果类型不匹配能赋值成功吗？\n  5. Redis持久化机制 a. AOF日志过大该如何处理\n\nhttps://www.yuque.com/u32650730/gpc86r/ccem4uom1t0afbtf?singleDoc# 《9.得物》\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560445997323755520?sourceSSR=users",
        "title": "度小满后端实习面试",
        "content": "## 一面（12.1 25min)\n\n  1. 自我介绍，讲项目\n  2. 讲一下分片上传的实现方法\n  3. Redis里面怎么缓存mysql数据的\n  4. 我们工作室是什么形式的，在里面做了什么\n  5. 在老师课题组是怎么与甲方沟通的\n  6. MySQL的存储引擎有哪些，以及区别\n  7. 用过什么Linux命令，找到怎么查内存和CPU的吗\n  8. MySQL事务有哪几个级别\n  9. 讲一下Redis中字典的底层数据结构\n  10. 讲一下垃圾回收机制\n  11. 可以实习多久\n  12. 有用过其他语言没有\n\n反问：我有那些不足的地方\n\n感觉要挂，好几个问题回答的不是太好，也没有让我写题\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560235764915662848?sourceSSR=users",
        "title": "华为GTS前端面试",
        "content": "bg某985工科，本人比较菜，9月底投的，做了两次笔试踩线过才终于轮到面试，base地从广深改到上海，意外地居然入池了，从此化身华孝子许愿华为能给0offer选手一个归宿[顺利签约]\n\n## 11.29线上一面【40min】\n\n  1. 自我介绍，问了排名，有无科研成果，实习项目相关问题，遇到什么印象深刻的问题如何解决的？\n  2. 浏览器输入url到页面加载的全过程【面试官提醒要说得详细些\n  3. 浏览器的缓存机制，涉及浏览器是怎么存放缓存的，强制缓存的概念\n  4. position属性的值有哪几种分别介绍区别\n  5. css盒子模型\n  6. 隐藏页面元素的方法【听面试官说有7、8种，本菜狗只说了3种不太够hhh\n  7. 问了笔试三道题目，看成绩，让你介绍一下解题思路，问为什么当时没拿够分【回答了时间问题】，如果时间足够的话你会怎么做\n  8. 手撕：将一个带有小数点的字符串用千分位表示\n\n11点开始，面完十分钟出结果并告知下午14:00开始二面\n\n## 11.29线上二面【40min】\n\n  1. 自我介绍，问项目，什么最困难，印象最深刻，都有问\n  2. vue的生命周期\n  3. 介绍js的闭包，闭包是怎么样保存私有变量的？\n  4. 介绍js原型链\n  5. js作用域分别有哪些\n  6. 箭头函数的特性\n  7. var和let的区别\n  8. 手撕：输出数组中出现次数大于n/2【n是数组长度】的元素【如果用sort函数排列的话，注意要自己实现一个排序函数】\n\n面完十分钟左右出结果通知明早9点主管面\n\n## 11.30线上主管面【30min】\n\n  1. 自我介绍，重点问项目中个人的表现。比如举个例子遇到最大的困难是什么？怎么去克服的？【因为我有提到改变自己】为什么要改变？改变的机遇是？改变后你觉得收获到了什么？\n  2. 主打聊天，没问华为文化，主要是考察个人在面对问题时的心境和行动\n  3. 举个例子说说你的学习计划，最后有没有达成\n  4. 说说你遇到的最让你生气，委屈的事情，怎么解决的\n\n## 12.1入池\n\n问了hr大概两周左右给答复\n\n目前能够想起来的就是这些，期间问了不会的题目忘得一干二净了【悲，以后想起来再补充吧\n\n听说牛客许愿挺灵，保佑孩子收到华为的offer吧【双掌合十】[顺利签约][顺利签约][顺利签约][顺利签约][顺利签约][顺利签约][顺利签约]\n\n![](https://uploadfiles.nowcoder.com/images/20231201/182775930_1701442777022/C6916E65389700A718E544EFC9F165E7)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560181445755432960?sourceSSR=users",
        "title": "北京旺住科技有限公司-线下面试",
        "content": "# 北京旺住科技有限公司-线下面试\n\n**笔试：**\n\n#  最长不重复的字串，例如：输入pwwkew，输出：wke（leetCode上的题）\n\n# 树的中序遍历，\n\n# sql查询最多好友，给一张数据库表，里面是自己发送添加的朋友和被添加的朋友，查询拥有最多的好友的那个人是谁，思路：自己与自己做一个连接查询（join）\n\n**技术面试：**\n\n## AQS是什么？（高并发的东西）\n\nAQS定义了一套多线程访问共享资源的同步器框架，许多同步类实现都依赖于它，如常用的ReentrantLock。\n简单来说，AQS定义了一套框架，来实现同步类。\n\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429462460/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429474527/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429484171/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429491932/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429499626/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429505327/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429541217/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429548799/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429556528/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429587634/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429592743/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n## redis排序（zset）\n\nRedis zset（有序集合）中的成员是有序排列的，它和 set\n集合的相同之处在于，集合中的每一个成员都是字符串类型（String），并且不允许重复；而它们最大区别是，有序集合是有序的，set\n是无序的，这是因为有序集合中每个成员都会关联一个 double（双精度浮点数）类型的 score (分数值)，Redis 正是通过 score\n实现了对集合成员的排序。\n\n## Thread类位于java.lang包，JDK1.0引入。\n\n****\n\n##  java线程的锁(悲观锁和乐观锁的说明)\n\n1、悲观锁(Pessimistic\nLock)：对于同一个数据的并发操作，想的很坏，很悲观，都认为自己在使用数据的时候一定有别的线程来修改数据，因此在获取数据的时候会先加锁，确保数据不会被别的线程修改。别的线程想拿数据就被挡住，直到悲观锁被释放，悲观锁中的共享资源每次只给一个线程使用，其它线程阻塞，用完后再把资源转让给其它线程。此外阻塞、唤醒以及引起的CPU状态切换等处理悲观锁的机制会产生额外的开销，还有增加产生死锁的机会，另外还会降低程序的并行性。\n\nJava中synchronized关键字和Lock的实现类，以及数据库中的行锁、表锁、读锁（共享锁）和写锁（排他锁）都是悲观锁。\n\n2、乐观锁（Optimistic\nLock）：很乐观，每次去拿数据的时候都认为别的线程不会修改。所以不会上锁，只有在想要更新数据时候，去检查在读取至更新这段时间别的线程有没有修改过这个数据。如果这个数据没有被更新，当前线程将自己修改的数据成功写入；如果数据已经被其他线程更新，则根据不同的实现方式执行不同的操作（例如报错或者自动重试）。\n\n数据库实现乐观锁并不会使用数据库提供的锁机制。一般实现乐观锁的方式就是数据表字段增加版本号（version）或者是时间戳来实现，使用版本号是最常用的\n\n## 线程与进程的区别\n\n##\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429610360/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n## redis的五种数据类型\n\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429617313/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n##\n\n## 算力是指什么\n\n算力也被看作是一种资源，对于保护和运行分布式网络是至关重要的。\n\n![](https://uploadfiles.nowcoder.com/images/20231201/879830933_1701429623373/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560159261335068672?sourceSSR=users",
        "title": "同程旅行 前端开发",
        "content": "### 同程旅行 一面 （2023.11.30）\n\n##### 时间：30min\n\n##### base：苏州\n\n  1. 自我介绍\n  2. 盒模型如何设置样式？脱离文档流有哪些方法？\n  3. 说说var、let、const的区别？\n  4. 如果说我在函数里面，使用到了let 能够访问哪些地方？\n  5. ES6里面的this指向，相对于 ES5有什么区别？\n  6. 说下JS事件循环机制？\n  7. Node.js 如何封装一个接口？原生是如何做的？\n  8. Node.js 的事件循环 和 JS的事件循环的区别之处？\n  9. 如果说Vue2 迭代到 Vue3 需要做哪些改动，说说思路？\n  10. 使用到ES6里面的属性有哪些？ES6里面的解构是怎么样的？\n  11. H5如何实现微信小程序原生的振动等操作，说说思路？\n  12. uniapp 打包小程序的背后的原理？\n  13. 如果说现在有个支付宝小程序和微信小程序，调用支付接口的时候有些细微的参数差别，是如何来抹平的？\n  14. 是否发布过npm库，发布npm库有什么思路？可以谈谈？\n  15. 谈谈对webpack的Loader和plugin 是什么？应用场景是什么？\n  16. 实习经历中有关于webpack优化？具体做了哪些优化？\n  17. 目前需要你做一个发布的项目，如何可以最快捷的交付到我的手里？\n\n### 同程旅行 二面（2023.12.1）\n\n##### 时间：30min\n\n##### base：苏州\n\n  1. 自我介绍\n  2. uniapp 打包 小程序 和 H5 的一个区别，需要注重的点？\n  3. 一般写JS 和 Node里面写JS，有哪些注意的点吗？\n  4. uniapp 打包 APP 需要有哪些操作？整个步骤是什么？\n  5. 货拉拉那边所有的产出有哪些？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560132722702688256?sourceSSR=users",
        "title": "2024秋招，百度提前批测试开发工程师一面",
        "content": "## 前言\n\n大家好，今天回顾一下我当时的第一场大厂面试，这个面试对我的校招意义重大，是应聘大厂的起点\n\n## 过程\n\n  1. 自我介绍\n  2. 实习工作，开发流程，主要业务\n  3. 微信消息框测试用例，回答的太急，惯性思维的说了SQL、XSS注入（面试官表示：微信通过网络传输，使用socket或TCP/UDP，没有通过数据库交互，为啥用SQL注入），然后我说UI方面的错误提示，面试官反问，弱网、高并发、乱码、表情，我一开始以为就是文字输入，后面面试官提醒有图片、视频、语音、链接，长度限制、不合法内容，兼容性\n  4. 介绍开发项目（springboot包含springMVC）\n  5. 鉴权部分设计\n  6. 用户权限消息保存在哪里？ token\n  7. 登录后，调用接口怎么判断身份？（登录后，普通用户申请管理员接口）\n  8. 用户登录后，怎么保存他的状态\n  9. session和cookie的区别？ 存储位置，作用范围，使用逻辑，安全性，容量\n  10. 优先使用哪个，安全性、传输方式\n  11. Linux，项目部署在服务器上，查端口号，我脑子里都是文件目录查找.. netstat | grep port\n  12. 数据库，更新数据\n  13. 什么是索引？\n  14. 为啥有索引查询速度快？\n  15. 索引结构有哪些？ B-Tree，他一直提醒我查找快的数据结构-哈希\n  16. 数据库的隔离级别 四个级别，读未提交、读已交、不可重复读、串行化\n  17. 手撕，链表转换二叉树（有点思路但不多）\n  18. 反问\n\n## 总结\n\n面试小哥态度很好，我想不起来还一直在引导我，可惜我当时太菜了\n\n**欢迎点赞、收藏、评论，it's important for me.**\n\n**欢迎点赞、收藏、评论，it's important for me.**\n\n**欢迎点赞、收藏、评论，it's important for me.**[尴尬]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560104060037132288?sourceSSR=users",
        "title": "vivo图像算法工程师-实习面经（已oc）",
        "content": "# 一面 11.23（有些问题忘了） 44min\n\n  * 自我介绍\n  * 详细讲解下目前做的项目（diffusion相关）\n  * 为什么网络结构要这样设计\n  * 与ip-adapter有什么不同\n  * 有没有效果展示（展示了下效果，面试官说不错）\n  * 了不了解GAN\n  * GAN和diffusion的区别\n  * 了解模型部署相关的知识吗（不了解）\n  * 写题：\n  * 力扣-704\n  * 写一个含有三层卷积层的10分类神经网络，写出每层的shape输出\n  * 反问：\n  * 对我这次面试的评价和建议\n  * vivo有几面（2面）\n\n# 二面 11.24 13min\n\n  * 自我介绍\n  * 简单介绍下简历上的项目\n  * 有没有其他实习offer\n  * 个人评价\n  * 分享下对vivo的了解\n  * 反问：\n  * 什么时候出结果（1周内）\n\n## 总结：总体来说难度不算难，主要问项目，感谢vivo给我实习的机会。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560076551878975488?sourceSSR=users",
        "title": "中庸行者 - 华为编程真题题解",
        "content": "![alt](https://uploadfiles.nowcoder.com/images/20231201/644248237_1701399029315/A4F5E48572027B66E6ECFA2EF0A7C66A)\n\n给定一个m * n的整数矩阵作为地图，短阵数值为地形高度； 中庸行者选择地图中的任意一点作为起点，尝试往上、下、左、右四个相邻格子移动; 移动时有如下约束:\n\n  * 中庸行者只能上坡或者下坡，不能走到高度相同的点\n  * 不允许连续上坡或者连续下坡，需要交替进行，\n  * 每个位置只能经过一次，不能重复行走，\n\n请给出中庸行者在本地图内，能连续移动的最大次数。\n\n### 输入\n\n一个只包含整数的二维数组：\n\n    \n    \n    3 3\n    4 7 8\n    8 6 6\n    2 6 4\n    \n\n第一行两个数字，分别为行数和每行的列数; 后续数据为矩阵地图内容: 矩阵边长范围:[1, 8]; 地形高度范围:[0, 100000];\n\n### 输出\n\n一个整数，代表中庸行者在本地图内，能连续移动的最大次数。\n\n### 示例1\n\n    \n    \n    输入：\n    2 2\n    1 2\n    4 3\n    \n    输出：\n    3\n    \n    解释： 3 > 4 > 1 > 2\n    \n\n### 示例2\n\n    \n    \n    输入：\n    3 3\n    1 2 4\n    3 5 7\n    6 8 9\n    \n    输出：\n    4\n    \n    解释： 6 > 3 > 5 > 2 > 4\n    \n\n### Java 题解\n\n> 回溯\n>\n> 遍历每个位置做为起点进行回溯探索最大次数\n    \n    \n    import java.util.Scanner;\n    \n    public class Main {\n        public static void main(String[] args) {\n            Scanner scanner = new Scanner(System.in);\n            int m = scanner.nextInt(), n = scanner.nextInt();\n    \n            int[][] grid = new int[m][n];\n            for (int r = 0; r < m; r++) {\n                for (int c = 0; c < n; c++) {\n                    grid[r][c] = scanner.nextInt();\n                }\n            }\n    \n            Solution solution = new Solution();\n            System.out.println(solution.solve(grid));\n    \n        }\n    }\n    \n    class Solution {\n        int max;\n    \n        public int solve(int[][] g) {\n            this.max = 0;\n            int m = g.length, n = g[0].length;\n            boolean[][] vis = new boolean[m][n];\n            // 从每个位置作为起点尝试获取最大的移动步数\n            for (int r = 0; r < m; r++) {\n                for (int c = 0; c < n; c++) {\n                    dfs(g, vis, r, c, 0, true);\n                    dfs(g, vis, r, c, 0, false);\n                }\n            }\n    \n            return this.max;\n        }\n    \n        /**\n         *\n         * @param g 矩阵地图\n         * @param vis 访问状态\n         * @param r 当前所在位置行\n         * @param c 当前所在位置列\n         * @param times 已经移动的次数\n         * @param up 是否走上坡到达当前位置\n         */\n        private void dfs(int[][] g, boolean[][] vis, int r, int c, int times, boolean up) {\n            this.max = Math.max(max, times);\n            int M = g.length, N = g[0].length;\n    \t\t\n            vis[r][c] = true;\n            int[] dirs = new int[]{-1, 0, 1, 0, -1};\n            for (int k = 1; k < 5; \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560060776791162880?sourceSSR=users",
        "title": "秋招记录，某省属国企",
        "content": "新鲜出炉，记录一下第四家秋招，gxgd财务岗一面，应该是10月份左右网申的，11.17才收到系统的闪面，12.1进行正式的一面，面试以业务为主导，\n\n1.简单自我介绍（基本信息，在校成绩及实践活动，实习经历）\n\n2.实习为什么结束了，有没有想留在那里（答：回校上课，没有想留用在那里）\n\n3.介绍实习做了什么和感受（学到挺多东西的）\n\n4.实习不太满意的点和你的职业规划（系统测试不是我的理想方向，没说职业规划自己直接略过了。。。被反问说财务信息化系统和财务工作关系密切所以你是不喜欢什么什么？脑子好懵，连连否定）\n\n5.在实习过程中你的领导和同事对你的印象如何，用几个词简单概括一下（沉稳、细致、快速响应工作）\n\n6.在工作中表达能力，什么什么能力和数据整理分析能力很重要，说说你最擅长的能力是哪个（说了数据分析整理能力，在实习中做过）\n\n7.简历上介绍曾经做过财务报表分析，说说你认为哪些指标最为重要，四大能力最注重哪个（说了营运资金最重要，磕磕绊绊还说了固定资产很重要，被反问说利润表里的指标呢？盈利能力不重要吗？我答也很重要，偿债能力和盈利能力是我最为注重的，因为偿债能力对盈利能力的影响较大。。）\n\n8.有什么想问的（财务部门分什么模块、对应届生的培训机制如何）\n\n总结：答得是一团浆糊，没有一点有效输出，漏洞百出。。。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560036867110969344?sourceSSR=users",
        "title": "帆软软件(前端实习)",
        "content": "  1. 自我介绍\n  2. css中flex居中\n  3. js原型链\n  4. react fiber架构\n  5. react受控组件与非受控组件\n  6. 通过usestate来存储prop数据，当prop获取新数据时，state中数据会不会发生变化(不会) \n  7. react生命周期hooks\n  8. react为什么要用hooks组件来逐渐取代类式组件\n  9. react事件模型\n  10. vue2、3的区别\n  11. vue mixin\n  12. 展示项目\n  13. 设计一个弹窗组件需要注意哪些东西\n  14. 反问\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/560052257706844160?sourceSSR=users",
        "title": "每日股票价格 - 华为机试真题题解",
        "content": "![alt](https://uploadfiles.nowcoder.com/images/20231201/644248237_1701399029315/A4F5E48572027B66E6ECFA2EF0A7C66A)\n\n### 题目描述\n\n​\n给定某只股票连续N天的价格列表stockPrices，其中stockPricesi表示股票某天的价格，请生成一个新列表，对应位置输出为:要想等到股票价格上涨，至少需要等待的天数，如果股票价格不上涨，对应位置输出为0。\n\n### 输入\n\n第一行 表示第二行元素的个数N\n\n第二行为用空格隔开的整数，表示每天股票的价格\n\n其中0<N<=1000000每天股票价格为正整数\n\n### 输出\n\n输出为用空格分隔的长度为N的列表，对应位置为:要想等到股票价格上涨至少需要等待的天数\n\n### 示例1\n\n    \n    \n    输入：\n    5\n    33 34 14 12 16\n    输出：\n    1 0 2 1 0\n    解释： \n    stockPrices =[33,34,14,12,16]\n    当i=0时，stockPrices[0]=33,下次价格上涨stockPrices[1]=34，此处输出为1-0=1\n    当i=1时，stockPrices[1]=34,后续股票价格没有上涨，此处输出0\n    当i=2时，stockPrices[2]=14,下次价格上涨stockPrices[4]=16，此处输出为 4-2=2\n    当i=3时，stockPrices[3]=12下次价格上涨stockPrices[4]=16，此处输出为 4-3=1\n    当i=4时，stockPrices[3]=16,后续股票价格没有上涨，此处输出0所以输出为1 0 2 1 0\n    \n\n### 示例2\n\n    \n    \n    输入：\n    5\n    12 13 14 15 16\n    输出：\n    1 1 1 1 0\n    \n\n### Java 题解\n\n> 单调栈问题，\n>\n> 关键点：\n>\n>   1. 不使用 FastScanner 快读只能通过 40 %;\n>   2. 不适用快速输出只能通过 90 %;\n>\n\n    \n    \n    import java.io.*;\n    import java.util.LinkedList;\n    import java.util.StringTokenizer;\n    \n    public class Main {\n        public static void main(String[] args) {\n            FastScanner cin = new FastScanner(System.in);//快读\n            PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));//快速输出\n            int n = cin.nextInt();\n    \n            int[] a = new int[n];\n            LinkedList<int[]> stack = new LinkedList<>();\n            for (int i = 0; i < n; i++) {\n                int price = cin.nextInt();\n                while (!stack.isEmpty() && stack.peek()[1] < price) {\n                    int idx = stack.poll()[0];\n                    a[idx] = i - idx;\n                }\n    \n                stack.push(new int[]{i, price});\n       \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/559883123756998656?sourceSSR=users",
        "title": "腾讯云智实习面经",
        "content": "## 一面 5.9\n\n因为当时录音有点问题，只有自己的声音，所以面经只能通过自己的回答去反推面试官的提问了\n\n  * 自我介绍\n  * 学过 C++ 吗？\n  * 介绍项目\n  * 介绍一下 Activity 的生命周期\n  * Activity 上出现弹窗，生命周期如何？\n  * 什么样的资源会被系统回收（？）\n  * Activity 被系统回收，如何保存数据 / 恢复数据\n  * 介绍一下 Activity 的4种启动模式\n  * 自定义 View\n  * 介绍一下 Handler 机制\n  * RecyclerView 缓存机制\n  * HTTP 的完整请求过程\n  * HTTP 状态码（可能给了几个3xx的状态码要求说出含义）\n  * HashMap 和 HashTable 的区别\n  * 算法题（共享屏幕，自己开 IDE 写）：无序数组寻找中位数\n  * 反问：\n  * 笔试时候都是 C++，入职之后是否需要转语言？\n  * 招的是 Android 开发，为什么笔试会以 C++ 为主？\n  * 业务方向是什么？\n  * 是和 CSIG 联通还是和整个集团联通？\n  * 是否有 MT 带教？\n  * 是否有转正机会？\n\n云智的面试来的很突然，因为之前笔试的时候基本上都是\nC++，人都是懵的。面试的时候其实能感受到基本上全是硬八股，面试官问的也很硬，外加自己没准备好吧，学的也不够，没有后续再推进，包括秋招的时候也是直接挂简历（笔试都没有orz）\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/559880627110133760?sourceSSR=users",
        "title": "万物心选前端一面凉经",
        "content": "  1. 自我介绍\n  2. vue源码拷打\n  3. 是vue技术栈吧？熟悉vue2还是vue3？\n  4. 说一下更新data里面的值，视图是异步的还是同步的？\n  5. 有哪些方法可以获取异步更新后的dom呢？\n  6. 除了nextTick还有别的方法吗？\n  7. vue2 中重新赋值给一个数组，响应式会监听到吗？为什么？\n  8. vue2重写了数组哪些方法？\n  9. 为什么没有重写map、concat、filter等常用的api？\n  10. vue3中 ref() 声明后 .value是什么？\n  11. 依赖收集中，三元运算符 条件 ？ 依赖a ： 依赖b 是怎么进行依赖收集的？\n  12. 条件更改后，另一个依赖是如何处理的？（分支切换和cleanup\n\n3\\. 简历中的问题\n\n  1. 说说虚拟列表是如何实现的？\n  2. 针对快速滑动的解决方案？\n  3. 如何缓存dom呢？\n  4. 如何二次封装的axios\n\n4\\. 说说你上段实习中最有难度的，你是如何解决的？\n\n时间是二十分钟左右结束的，被源码拷打完脑子完全成浆糊了，什么都想不到[牛泪][牛泪][牛泪]\n\n总结：自己的vue源码了解还不够深，简历上的技术点也没有得心应手。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/559854601948655616?sourceSSR=users",
        "title": "360  C++一面面经",
        "content": "1、自我介绍\n\n2、简历里挑一个项目讲\n\n3、代码题，leetcode1222.可以攻击国王的皇后 (秒了)\n\n4、知道哪些c++11新特性\n\n5、虚函数的作用？\n\n6、C++中override关键字的作用\n\n7、构造函数是否可以是虚函数(解释原因)？\n\n8、虚函数是否可以使用static关键字？\n\n9、C++内存中堆和栈的区别\n\n10、为什么栈的效率比堆高？\n\n11、介绍二叉搜索树，平衡二叉树(左旋右旋操作)，红黑树\n\n12、介绍全连接层和卷积神经网络\n\n13、什么是梯度？\n\n14、反向传播时为什么会有梯度消失现象？\n\n15、反问，面试官说他们主要用c++和python语言\n\n总的来说基本都答出来了，最后面试官还反问我为什么不投算法岗.....怪我太菜咯\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/559876735857074176?sourceSSR=users",
        "title": "迪火实习面经",
        "content": "## 一面\n\n好像没找到录音记录，比较尴尬\n\n## 二面 4.14\n\n  * 先做一下自我介绍\n  * 项目中有使用过 Retrofit，看过它的设计结构吗？\n  * 说一下 HTTP 的连接过程：\n  * 就是 TCP 的三次握手四次挥手是怎么执行的？\n  * 刚刚提到的 GET/POST/DELETE/PUT 分别代表什么样的意思？\n  * 知道 HTTP 和 HTTPS 的区别吗？\n  * 什么是对称加密，什么是非对称加密？\n  * Java 的几种引用类型知道吗？\n  * 弱引用会不会被马上释放？\n  * 你说到了内存回收机制，它是怎么进行回收的呢？\n  * Flutter 有了解吗？有写过相关程序吗？\n  * 假设有一个商城的列表，可能每一行的显示内容都是后台配置的，可能是一个 banner 的图，也可能是一个2宫格/4宫格/6宫格，这种可以如何实现？\n  * 对自己有什么规划吗？\n  * 了解公司吗？\n  * 反问：\n  * 如果能实习，会负责哪一块的业务？\n  * 会有 MT 带教吗？\n  * 目前内部技术栈如何？\n  * 有转正机会吗？\n  * 什么时候可以来实习？大概能实习多久？\n\n迪火其实面试的感觉没有比心那么舒服，比心的面试官会顺着上一个提问很耐心的引导，并且拉出下一个问题，但是迪火这边就相对差一点点。这边的面试可能更像一些“大厂”一样，会有很“八股”的一些问题。\n\n不过总体而言，面试官还是很有耐心的，也比较可惜后面没有 offer 下来。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/559853209188048896?sourceSSR=users",
        "title": "中信银行软开技术面＋hr面面经",
        "content": "\\--------------------------------------------------------------------------------------------------------------------------\n\n中信银行软开中心一面（11月17日晚6：00-9：00；11月20日半天，一共一百七十人左右，放弃了六七十人，剩下一百一十人左右分两天面）\n\n中信银行软开中心面试前几天会拉群，给大家四个课题（四选一）进行技术考察。\n\n今年软开大概178个人进面，因为要做课题，面试前放弃了很多，估计能放弃六七十人。每个人规划的时间大概十分钟左右，不会卡时间，有很多到跟前放弃的，所以面试时间基本都会提前，我大概面了不到20分钟。\n\n1.先自我介绍三分钟\n\n2.然后面试官根据简历问一个技术问题\n\n3.把自己的课题共享屏幕进行展示。\n\n\\---------------------------------------------------------------------------------------------------------------------------\n\n中信银行软开中心hr面（11月30日下午14：00）\n\n11月29日收到了11月30日hr面的通知\n\n我们这个板块我知道的hr面的群有两个，每个群里25个人，进hr的一共50个人。\n\n面试的时候提前会排面试顺序，每个人10分钟左右\n\n先自我介绍，然后问本硕成绩排名，是否有挂科违纪，家是陕西的为什么去北京？之前遇到过什么有挑战的事情并且自己是怎么解决的？之前在团队中一般扮演什么角色？目前手里还有哪些offer？对户口的需求如果从0到10打分，打几分？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/559817483071283200?sourceSSR=users",
        "title": "航天科工热设计工程师岗面试氛围非常满意，感觉非常轻松和活跃",
        "content": "在一面面试中，我进行了自我介绍，\n\n并被问到是否了解服务器、操作系统和网络等基础知识。\n\n他们还询问了Python和Shell之间的区别，\n\n以及我的项目经历和如何理解MapReduce架构。\n\n在二面面试中，我再次进行了自我介绍，\n\n并被要求详细描述在某一项项目实践中的具体实现过程。\n\n此外，他们还让我编写了一个单链表的查找和删除方法，\n\n并询问了static关键字的作用。\n\n整体来说，我对航天科工公司内部的氛围非常满意，\n\n感觉非常轻松和活跃。\n\n这是一家令人向往的公司。\n\n希望能够顺利进入下一轮面试，为此我会继续努力准备。\n\n一旦有进展，我会及时更新情况。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/559871876974002176?sourceSSR=users",
        "title": "比心实习面经",
        "content": "## 一面 4.12\n\n  * 简单做个自我介绍\n  * 介绍一下简历上的项目\n  * 之前有面试过其他公司吗？\n  * 介绍一下 Activity 的生命周期\n  * 刚刚提到了横竖屏切换，它的生命周期是怎么样的？\n  * Service 启动方式有两种，分别是什么？区别在哪里？\n  * 你在项目中对于网络请求使用到了Retrofit，说说你对它的认识：\n  * 你使用它的过程（怎么用）\n  * 对它的一些理解\n  * 刚刚你说到了数据请求完之后，把数据传递到主线程上去渲染UI，这个过程你使用了什么？\n  * 你提到的协程的 suspend 是什么东西呢？\n  * 协程和多线程/线程池有什么区别？\n  * 你对 Handler 熟悉吗？简单谈一谈，比如：\n  * Handler 由哪些部分组成\n  * 每一块是什么样子\n  * 它有什么作用\n  * 我们经常会问一个东西，Handler 会造成内存泄漏，那我们在使用/创建 Handler 时，是直接 new 一个 Handler 对象吗？\n  * 项目中是一直使用 Kotlin 吗？有没有使用过它的一些扩展函数？\n  * 像 Java 中的一些集合，比如 HashMap，有了解吗？\n  * 我们在计算 K-V 在 HashMap 的初始位置时，为什么会需要右移\n  * Java 的反射会用到吗？说一下它的使用过程\n  * 计算机网络学的怎么样？说一下 TCP 的三次握手\n  * 发起网络请求的时候，是如何通过域名找到对应服务器的？\n  * DNS 的解析过程是什么样的？\n  * DNS 请求使用的是 TCP 还是 UDP？\n  * UDP 不可靠怎么办？\n  * TCP 滑动窗口是什么？\n  * 平时写算法吗？讲一下快排的原理\n  * 反问：\n  * 八股面经容易忘，有什么方法可以提升/在面试时有更好的表现？\n  * 网上面经都是大佬居多，不知道自己到底实际属于什么样的水平，如何判断？\n  * 面试目前竞争激烈吗？\n\n## 二面 4.13\n\n  * 简单自我介绍一下\n  * 看到了简历上的 *** 项目，简单介绍一下：\n  * *** 官方已经有了相关功能了，为什么还是想要自己造轮子？\n  * 对相关的推送服务(Android)有了解吗？\n  * 简历中另外两个 Android 的项目都是自己学习过程中做的吗？简单介绍一下：\n  * 项目是什么？\n  * 学习到哪些东西？\n  * 过程是怎样的？\n  * 做项目和学习 Android 的渠道有哪些？\n  * 是怎么第一次接触到 Android 开发的？\n  * 做项目和学习过程中，觉得遇到的最大的挑战是什么？\n  * 为了解决某一个比较难的问题，大概持续了多长时间？\n  * ChatGPT 最近比较火，有了解吗？\n  * 对职业发展有规划吗？比如：\n  * 技术方面\n  * 行业方面\n  * 觉得自己的优势和劣势是什么？\n  * 反问：\n  * 面试有几轮？\n  * 是否有 MT 带教？\n  * 短期来看，学习 Android 需要从哪一方面再去下手深入学习？\n  * 入职之后可以和您继续沟通交流吗？\n\n距离和比心的这两次面试已经过去很久了，现在回过头来去看比心的两位面试官当时对我的拷打还是很温柔的，而且第一位面试官还很耐心的为我讲解了 Handler\n相关的知识，也聊了很久并且给了很多的建议，总的来说体验感真的很不错。\n\n可惜后面因为我个人的原因没有去成比心，但是就这次体验而言，我觉得比心绝对很值得点赞，也希望能够给后面的同学一点小小的参考，同时也再为当时的两位面试官安利一下这家公司~\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/559816554351726592?sourceSSR=users",
        "title": "小米热设计工程师岗面试经历非常详细且全面，面试官也挺好的",
        "content": "在面试前，我提前进入了会议室等待，不料面试官也提前进来并开始了面试。\n\n整个面试过程持续了近50分钟，约为46分钟左右。\n\n一开始，我进行了自我介绍，并介绍了我的毕设项目。\n\n随后，他们针对这个项目进行了提问，询问了项目的难点以及我是如何解决的。\n\n接着，他们根据我的简历上的其他项目一个一个进行了提问，\n\n询问是否是独立完成的，与甲方对接是否存在分歧以及如何解决的。\n\n面试官还关注了我在简历上写的技能，让我打分说明自己的掌握程度。\n\n他们还问到了我与导师沟通的频率，询问我主动与导师沟通的比例有多大。\n\n此外，他们也问到了我发表了很多篇论文是如何做到的，以及我的个人爱好和家庭情况。\n\n他们还询问了我对手机散热的认识以及对小米的了解。\n\n还有一些问题涉及了热力学的知识，\n\n例如传热系数和导热系数的定义范围，以及通常的取值范围。\n\n他们也问到我是否面试了其他公司，并询问了我的项目经验和技能能否迁移到热设计岗位上。\n\n关于职业规划和入职概率的问题也被提及。\n\n另外，他们问到我担任班长期间学到了什么，以及课题组师兄的工作情况。\n\n面试官还询问了我的意向城市，我依次提到了北京、深圳和上海，并问到我是否打算在北京定居。\n\n他们还问到我更喜欢从事系统内还是系统外的工作。\n\n最后，轮到我提问了。我询问了加班强度的情况，并询问了多久能够得到面试结果。\n\n他们回答说通常至少需要三轮面试，包括技术面试、主管面试和人事面试。\n\n如果没有通过，结果会很快出来；如果通过，则可能需要一两周时间，\n\n因为他们目前面试的数量非常多，简历也很多。\n\n整体来说，这次小米的面试经历非常详细且全面。\n\n尽管有一些问题记不清楚了，但面试官对于项目经验、技能评估和个人背景都进行了深入的探讨。\n\n期待能够收到小米的面试结果，同时也会继续寻找其他机会来实现自己的职业规划。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/559815653293568000?sourceSSR=users",
        "title": "江铃汽车热设计工程师岗面试给我留下了较好的体验，感觉很有诚意",
        "content": "在面试过程中，进行了自我介绍，并被要求对江铃有一定的了解，以及对应聘岗位的认识。\n\n此外，还涉及了个人性格特点的讨论。\n\n面试过程中，他们提到了工作地点离家的距离以及对于加班的接受程度。\n\n还有一部分面试内容是用英语进行的，他们要求我用英语进行自我介绍。\n\n此外，他们还询问了我做过几个项目，并发表了几篇论文。\n\n他们也问及了我是否参加了其他公司的面试，以及学校何时能够提供三方协议。\n\n在面试过程中，我也利用提问环节询问了工作强度和薪酬情况。\n\n整体来说，江铃汽车的面试给我留下了较好的体验，感觉很有诚意。\n\n然而，基于地理位置、薪酬和对比其他汽车公司的发展，我决定拒绝后续的技术面试。\n\n非常高兴地分享，我最终获得了某大型央企的双向offer。\n\n这次机会让我备受欣喜，同时对于薪酬方面也产生了一些思考。\n\n根据网上的薪酬信息，一线城市的薪酬大约在22万左右，\n\n这让我不禁担心自己是否买得起房子。\n\n希望我的选择能够为我带来更好的职业发展和生活质量！\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/559814850969374720?sourceSSR=users",
        "title": "潮州三环热设计工程师岗面试有两位面试官，问题涵盖了多个方面",
        "content": "整个面试过程中，有两位面试官，其中一男一女。\n\n女面试官在整个面试过程中提出了问题，而两位面试官都在记录我的回答。\n\n面试问题涵盖了多个方面，包括自我介绍、优缺点、与导师的关系、\n\n在学校的生活作息、个人爱好、家庭情况、就业选择等。\n\n此外，还涉及到对工作地点和工作强度的接受程度，\n\n是否投递了其他公司以及是否考虑大型国企或公务员的可能性。\n\n同时，还问及了我一作论文的数量以及意向工作城市的选择依据。\n\n他们还询问了父母对于工作地点和工作选择的看法。\n\n在面试结束时，他们给了我提问的机会。\n\n我提了一个关于新人离职率的问题，但没有得到明确回答。\n\n只是被告知今年优化了转正流程，并取消了转正答辩环节。\n\n很高兴能够获得潮州三环的提前批第二个offer，尤其是在工资方面有所突破。\n\n尽管工作地点和工作安排可能存在一些不方便之处，\n\n但HR人员非常友好，并明确表示可以先与两方达成一致。\n\n这次面试经历使我更加期待能够加入潮州三环，并为公司的发展做出贡献。\n\n希望我能够在这个岗位上实现自己的职业目标！\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/559814062666805248?sourceSSR=users",
        "title": "北京奔驰热设计工程师岗面试问题相对简单，但需要展示个人优势",
        "content": "我参加了北京奔驰热设计工程师的面试。\n\n这是一家知名汽车公司，而热设计工程师则是负责车辆热管理和散热系统设计的重要岗位。\n\n面试分为两个环节：HR面试和业务面试。\n\n在HR面试中，主要进行了英文对话交流，询问了我的offer情况、\n\n为什么想来北京、自我介绍以及对于工作方向的期望。\n\n这个环节主要考察我的英语表达能力和对于职业发展的规划。\n\n而在业务面试中，首先进行了英文介绍，然后介绍了我所做的论文和专利。\n\n此外，还涉及到了人际关系题，要求我说出三个自我特质，\n\n并且阐述最不能忍受领导的缺点。\n\n最后还有一个反问环节。\n\n整体来说，面试问题相对简单，但也需要充分准备和展示个人优势。\n\n这次面试给我留下了积极的印象，同时也鼓励其他应聘者加油。\n\n希望我们都能取得理想的结果！\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/559813311835955200?sourceSSR=users",
        "title": "禾赛科技热设计工程师岗面试感觉还不错，问题也比较基础",
        "content": "我参加了禾赛科技热设计工程师的面试，\n\n很高兴能够分享一下面试问题的重点。\n\n以下是一些我被问到的问题：\n\n1.结构网格和非结构网格的区别和特点。\n\n2.CFD（计算流体力学）中边界条件的设置。\n\n3.圆管内流动的临界Re数是2000，在采用英制单位时应该是多少？\n\n4.辐射传热和辐射换热的区别。\n\n5.风洞和热源之间的换热方式。\n\n6.关于个人情况、简历以及与技能相关的问题。\n\n这些问题涵盖了热设计工程师所需的基本知识和技能。\n\n回答这些问题需要对相关概念和原理有一定的了解和掌握。\n\n在面试结束时，我希望能够表达对于获得禾赛科技的offer的期望。\n\n我衷心希望在这个岗位上有机会展示我的才能，并为公司的发展做出贡献。\n\n让我们共同期待好运，希望能够获得这个宝贵的机会！\n\n"
    }
]