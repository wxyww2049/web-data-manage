[
    {
        "url": "https://www.nowcoder.com/discuss/513286985864187904?sourceSSR=users",
        "title": "小米 前端开发一面  2023.7.24",
        "content": "base北京 时长：60min 日常实习 （没收到笔试，直接进面）\n\n  1. 自我介绍\n  2. 说说你为什么选择前端\n  3. 介绍一个你觉得最有困难的、收获最多的一个奖项\n  4. 介绍一个开发流程最规范的项目\n  5. 说说盒模型\n  6. 手写三栏布局\n  7. 看代码说结果 事件循环\n  8. 看代码说结果 原型链和原型\n  9. 还有一题 有点忘了.....\n  10. 遍历树 面试官很好，当我说错的时候，会给我讲正确答案和解题思路，最后也给了学习建议和推荐书籍。小米是梦中情厂，实力不够进不去。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/513117345481494528?sourceSSR=users",
        "title": "7.24 百度提前批一面 前端凉经",
        "content": "> 常规八股就不发了，发点不会的大家一起讨论一下吧，欢迎佬们指教！[喝可乐][喝可乐]\n>\n> 面试官的问题都是循序渐进上来的 也会讲一下答案，当时身体不太舒服状态不是很好（状态好也过不了）\n\n  1. flexible.js它的内部是做了什么\n  2. 这个转化是在浏览器端还是在编译的时候？\n  3. 缩放的时候会改变页面中所有元素的字体大小吗\n  4. postCSS是干什么的\n  5. 那postcss在编译的时候还是在浏览器阶段？\n  6. 浏览器它加载资源的时候先是HTML然后是CSS最后才是JS，JS肯定会慢一些比如说字一开始文字是小的，然后jS加载完会变大，如何避免这个抖动？\n  7. 不定宽高的弹窗组件如何垂直水平居中（垂直水平居中的变形吧，但是涉及到一个父元素的问题，答了常见方法，没有具体考虑到）\n  8. 这个弹窗组件用在一个列表组件里边，那么相对定位不就不能解决上面说的弹窗问题了？【终于听懂了，然后说用vue3的Teleport】\n  9. 不是vue3呢？\n  10. 接口超时错误如何处理【promise.race？】\n  11. webpack如何配置多入口页面？【没接触过，大概是这个意思，一开始没提到webpack，我说配置多个出口】\n  12. （微信、百度、支付宝）小程序上层框架有没有了解?原理是怎么样的【用的原生开发...没接触过】\n\n> 没有问算法，没有反问，给了一下建议然后就感谢我的时间了。\n>\n> 最近真的挺焦虑的，希望大家也多注意身体。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/513069046397444096?sourceSSR=users",
        "title": "2024万得wind提前批前端面试",
        "content": "背景：9硕 前端 3段实习  \n  \n7.11 A/B面  \n两个面试官，各半小时，总共一小时  \n纯八股题，无手写算法  \n  \nA面试：  \n自我介绍  \n实习项目  \nUrl输入后发生了什么  \nlet var const区别  \nEs6  \n缓存相关  \n没了。。一共30分钟，20分钟面试，最后10分钟说一起聊聊天吧  \n  \n接下来就是等待B面试官  \nB面试：  \n自我介绍  \n实习项目  \nReact hook是什么  \n用与不用hook的区别是什么  \nreact的生命周期  \nVue与react的区别  \nwebpack原理，能讲多少讲多少  \n有没有实际工作中用过webpack，vite  \n除了前端相关语言还会什么其他语言  \n  \n7.13发了套笔试题，难度力扣中等，4-5天内交，也太宽松了。。。  \n  \n7.18HR面试  \n  \n一周内给意向情况，会及时更新  \n  \n  \n  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/512257122206298112?sourceSSR=users",
        "title": "面经记录|社招|22届被裁找工作中",
        "content": "2023本命年真的,健康 + 事业 +\n感情三座大山直接差点没把我干废。51前离职，躺了三月要开始找工作了。在这里写面经来督促自己,也希望能够帮助大家。另外各位有什么工作求职问题的话，评论区也可以问我，大家相互解答。\n\n——8.27 日的分割线——\n\n拿到百度网盘的offer了,下周一入职了，最近面试真的面吐了,兜兜转转还算是拿到了一个比较满意的offer,从7月初开始一直到8月底，拿了3个游戏公司的offer,华为od,还有好未来一直在offer审批,美团前几天hr面试完等通知,百度网盘oc。感觉自己这上半年也是经历了许多事情，自己也没有想到自己真的熬过来了。面经还有一些没来及写，后续有时间的话可以补上，如果对大家有帮助的话。我相信应该有挺多人正在经历我曾经经历的，大家有需要啥经验的我们可以互相分享，我在能力范围内给大家尽量解答。失业很容易给人带来焦虑和难过，越是这个时候越是要珍惜你身边的人，给他(她)一个拥抱,感谢对方一直都在。\n\n——8.14 日的分割线——\n\n下午百度网盘三面还是有点紧张，最近面试一面二面挂了不少，面的都有点自闭了，许愿能过吧\n\n——8.03 日的分割线——\n\n美团买药｜一面 | Java开发｜北京｜2023.08.03\n\n1.介绍下认为有难点的项目\n\n2.阻塞队列了解么,用数组设计一个阻塞队列\n\n3.go中有线程池么，讲讲java中的线程池,核心线程数怎么设置\n\n4.10000个小任务给线程池来执行，处理的时间很长，怎么优化\n\n5.讲讲mysql的索引,为什么快\n\n6.联合索引abc , ab cb什么样能用到索引，什么样的用不到\n\n7.cpu利用率暴涨怎么排查怎么处理\n\n8.算法题 : 最长回文字符串 (好像哪个变量写错了，一直没调通，写完了就讲了下思路)\n\n——8.01 日的分割线——\n\n昆仑万维收到offer了，做游戏的一家上市公司\n\n华为od｜二面 | java开发｜上海｜2023.08.01\n\n1.自我介绍\n\n2.介绍参与项目，产品定位，包括和周边服务的交互，然后所负责的模块，用到哪些中间件\n\n3.大key的优化效果,量化的指标\n\n4.冷热key的问题怎么处理\n\n5.提供的服务是否有针对API进行分级的控制\n\n6.go语言开发的流程,怎么做本地代码的开发调试工具支撑，团队协作上面大家是怎么协作\n\n7.算法题:\n\n某设备有一个线程池调度特性，现给一个任务安排的时间数组，每个任务时间都会包括开始和结束的时间[[s1,e1],[s2,e2],...](si <\nei),为避免线程冲突，并充分利用线程池的资源，请你给调度特性计算至少需要使用池中的多少个线程，才能满足这些任务执行。\n\n示例\n\n输入：[[0,30],[5,10],[15,20]]\n\n输出: 2\n\n解释: 任务0的时间周期为[0,30],独占一个线程；任务1使用另一个线程，等任务结束后，可以继续执行任务2.所以合计使用两个线程即可。\n\n昆仑万维｜hr面 | 后端开发｜北京｜2023.07.31\n\n——7.30 日的分割线——\n\n新片场｜一面 |后端开发go方向｜北京｜2023.7.27\n\n全程问的都是go的基础知识\n\n1.go 里面的 go 是有channel。go， go 的 channel 是可以重复关闭的吗?\n\n2.你能具体的给我解释一下你们的业务代码都写一些什么功能，然后你是怎么去实现的\n\n3.make 方法它的每个参数都什么意思吗\n\n4.可以把那个 int 那个切片，那个那个那个 int 类型的切片换成 map 吗？\n\n5.a,b两张表 select * from a join b, a表5条记录 b表5条记录,这个语句能够执行成功么，一共有多少条记录\n\n6.问github的地址，发现账号没有登录上名字也忘记了 (尴尬死了)\n\n——7.26日的分割线——\n\n九鼎无双拿到offer了~ 办公环境据说是在全北京最好的写字楼。福利就是管两餐，要30%涨幅不给，最后给了10%左右的涨幅。\n\n——7.26日的分割线——\n\n昆仑万维｜二面 |后端开发｜北京｜2023.7.26\n\n1.深挖项目\n\n2.RocketMq怎么保障数据可靠性\n\n3.Redis 一般情况下我们用的时候估算它的容量，单机性能会达到多少\n\n4.Redis里面的数据结构zset是怎么实现的\n\n5\\. KV 的map，其实有两种，一种是这种就是你有序的，再有一种是无序的。嗯，它分别底层又什么数据结果实现？有序的是指我去遍历的时候，它是按照 k\n有序的，我写的时候就是，有序的map。\n\n6.算法题 : 二叉树返回镜像，不能用递归的方式\n\n——7.25日的分割线——\n\n快手商业化｜二面 |后端开发｜北京｜2023.7.25\n\n1.深挖项目分片库迁移 （第二个项目没有准备好，感觉答得很一般），以及设计的限流算法。\n\n2.常见的限流算法\n\n3.redis的单机性能瓶颈\n\n4.算法题 ：合并n个有序链表 (用的方法是前两个链表合并，然后合并的结果再和下一个合并,循环)\n\n昆仑万维｜一面 |后端开发｜北京｜2023.7.25\n\n面试的好像是个C++岗位。。。\n\n1.聊项目\n\n2.存储方面你有了解吗？就比如说像 rocker DB 相关这些 rocker DB\n\n3.算法题: 矩阵二维数组匹配字符串\n\n4.反问阶段\n\n——7.24日的分割线——\n\n快手商业化｜一面 |后端开发｜北京｜2023.7.24\n\n1.算法题: 最长公共子序列 (没做出来，给换了一道)\n\n2.算法题: 合并有序链表\n\n3.聊项目\n\n4.RocketMQ的数据存储格式是什么样的\n\n5.联合索引跟非联合索引它在这个存储上有啥区别？联合两个主键，两个主键和非两个主键在存储上有什么区别？它的叶子节点跟非叶子节点都存在一些什么内容？\n\n6.然后在查询的过程中，假设中我有两一列两列 a 跟b，然后 a 跟b，那么我要单独查 a 这列的话，它会走索引。\n\n7.MySQL分布式事务\n\n8.场景题: 多个RPC， 第一个RPC 服务写一个数据，第二个 RPC 服务也去写一个数据，然后当第二个 RPC 服务失败了之后要去回滚第一个 RPC\n的这个结果,怎么处理\n\n9.Mysql的隔离级别\n\n10.Java多线程的话，线程池有几个参数，核心线程数和最大线程数一般怎么设置\n\n11.JVM了解么\n\nMiniMax｜一面 |后端开发｜北京｜2023.7.24\n\n面试官原来是tiktok的，水平很高，整个过程中思路很清晰。\n\n一开始就介绍了面试流程。总共大概是会持续一个小左右。分成三部分，第一部分会问之前做的项目然后问项目里面做的一些事情，以及一些技术点。然后第二个部分算法题。然后第三部分相当于我们面试结束了，反问阶段？(大家以后有机会做面试官也可以参考)\n\n1.介绍项目,根据项目中使用的技术点问八股\n\n2.思考题: 那假设一种高热的数据它突然之间过期了，怎么预防这样的情况？你就那比如说恰好这一秒钟我过期了，正好这一秒钟有一两万个QPS。\n\n3.思考题: 我有本来有百的机器，我要扩到150。那在 50 台新起的这个机器上面是没有 local CACHE\n的，那如果说这个时候有请求爬到他上面来，那是不是就完全直接就会怼到后面的中间线上面去？这种问题怎么去避免？就比如说尽量让它柔和一点？\n\n4.思考题: MQ 的 rebalance问题,消费停止\n\n5.思考题: 新启一个rpc服务。然后我想把这个服务起来，然后你是我的上游，你要起一个客户端，嗯，就是然后发一个 PIN\n请求到我这个服务上。嗯，然后我这个服务器接收到你的 PIN\n之后发一个空给你。能跟我大概讲就是，嗯，这个过程当中会涉及到哪一些基础组件，以及每个基础组件的功能是什么吗？\n\n6.Abase的实现原理...\n\n7.一道算法题 : 刚开始有点懵,就是小明喜欢看球赛，但是因为比较忙每段时间才能看一眼比分 ： 0:0 ， 1:2 3:2\n问中间可能出现平局的情况最多有多少种\n\n8.问面试的岗位主要干啥\n\n——7.23日的分割线——\n\n华为od｜笔试 |后端开发｜北京｜2023.7.23\n\n一共三道题，前两道每道100，第三道200分，150分通过，平台用的牛客。好久没有写过输入输出的题了，在牛客上面练了一题就开始答题了，第二道过了90%其他都AC了，应该是过了。难读感觉一般吧，比leetcode的中等题会简单一些。等综合测评。。。\n\n——7.22日的分割线——\n\n九鼎无双｜一面 |后端开发｜北京｜2023.7.22\n\n第一个线下面试，感觉大厦很大气，甚至比我在海康看到的还霸气，问了下腾讯也在这边(难怪)\n\n1.没有八股,基本就照着项目问\n\n2.你工作这一年多感觉自己学习到什么\n\n由于是线下面试马上就接着二面了，二面就是据说是技术负责人\n\n九鼎无双｜二面 |后端开发｜北京｜2023.7.22\n\n1.好像问了一点项目，简单介绍了下自己做的业务。后面就开始聊其他的了\n\n2.自己的职业规划，能不能接受从0到1的业务，并发度可能一般\n\n3.然后就互相聊聊7788的，什么公司的结构，研发人员的人数，工作内容之类的\n\n——7.21日的分割线——\n\n九鼎无双｜笔试加简单沟通 |后端开发｜北京｜2023.7.21\n\n1.两道leetcode中等算法题 19 删除链表的倒数第 N 个结点 1306 跳跃游戏 (不要求复杂度，写出来就行,也不用讲原理，可能太简单了?)\n\n2.介绍下在上一家公司做的事情\n\n3.有什么觉得有趣的工作\n\n4.介绍了下该岗位的工作内容\n\n5.约了线下的技术面试时间\n\n阿里文娱-优酷｜一面 |后端开发｜北京｜2023.7.21\n\n1.面试官先介绍了下岗位的业务\n\n2.常用的这个集合类可以说一下吗？按照它的这个继承关系。\n\n3.有一个场景 for循环遍历,arrayList进行remove操作会有问题么，为什么?\n\n4.哈希map的结构,红黑树的特征\n\n5.ConcurrentHashMap介绍\n\n6.乐观锁,MySQL 数据库,有一张表，我想对这个表里的数据加乐观锁来解决这个并发的这个问题\n\n7.接口和抽象类的区别\n\n8.对象它在哪些种情况下，在哪些情况下它会进入到老年代\n\n9.ClassLoader类加载器\n\n10.Spring设计模式\n\n11.然后就是聊项目\n\n12.redis的淘汰机制以及过期策略\n\n13.场景题 :单击最大者得处理 100 QPS，压测的场景平均单机 100 克 QPS 超过 100QPS，这样的可能就挂了。但是因为是个集群，比如说有\n10 台机器，嗯，对吧？但是我其中有3台或者 5\n台机器，因为现在基本都是混部，假如说是混部的情况，就是我可能跟其他的业务的，对吧？它的那个服务是回归在某一个实例上，一个物理机上，因为它的某些任务导致我有一些机器的有问题，我\n10 台机器，我有一些，我有几台机器是有影响的，它的服务能力会比较差，它可能就处理不了 100 QPS，它可能就是超过了 50\nQPS它就挂了。但是因为我们的负载均衡，对吧？比如都是轮询分发或者随机去负载的，那比如说在这个时候，其实，比如说我每台机器，对吧？ 60\nQPS，那我其实那几台机器就挂，可能就挂了。如果我第一个就是如果你是负载均衡的这个设计者，嗯，你应该是怎么避免这种情况？这是第一个问题。第二个问题，如果你是业务服务，因为你们属于业务服务，对吧？如果你是这个业务服务的这个开发者，你怎么去？你应该有哪些方式去保证自己会被打挂。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/511998872579813376?sourceSSR=users",
        "title": "滴滴社招2年面经Java",
        "content": "# **一面**\n\n  1. 自我介绍（祖传流程，背的老6了）\n  2. 介绍三次握手和四次挥手\n  3. 为什么要三次握手\n  4. 两次握手为什么不行\n  5. 为什么不可以三次挥手\n  6. 介绍下DOS攻击\n  7. DOS攻击为什么会导致CPU跑满\n  8. 我们通常请求是CPU密集型还是IO密集型\n  9. 线程和进程的区别\n  10. 为什么要使用多线程\n  11. 线程进程切换如何实现\n  12. 如何避免饥饿问题\n  13. 公平锁和非公平锁\n  14. 如果设计一个公平锁会如何设计\n  15. 线程啥东西了解不（没听过这玩意，没记住是啥）\n  16. 数据库隔离级别\n  17. 数据库索引数据结构\n  18. 算法题说思路-1\n  19. 算法题说思路-2\n  20. 算法题说思路-3\n  21. 项目介绍下解决什么问题\n  22. 项目分块\n  23. 项目整体流程\n  24. 如果设定指标会设置哪些指标\n  25. 如果想改善某项指标会怎么查\n  26. 如何细化排查异常指标\n  27. 反问（Q：用啥技术栈？A：Java和Go都有，中间件xxxx....，此处略）\n\n可能有漏的，全靠记忆！共计大约55分钟\n\n社招！不是实习或者校招哦~\n\n**问的很快我说的也很快，反正就是嘴在前面跑，脑子在后面追，还总是追不上....**\n\n[安排明白][安排明白][安排明白]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/511988525932339200?sourceSSR=users",
        "title": "算力大陆/比特大陆",
        "content": "审批挂\n\n一面\n\n项目\n\narraylist和linkedlist区别\n\nspring事务\n\nmysql事务\n\n索引\n\njvm内存结构\n\n输入网址到最后显示 整体过程\n\n算法 LRU\n\n二面\n\n项目\n\n算法 最近公共祖先\n\n审批了半个月 挂\n\n当天下午6点hr面 上报审批\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/511973516669935616?sourceSSR=users",
        "title": "什么年代了还在背传统八股",
        "content": "最近面试总结出一个规律，八股分为初级、中级、高级八股，它们形成一个完整的拷打链路。比如GET和POST的区别，这是初级八股。下面会按照你的回答，提问中级八股，比方说安全性和幂等性的区别、POST会不会缓存数据、POST为什么发送两次等等。最后，高级八股一定是要归结到性能和底层的，比如GET和POST谁更快、GET和POST的优缺点、怎么设计一个视频通话的协议等等。大家看八股可以沿着这个思路总结，多问自己为什么。最近也是深刻体会到了，落后就要挨打的真理。  \n  \nP.S. 和同事请教过，面试官的提问更多时候是按照你的回答走的，聊到哪就顺嘴一问，也许面试官也不知道正确答案是什么，所以大家就大胆的去答吧。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/511672494647009280?sourceSSR=users",
        "title": "拼多多社招二面",
        "content": "1、先手撕两道算法题\n\na、后缀表达式相加，34+4* -》 （3 + 4） * 4\n\n用栈解决，主要注意一些边界条件把还有一些错误表达式\n\nb、四个数组，每个数组取出一个数字进行相加，和为0，有几种做法， O(n^2)\n\nhashMap解决\n\n2、项目问答\n\n面试完boss一查，这个岗位好像都没了，是不是已经不招人了。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/511554084093157376?sourceSSR=users",
        "title": "面试问为什么hashMap用红黑树，不用平衡二叉树？",
        "content": "hashMap红黑树是校招面试常见的考点之一，比如经典的试题 “为什么hashMap底层结构用红黑树而不用平衡二叉数呢”。\n\n前两天，我们面试了一个实习生，先问项目的部分，但是这个同学的项目准备的不是很好，我们就说这个水平估计过不了，学生着急了，说这个八股文和hashMap红黑树都准备了很多。\n\n那我紧接着就问了一个红黑树的问题。我说hashMap底层的结构用了红黑树，为什么这个底层结构用红黑树而不用平衡二叉数。\n\n这个学生当时就卡住了，他说这个红黑树查询的快，我说为什么红黑树查询的快，他扯了一堆理由。我说那为什么平衡二叉树查询的比他慢呢，他又卡住了。所以现在很多学生准备校招或者实习的考点，光背是不行的，要重点理解。\n\n因为红黑树，它是数据结构的一部分，它是个动态的查找树而且是个二叉树。我们最简单的动态二叉树是二叉查找树，然后往后走就变成了我们的平衡二叉树，后面又有了新的数据结构红黑树，\n\n红黑树和平衡二叉树在查询效率上没有太大区别，因为他俩都是压缩的。这个树他不是深度，为什么会出现平衡二叉树，因为二叉查找树可能会很深很高，查询效率会很慢，那么平衡二叉数就用平衡因子把它给压缩了。红黑树也是用红节点和黑节点，把这个树的高度把它压缩了，那么它的查询效率就差不多。\n\n为什么不用平衡二叉数而用红黑树呢，因为这个动态树就是节点，数据会不断的增加或者是删除，那你的树要调整，因为树有他的要求，你的高度必须满足，那红黑树的调整效率是比平方二叉树要好。有朋友说那为什么要好，这个点不做解答，因为面试的时候不会去考你红黑树的调整策略，因为那个调整是很复杂的，可能有十多种情况。\n\n所以同学们在准备校招或者实习面试考点的时候，不要死记硬背，一定要**深层理解** ，这样才能有效面对面试官的追问。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/510940061437911040?sourceSSR=users",
        "title": "普通人的转码 - 往届自学全栈，上岸小厂前端",
        "content": "20届非科班终于接到Offer了。毕业后：疫情考公一年+政府买岗工作一年（杂活）+自学一年。我自学了React, JQuery, Nodejs,\nMongoDB, Express, Bootstrap,\nPython等等。项目主要是跟着视频或者教程敲代码，虽然有自己的见解，但是没有那种自己想出来的项目。项目主要包括**某某商城，具有注册登陆和增删查减功能的留言板**\n，**调用API的天气预报** ，还有一些**JS做的小游戏** 。\n\n找工作比自学的时候更加煎熬，历时两个月。主要在某某直聘上打了300左右个招呼，10多家收了我的简历。2个面试。\n\n1）华为OD。因为空窗期过长，我约不到面试。（自己写的期待薪资：年薪：**二十万** ）\n\n2）小公司A（自己写的期待薪资：月薪：**八千** ）\n\n  1. 无算法题\n  2. CSS中的position,\n  3. CSS中的display, 介绍一下flex和grid的区别\n  4. JavaScript中的基本类型，如何判断数据的类型\n  5. JavaScript中的数组有那些方法\n  6. JavaScript中如何把整数转换成字符串，反过来\n  7. JavaScript中，介绍一下Promise\n  8. 谈一下使用Vue的经历\n  9. 谈一下你的优势，自学编程的感受和心得\n\n3）小公司B（自己写的期待薪资：月薪：**七千** ）。\n\n  1. 无算法题\n  2. 什么情况下使用flex和grid？\n  3. 介绍一下你使用API的经历？\n  4. 什么是闭包？\n  5. React的优势是什么？\n  6. 做过最复杂的项目是什么？\n  7. 有使用过Typescript和Tailwind CSS的经历吗？\n  8. 了解过无障碍设计吗？\n  9. 问了一些项目中提到的点：包括：webpack, localStorage, jQuery, 验证用户密码的底层原理是什么 ？\n  10. 如何写出优雅的代码？\n  11. 遇到不懂的编程问题是如何解决？\n\n给后来人的一些建议：\n\n  1. **背景不佳** 的情况下，先选择一个**低起点** 。一开始我月薪期待写的一万，也不是很愿意去外包和初创公司。但随着对就业市场的了解，我的想法也改变了。人受到空窗期，城市，学历，经验，技术栈，运气等等诸多因素的影响，不可能每个人都拿到网上晒出来的优质Offer一样的价格。对于小厂路线的人来说，学历反而不如经验重要。计算机还是比较公平，有趣的行业。\n  2. **烂大街的项目也比没有强** 。虽然都是模仿项目，但是我也做了将大大小小近10多个。对于非科班来说，没有工作经验只能是项目来凑。尽管公司A没有问一个关于我自学项目的问题，公司B则只是简单问了一下，但对于没有经验的新人，**项目做的不出彩是正常的** ，但它们同样可以展现转行人员对计算机的热情，还有一定的基础知识。\n  3. **给面试官对等的尊重** 。找工作的时候我看到了很多离谱的工作要求，尽管当时也有怒气，但毕竟工作是双向选择。换个角度讲，很多工资低的公司，或者是拒绝过我们的公司也同样提供了免费的面试，为找到更合适的公司做了铺垫。到了后期，只要是可以远程面试，我都会接受。哪怕后面再拒绝掉。让我比较欣慰的一点是：两个小公司技术面在我答错以后都直接告诉我错误，并说出哪里需要注意。我个人也是觉得有和谐的工作环境，工资可以妥协。新人主打一个不卑不亢的态度，可成长性。\n\n最后感谢牛客平台，感谢以前各位牛油的分享。祝大家工作生活顺利，早日财务自由。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/510477687668883456?sourceSSR=users",
        "title": "大众安徽IT信息安全岗社招面经",
        "content": "一面\n\n1.tell us about yourself（人力问）\n\n2.talk about your course related to your major in college\n\n3.你用过什么渗透测试工具，sqlmap，burpsuite用过吗？\n\n4.比如说你怎么用sqlmap\n\n5.文件上传怎么绕过\n\n6.做过内网渗透吗？在内网中如何隐蔽自己\n\n7.你用过什么漏洞扫描工具？漏洞扫描设备是怎么一个原理？\n\n8.对安全设备有了解吗？用过什么安全设备？对xxx（好像是国外的安全设备没听过）有了解吗？\n\n9.会做应急响应吗？分享一个你做过的应急响应的案例？\n\n10.从乙方到甲方工作会有不同，乙方是做技术实施，而甲方在这方面上会有更多管理方面的工作，你怎么看？\n\n11.甲方有一些是决策性的工作，在很短的时间作出决定，你如何应对？\n\n转回人力问\n\n12.what is your weakness\n\n13.your current salary and expected salary\n\n14.do you know about any product of dazhonganhui\n\n15.do you have any question?\n\n二面（不完整，全英）\n\n1.主管自我介绍一番然后，tell me about yourself\n\n2.i know that you had C++ course in college, can you use some other script\nlanguage, you know, like Python,Ruby?\n\n3.What is your strength?\n\n4.which class do you like the most in college?why?\n\n5.which class do you like the least in college?\n\n6.talk about incident response, give me an experience.\n\n7.what can you see about yourself after five years?\n\n8.do you want to present yourself in public? You know, to attend a conference\nand make a presentation.\n\n9.what's the biggest challenge security threats faced by business in the next\n5-10 years?\n\n10.have you ever attended some security conference?\n\n11.do you know OWASP top 10.tell about one vulnerability of the owasp top 10\nand how to fix that.\n\n12.expected salary?\n\n13.do u have any questions\n\n总结：\n\n1.老外领导很和善，面试体验超级nice（上来先自我介绍然后才要求介绍自己），像聊天似的在一问一答中摸索情况，不会因为应聘者坑坑巴巴，语法错误，一直说同样的词而有明面上的不耐烦给你压力，所以请尽情大胆的讲，而且个人体会，越谈的多越放得开；\n\n2.技术面试不会挖的很深，主要是在问项目经历，这个可以自己提前准备，成功的、失败的、印象深的、关于自己某某技能的各种示例；\n\n3.可以明显感觉到他们对大学的课程很有兴趣，会有2-4个问题关于大学课程，找一下自己的成绩单，可以从GPA、擅长的课程和专业相关的课程入手准备。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/510411701599092736?sourceSSR=users",
        "title": "字节 暑期实习 商业化技术 一二三面（凉经）",
        "content": "资金中台与架构部门，部门用的是Java，官网6.21投递。\n\n## 一面 6.28（55min）\n\n  * 自我介绍\n\n  * 实习项目\n\n  * 点评APP\n\n    * 讲讲优惠券秒杀\n  * redis\n\n    * RDB、AOF\n\n    * 内存回收\n\n      * 定时任务的模式，参数怎么设置\n    * pipeline\n\n    * 线上获取redis的key有什么方式\n\n    * 讲讲redis的数据结构\n\n      * HyperLogLog是做什么的\n  * volatile\n\n  * HashMap的key是自定义的一个类，这个类需要注意什么（重写hashCode和equals方法）\n\n  * 不重写hashCode和equals方法会出现什么问题\n\n  * 死锁\n\n  * 有一个服务，频繁的 Full GC，可能是什么原因导致的\n\n    * 一般怎么排查\n    * 说一下JVM的常用命令\n  * 左连接 右连接\n\n  * 讲讲联合索引\n\n    * 联合索引(a, b, c)，where a = 1 and c = 1，能用上联合索引吗（只有a可以用得上，c失效）\n  * 讲讲回表\n\n  * 手撕：0-n之间的所有整数数字中，任何一位都不包括数字3的数字总数有多少个？\n\n## 二面 6.29（50min）\n\n  * 自我介绍\n\n  * 实习项目\n\n  * 聊天项目\n\n    * 讲一讲你的后端是怎么处理聊天的\n    * 粘包拆包 \n      * 具体怎么实现的\n      * 讲讲你用的Netty的拆包器\n    * 线程池挂了怎么处理\n  * 联合索引 (a, b)，where条件是 b = 1，能用到联合索引吗\n\n  * 回表是什么\n\n  * 有3个操作 a b c，希望a和b执行完后 c再执行（Object类下的wait() & notify()，CountDownLatch，ReentrantLock的await() & signal()）\n\n  * 手撕：给你一个二叉树，求所有左叶子节点的和\n\n  * 反问\n\n## 三面 7.7（30min）\n\n  * 自我介绍\n  * 实习项目\n  * 协程和线程的区别（面试官：协程性能比线程好吗？）\n  * 说说MySQL索引\n  * MySQL的存储引擎使用的什么数据类型\n  * 说说B+树\n  * MySQL死锁\n  * MySQL间隙锁\n  * 手撕：归并排序\n  * 无反问\n\n7.11感谢信。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/510229464240918528?sourceSSR=users",
        "title": "字节跳动——飞书后端一面",
        "content": "> 后端开发实习生-飞书\n>\n> 深圳|实习|研发 - 后端\n\n自我介绍\n\n**问项目：**\n\n你服务端你能解释一下负载均衡你是怎么理解的？\n\n> Nginx中的负载均衡是指将客户端请求分发到多个服务器上，从而提高系统的可靠性和性能。Nginx通过四种策略实现负载均衡：轮询、IP\n> hash、最少连接数和权重。其中，轮询是默认的策略，根据请求的顺序依次将请求分发给不同的服务器。IP\n> hash则是根据客户端IP地址的hash值来分配请求，最少连接数则会优先将请求分配给连接数最少的服务器，权重则是根据权重值来分配请求。\n\nnginx里面的负载均衡你有了解过里面的实现吗？\n\n> Nginx实现负载均衡的原理是在worker进程中维护一个共享的状态，记录所有upstream\n> server的状态信息，然后根据选定的负载均衡算法分配请求到合适的upstream\n> server，最后将响应返回给客户端。Nginx还提供了健康检查、故障切换等机制来保证负载均衡的高可用性。此外，Nginx还支持动态添加和删除upstream\n> server，提供了灵活的配置和管理方式。\n\ncookie、session 、JWT token了解过他们是干什么的吗？\n\n> Cookie、Session和JWT Token都是用于Web应用程序中的身份验证和授权机制。\n>\n> Cookie是在客户端存储的小数据片段，用于跟踪用户的会话状态。\n>\n> Session是在服务器端存储的用户信息，用于在多个页面间共享用户状态。\n>\n> JWT Token是一种用于身份验证和授权的安全令牌，包含了用户的信息和数字签名，可以在多个系统间共享。\n\n**八股文：**\n\n**操作系统：**\n\n进程和线程有什么区别？\n\n> 进程是操作系统中资源分配的基本单位，拥有独立的内存空间和系统资源，进程间通信需要通过IPC机制；\n>\n> 线程是进程中的一个执行单元，共享所属进程的内存空间和系统资源，线程间通信可以直接读写共享内存。\n>\n> 简而言之，进程是资源分配的单位，线程是执行的单位。\n\n刚刚你也提了线程可以共用资源对吧？那进程之间如何做到共用资源呢？进程间的通信方式有哪些？\n\n>\n> 进程间通信方式包括管道、消息队列、共享内存、信号量、套接字等。其中，管道、消息队列和共享内存属于同一台机器上的进程通信方式，而套接字则可用于网络中不同机器间的进程通信。信号量则可用于同步和互斥。\n\n**数据库：**\n\n事务的ACID这部分了解吗？\n\n> ACID是指数据库事务应该具备的四个特性，包括：\n>\n>   * 原子性（Atomicity）：事务中的所有操作要么全部成功，要么全部失败回滚。\n>   * 一致性（Consistency）：事务执行前后，数据库都应该保持一致性状态。\n>   * 隔离性（Isolation）：多个并发的事务之间应该互相隔离，避免互相干扰。\n>   * 持久性（Durability）：事务提交后，对数据库的修改应该永久保存，即使系统故障也不应该丢失。\n>\n\n原子性、一致性、隔离性和持久性他们分别是有什么作用？\n\n> ACID中的四个特性分别具有以下作用：\n>\n>   * 原子性：保证事务中所有操作要么全部成功，要么全部失败回滚，避免因为部分操作失败导致数据不一致或错误的结果。\n>   * 一致性：保证事务执行前后，数据库都应该保持一致性状态，避免数据的不一致性。\n>   * 隔离性：保证多个并发的事务之间应该互相隔离，避免读取到未提交的数据或者脏数据，避免并发操作导致的数据冲突。\n>   * 持久性：保证事务提交后，对数据库的修改应该永久保存，即使系统故障也不应该丢失，避免数据的丢失和不可恢复。\n>\n\n那对 脏读、幻读、不可重复读了解过吗？\n\n> 脏读、幻读和不可重复读是数据库中的三种并发问题：\n>\n>   * 脏读（Dirty Read）：指一个事务读取了另一个事务未提交的数据，如果另一个事务回滚，则读取的数据是无效的。\n>   * 幻读（Phantom Read）：指一个事务执行了两次查询，第二次查询发现了第一次查询没有发现的新数据或者没有查询到第一次查询中存在的数据。\n>   * 不可重复读（Non-Repeatable Read）：指一个事务执行两次查询，第二次查询读取到了第一次查询中未提交的数据或另一个事务提交的数据。\n>\n\n>\n> 这些问题的出现是由于多个事务同时访问数据库，而缺乏一定的隔离性和同步机制。为了解决这些问题，可以采用不同的隔离级别和锁机制来保证数据的一致性和可靠性。\n\n事务的隔离级别有哪几种，作用分别是？\n\n> 数据库事务的隔离级别有四种，分别为读未提交（Read Uncommitted）、读已提交（Read Committed）、可重复读（Repeatable\n> Read）和串行化（Serializable）。\n>\n>   * 读未提交：最低的隔离级别，允许一个事务读取另一个事务未提交的数据。这种隔离级别会导致脏读、不可重复读和幻读问题。\n>   * 读已提交：允许一个事务读取另一个事务已提交的数据，避免了脏读问题。但是仍然可能存在不可重复读和幻读问题。\n>   * 可重复读：保证一个事务多次读取同一数据时，能够得到相同的结果，避免了不可重复读问题。但是仍然可能存在幻读问题。\n>   * 串行化：最高的隔离级别，强制事务串行执行，避免了所有并发问题，但是会导致性能下降。\n>\n\n>\n> 选择合适的隔离级别取决于应用场景和性能要求。通常情况下，可重复读是一个比较好的选择，能够在保证数据一致性的同时兼顾性能。\n\n了解什么设计模式吗？应该准确来说叫代码编程，就比如像单例模式\n\n> 设计模式是指在软件开发中，经过实践验证的通用解决方案。常见的设计模式有以下几种：\n>\n>   1. 工厂模式：将对象的创建和使用分离，客户端只需知道产品的接口，无需关心具体实现。\n>   2. 单例模式：保证一个类只有一个实例，并提供全局访问点。\n>   3. 观察者模式：对象间的一种一对多的依赖关系，当一个对象状态发生改变时，所有依赖它的对象都会得到通知并自动更新。\n>   4. 装饰器模式：动态地给一个对象添加一些额外的职责，同时又不改变其结构。\n>   5. 策略模式：定义一系列算法，将每个算法封装起来并可互换使用，使得算法的变化不会影响到使用算法的客户端。\n>   6. 适配器模式：将一个类的接口转换成客户端所期望的另一个接口，使得原本由于接口不兼容而不能一起工作的类可以一起工作。\n>   7. 模板方法模式：定义一个算法的骨架，将一些步骤延迟到子类中实现，使得子类可以不改变算法的结构即可重定义该算法的某些特定步骤。\n>   8. 建造者模式：将一个复杂对象的构建与其表示分离，使得同样的构建过程可以创建不同的表示。\n>\n\n**计算机网络：**\n\n你可以跟我讲述一下“三次握手，四次挥手”的过程吗\n\n> 当客户端要向服务端发送数据时，需要先建立TCP连接，这个过程被称为“三次握手”。TCP连接的释放需要四次挥手来完成。\n>\n> 三次握手的过程如下：\n>\n>   1. 客户端向服务端发送SYN报文，表示客户端请求建立连接。\n>   2. 服务端接收到SYN报文后，向客户端发送SYN+ACK报文，表示服务端已经收到请求，并同意建立连接。\n>   3. 客户端接收到服务端的SYN+ACK报文后，向服务端发送ACK报文，表示客户端已经收到服务端的确认，连接建立完成。\n>\n\n>\n> 四次挥手的过程如下：\n>\n>   1. 客户端发送FIN报文，表示客户端不再发送数据，请求断开连接。\n>   2. 服务端接收到FIN报文后，向客户端发送ACK报文，表示服务端已经接收到客户端的请求，并准备好断开连接。\n>   3. 服务端发送FIN报文，表示服务端不再发送数据，请求断开连接。\n>   4. 客户端接收到服务端的FIN报文后，向服务端发送ACK报文，表示客户端已经接收到服务端的请求，并断开连接。\n>\n\n>\n> 需要注意的是，在四次挥手完成后，TCP连接就被彻底关闭了，双方不能再进行数据传输。\n\n那四次挥手的服务端不是会有个ack吗？然后再发一个释放连接，那这两次可以合并吗？就是确认报文和释放连接可以同时发送吗？\n\n>\n> 不可以。因为ACK报文和FIN报文的作用是不同的。ACK报文用于确认客户端发送的FIN报文已经被正确接收，而FIN报文则用于通知客户端服务端已经准备好释放连接。在这两个报文中，ACK报文是必须的，因为客户端需要收到服务端的确认才能确定服务端已经接收到了自己发送的FIN报文。因此，这两个报文不能合并成一个发送。\n\ntcp怎么保证可靠传输？可以具体讲一讲吗？\n\n> TCP保证可靠传输的机制包括以下几个方面：\n>\n>   1.\n> 序号和确认号：TCP通过序号和确认号来保证数据的可靠传输。发送方将每个数据报文都标记一个唯一的序号，接收方收到数据后需要回复一个确认号，表示已经成功接收到了这个数据。\n>   2.\n> 超时重传：发送方在发送数据后会设置一个计时器，如果在规定的时间内没有收到确认，则会重新发送数据。这可以保证即使某个数据包在传输过程中丢失，也能够被及时地重传。\n>   3.\n> 滑动窗口：TCP通过滑动窗口机制来控制发送方和接收方的数据发送和接收速率。发送方通过滑动窗口机制来控制发送数据的数量和速度，接收方则通过滑动窗口机制来控制接收数据的数量和速度。\n>   4.\n> 确认机制：TCP通过确认机制来确保数据的可靠传输。发送方将每个数据报文都标记一个唯一的序号，接收方收到数据后需要回复一个确认号，表示已经成功接收到了这个数据。\n>   5. 拥塞控制：TCP通过拥塞控制机制来避免网络拥塞。发送方会根据网络状况和接收方的反馈来调整数据发送的速率，以避免网络拥塞。\n>\n\n有其他方法，其他层上的方式保证它可靠吗？比如说在报文上是不是会有些检验之类的\n\n>\n> 除了TCP本身提供的可靠传输机制之外，还有其他层上的方式可以保证数据的可靠传输。比如在数据链路层和物理层上，常用的技术包括循环冗余校验（CRC）、帧检验序列（FCS）等，用于检测和纠正数据传输中的错误。\n>\n>\n> 在应用层上，常用的方法包括数据重传、数据校验等。例如，HTTP协议通常会在应用层上进行数据重传，以保证数据的可靠传输。另外，应用层协议也可以使用一些校验算法，如MD5、SHA等，来验证数据的完整性，以保证数据在传输过程中不被篡改。\n>\n> 总之，在不同层次上都可以采用不同的技术和机制来保证数据的可靠传输，这些机制相互配合，共同保障了数据的安全和可靠性。\n\n**两道算法题**\n\n#### [215\\.\n数组中的第K个最大元素](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fleetcode.cn%2Fproblems%2Fkth-\nlargest-element-in-an-array%2F)\n\n#### [31\\.\n下一个排列](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fleetcode.cn%2Fproblems%2Fnext-\npermutation%2F)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/510021533687910400?sourceSSR=users",
        "title": "腾讯 客户端 一面",
        "content": "# 20230525腾讯客户端一面 40min\n\n  1. 自我介绍\n  2. 进程和线程的区别\n  3. 进程间的通信方式有哪些（Linux下）\n  4. 线程间的通信方式（Linux下）\n  5. 输入一个url会经过哪些过程\n  6. http和https的区别\n  7. get和post的区别\n  8. java里的访问修饰符有哪些\n  9. 重载和重写的区别\n  10. java抽象类和接口的区别\n  11. 对于安卓开发你了解什么\n  12. 详细讲讲你觉得最有难度的项目\n  13. 问项目\n  14. 线程池的好处是什么\n  15. 设计模式你了解哪些\n  16. 什么是中介者模式\n  17. 其他的设计模式还了解哪些（手写了一下单例）\n  18. 算法题：删除排序链表中的重复元素（力扣82）\n  19. 反问\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/509810343657353216?sourceSSR=users",
        "title": "数字马力 后端开发 一面二面面经（社招）",
        "content": "## 时隔1年，甚是感慨，没想到这么快又来面试了。\n\n## 一面（30分钟）2023.07.10\n\n  1. 自我介绍\n  2. 能简单说一下用了哪些设计模式\n  3. 能简单描述一下策略模式吗？策略模式和if-else有什么区别，怎么定义策略类的\n  4. Linux在一个目录下面，有100个文件，需要匹配以 ‘query’ 开头的日志，并且把数量统计一下，用什么命令 （grep -c '^query' /path/to/directory/*）\n  5. Java版本用什么\n  6. 平时有用多线程吗\n  7. 用过stream和lambda表达式吗\n  8. 有一个list，包含字符串，先转换成大写，然后再对这个list进行排序\n\n    \n    \n    public class StringListSorting {\n        public static void main(String[] args) {\n            List<String> myList = new ArrayList<>();\n            myList.add(\"apple\");\n            myList.add(\"banana\");\n            myList.add(\"orange\");\n            myList.add(\"grape\");\n    \n            // 转换为大写形式\n            List<String> uppercaseList = new ArrayList<>();\n            for (String str : myList) {\n                uppercaseList.add(str.toUpperCase());\n            }\n            // 或者使用流式操作\n            // List<String> uppercaseList = myList.stream().map(String::toUpperCase).collect(Collectors.toList());\n    \n            // 对转换后的列表进行排序\n            Collections.sort(uppercaseList);\n            // 或者使用流式操作\n            // List<String> sortedList = uppercaseList.stream().sorted().collect(Collectors.toList());\n    \n            System.out.println(uppercaseList);\n        }\n    }\n    \n    \n\n9、你们Redis的使用场景，具体怎么去用\n\n10、基于Redis做分布式锁有使用Lua脚本吗\n\n11、两张表，一个是员工表\n\n副表\n\n筛选出某部门工资最高的员工的name\n\n    \n    \n    SELECT e.name \n    FROM employee e \n    INNER JOIN department d ON e.departmentId = d.departmentId \n    WHERE d.departmentName = '目标部门名称' \n    ORDER BY e.salary DESC \n    LIMIT 1;\n    \n    \n\n12、会用反射之类的吗\n\n13、对数据库索引有一些优化吗\n\n14、假如有sql比较慢，怎么去优化\n\n15、[三数之和](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fleetcode.cn%2Fproblems%2F3sum%2F)\n\n16、反问\n\n## 二面（20分钟）2023.07.13\n\n  1. 自我介绍\n  2. 项目中主要做那一块的工作\n  3. 项目中具体做了哪些性能优化\n  4. 大数据量表除了分表还有什么优化方式（分库、加索引、数据归档）\n  5. 什么情况用到Redis，怎么用，怎么做分布式锁\n  6. 为什么可以Redis可以用做分布式锁\n  7. 为什么不用其他的，而用Redis\n  8. 比较过Redis和其他缓存框架的性能吗\n  9. Memcached能用作分布式锁吗\n  10. 为什么可以Redis可以用做分布式缓存，Memcached能做到吗\n  11. 有没有什么项目留下深刻印象\n  12. 工作中看过什么其他技术（大概说了下k8s）\n  13. 能说一下什么是配置中心吗\n  14. 了解过多线程吗\n  15. 为什么不要new Thread（）\n  16. 写个造成死锁的代码\n\n    \n    \n    public class DeadLockDemo {\n        private static Object resource1 = new Object();//资源 1\n        private static Object resource2 = new Object();//资源 2\n    \n        public static void main(String[] args) {\n            new Thread(() -> {\n                synchronized (resource1) {\n                    System.out.println(Thread.currentThread() + \"get resource1\");\n                    try {\n                        Thread.sleep(1000);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                    System.out.println(Thread.currentThread() + \"waiting get resource2\");\n                    synchronized (resource2) {\n                        System.out.println(Thread.currentThread() + \"get resource2\");\n                    }\n                }\n            }, \"线程 1\").start();\n    \n            new Thread(() -> {\n                synchronized (resource2) {\n                    System.out.println(Thread.currentThread() + \"get resource2\");\n                    try {\n                        Thread.sleep(1000);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                    System.out.println(Thread.currentThread() + \"waiting get resource1\");\n                    synchronized (resource1) {\n                        System.out.println(Thread.currentThread() + \"get resource1\");\n                    }\n                }\n            }, \"线程 2\").start();\n        }\n    }\n    \n    \n\n17、除了用synchronized加锁还有其他方式加锁吗\n\n18、用ReentrantLock怎么实现\n\n19、反问\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/509796704594444288?sourceSSR=users",
        "title": "Momenta前端实习 面经",
        "content": "楼主计算机相关专业，自学前端断断续续约两个月，项目还比较薄弱，这次投简历也只是想练练手～面试官是个小哥哥，比较温柔\n\n### 一面（1h）\n\n自我介绍。\n\n最多能实习多久？\n\n为什么想学前端？前端的学习路线是怎样的？\n\n会React吗？\n\n问项目。介绍了楼主一段数字化平台的经历，内容是给部门的Leader做风控看板。\n\n了解Echarts吗？为什么会使用它？使用的时候有什么问题吗？\n\n用过ElementUI吗？哪里使用了它？\n\n介绍一下前后端联调。\n\n使用过Git吗？介绍几个常用的git指令。\n\n用过git stash吗？\n\n大量数据的展示，如何优化？\n\n用过axios吗？用过哪些方法？\n\nlocalStorage、sessionStorage、cookie的区别？\n\n使用过cookie吗？怎么用的？\n\njs数据类型\n\nMap和Set的区别\n\n介绍一下深拷贝，如何实现深拷贝？\n\n既然提到lodash了，有没有用过他的其他方法？\n\njs事件循环，判断输出顺序。\n\ncss position\n\nflex弹性盒布局\n\n网络状态码\n\n手写并发Promise\n\nps：大概就记得这么多了...后面还问了点Web安全相关的东西。我以为凉了，结果一面2h后就约了二面。总结下来就是，八股居多，项目也会问，没经过过实际开发场景的很难回答一些问题，好在面试官人很好，也会对我回答不出的问题给一些解答，体验感还行～\n\n### 二面（20min）\n\n聊聊项目中的难点以及是如何解决的？\n\n应用层协议有哪些？端口号分别是什么？\n\n各个可视化图表之间的区别，如何选择？\n\n简单介绍一下部门日常职责。\n\nps：二面有点像压力面，技术几乎0考察，二面当晚就接到了hr的oc，目前offer审批中～\n\n后续：因为个人原因，拒了\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/509778610572529664?sourceSSR=users",
        "title": "作业帮NLP算法实习生面经（一面二面+offer）",
        "content": "## 一面（7.4，数据处理部门）\n\n  1. 自我介绍\n\n  2. 手撕代码一：\n\n    \n    \n      [[1,2,3],\n       [4,5,6],\n       [7,8,9]]进行螺旋输出[5,6,3,2,1,4,7,8,9]\n    \n\n  3. 手撕代码二：\n\n    \n    \n    括号匹配，给定字符串'231(Jjhg){ds}'检验括号是否匹配\n    \n\n  4. 介绍一下台风估计项目你遇到的数据预处理\n\n  5. 介绍一下LSTM\n\n  6. LSTM各个门用了什么激活函数，以及这些激活函数的作用\n\n  7. 讲一下你的爬虫项目，怎么做的数据预处理\n\n  8. 反问\n\n    1. 我面试的岗位具体做什么内容（数据处理，我说我做过很多数据处理）\n    2. 涉及深度模型嘛（不）\n\n## 二面（7.7）\n\n  1. 没有自我介绍\n\n  2. 感觉你做了很多数据获取的工作，应该这方面很扎实\n\n  3. 爬虫过程中遇到什么困难\n\n  4. 介绍一下八爪鱼\n\n  5. 直接写代码吧\n\n有字典['ab', 'bc', 'bb', 'ac']，检验字符串'abbc'是否由字典里面的单词生成\n\n  6. 反问\n\n## 总结\n\n7.8号收到的OC，HR说可以考虑几天，然后周一和她说可以介绍，不过其中闹了一个快手的乌龙，感觉蛮不好意思的，最后在入职前两天拒掉了offer。\n\n作业帮的这个算法实习虽然写的是NLP算法实习，但是JD里面写的主要还是负责网络数据的爬取和清洗，比较少地涉及深度学习和NLP。而且从面试官地问题也可以看出，作业帮这个岗位应该是在急招，所以要求也没有那么高。考虑到未来的职业规划，也就没有选择作业帮，[同时也是大家的想法](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F900f0a72dc374634b7d05b3e7fb52dc8)。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/509778655644495872?sourceSSR=users",
        "title": "滴滴数分 面经（已oc）",
        "content": "时隔一年再次鼓起勇气投简历了，秋招压力真的很大～\n\nbg：北京985，计算机相关专业，两段大厂数据分析实习，一段小厂前端开发实习，目前求职意向是前端开发（优先）和数据分析。\n\n## 滴滴出行 增长运营方向-数据分析\n\n投递渠道是实习僧，面试官是一个语气很温柔的姐姐\n\n### 一面（50min）\n\n**1.自我介绍。**\n\n院校、专业、毕业时间、实习经历简介\n\n**2.简单介绍一个实习期间印象比较深的项目** 。\n\n我介绍了一个实习期间产品优化方面的项目，主要内容就是对PM上线的AB实验效果进行分析，介绍的思路大概是项目背景、项目流程、项目成果。\n\n**3.项目中关注了哪些指标？**\n\n从正向指标和负向指标展开，产品优化的方向是提升正向指标，控制负向指标。\n\n**4.既然聊到AB实验，说一下显著性怎么确定的？p值是多少？**\n\n这里有点尴尬，刚好忘记复习AB实验的内容......显著性是指零假设为真的情况下拒绝零假设所要承担的风险水平，p值就是当原假设为真时，比所得到的样本观察结果更极端的结果出现的概率。总之，p值越小，越显著。\n\n**5.聊聊第一类错误。**\n\n第一类错误是原假设为真但错误地拒绝原假设，第二类错误是原假设为假但错误地接受原假设。\n\n**6.样本量怎么确定。** 依然尴尬，样本量计算有公式，没复习。\n\n**7.指标体系如何搭建。** 北极星指标、一级、二级，根据重要性和粒度依次向下拆解，也可以说OSM模型（Object、Strategy、Method）。\n\n**8.机器学习项目深挖。**\n\n楼主做了一个分类的机器学习项目，主要是将小样本的用户调研数据，推广到大样本的平台用户，根据用户的特征对用户是否信任平台进行分类。大体包括了用户画像、特征选取、特征变换、模型搭建和调参优化等。\n\n**9.训练集标签的比例是怎样的？**\n\n训练数据不平衡可能导致最终分类准确率的错误，这里回答了是均衡的数据。\n\n**10.ROC值大概是多少？**\n\n回答了0.76左右，后续还有进一步优化。\n\n**11.另一段实习的深挖**\n\n主要介绍了如何监控指标异动的，以及如何用统计学方法对用户进行标签化。\n\n**12.两道SQL题，要求共享屏幕回答。有一张表，有日期(date)、用户ID(uid)、订单ID（order_id）等字段，要求完成下面两个需求：**\n\n  * **找出最近一周，完单量TOP10的用户。（完单量定义为完成订单的数量）**\n  * **找出每天完单的人中，新用户的数量。（新用户定义为在一条记录中，该用户的日期是他第一次出现的日期）**\n\n    \n    \n    # 需求1: 窗口函数、日期函数\n    # 主要关注的点：如何找出近一周内的记录、如何排序\n    # tmp子表主要用于找出近七天所有用户的完单量\n    with tmp as (\n      select\n      \tuid,\n      \tcount(distinct order_id) as `order_num`,\n      from table\n      where \n      \tdate between DATE_SUB((select max(date) from table), INTERVAL 1 WEEK) \n      \tand (select max(date) from table)\n      group by uid\n    )\n    select\n    \tuid, \n    \torder_num,\n    \trk\n    from \n    (\n      select\n      \tuid,\n      \torder_num,\n      \tdense_rank() over (order by order_num desc) as rk\n      from tmp\n    )t\n    where rk <= 10\n    \n    # 需求2: 窗口函数\n    # 找出一个用户产生订单记录的日期最小值，如果当前记录的日期等于该最小值，则认为这条记录是新用户产生的\n    with tmp2 as(\n      select\n      \tdate as curr_date,\n      \tuid,\n      \torder_id,\n      \tmin(date) over (partition by uid) as min_date\n      from table\n    )\n    select\n    \tcurr_date,\n    \tsum(case when curr_date = min_date then 1 else 0 end) as new_user_num\n    from tmp \n    group by curr_date\n    \n\n**13.实习时长，最早到岗时间** **14.反问环节。**\n\n问了主要职责，日常分析中的工具使用占比，还有面试官对楼主的表现如何评价\n\n总体下来感觉还是不错的，面试的姐姐非常亲切有礼貌，问题大多与简历中的实习和项目相关，偶尔会引申一些理论知识的考查，SQL题对楼主来说也是比较easy的。建议面试的小伙伴们一定要好好研读自己的简历，不要给自己挖坑，写出来的项目一定要清楚他的原理是怎样的。\n\n一面隔天约了二面时间。\n\n### 二面（15min）\n\n感觉是leader面了，人很随和，聊聊天的性质\n\n  1. 自我介绍\n  2. 校内感兴趣的专业课，为什么\n  3. 实习中有亮点的一个项目，说一说\n  4. 技术和business sense的关系\n  5. SQL、Python掌握得怎么样，自我评估一下\n  6. 反问\n\n整体下来很轻松～反问问了具体工作，面试官说取数需求不会太多，大部分是在做A/B、数据建模和一些业务的分析（目前正在评估系统重构的效果）\n\n二面10min后收到oc\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/509725824828846080?sourceSSR=users",
        "title": "【前端】虎扑面经",
        "content": "补一下之前的面经，现在已经上岸啦😀。\n\n## 一面\n\n  * 时间：2023年06月29日\n  * 时长：30min\n\n### 面试内容\n\n  * 自我介绍 （✅）\n\n#### 项目\n\n  * 介绍一下脚手架项目 （✅）\n  * 介绍一下组件库项目 （✅）\n  * 如果你的组件库改用上面的脚手架成本大不大 （✅）\n  * 你的组件库和常见的开源组件库有什么区别 （✅）\n  * 组件库主题适配方案 （✅）\n\n#### 计网\n\n  * 浏览器缓存 （✅）\n  * 跨域如何解决 （✅）\n  * 浏览器传递Cookie （✅）\n\n#### Vue\n\n  * VueRouter 的原理 （✅）\n\n#### JavaScript\n\n  * 深拷贝 （✅）\n\n#### TypeScript\n\n  * 泛型 （✅）\n  * 如何给 Window 全局对象添加新类型 （❌）\n  * any 和 unknown 的区别 （❌）\n\n#### 工程化\n\n  * Vite 为什么比 Webpack 快 （❌） \n    * 回答了比较浅层次的，面试官想要更深的原理，没看过😭\n\n#### 其他\n\n  * 平有使用 ChatGPT 么 （✅）\n  * 平常如何学习前端 （✅）\n  * 最近有了解什么前端新技术么 （✅）\n\n#### 结语\n\n  * 反问\n\n## HR面\n\n  * 时间：2023年07月03日\n  * 时长：忘记了（😂）\n\n### 面试内容\n\n  * 闲聊 \n    * 正常聊天，自信一点就OK （💪）\n\n## 结果\n\nOC（😀）\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/509482787041193984?sourceSSR=users",
        "title": "【实习】京东 JD YOUNG 测试开发",
        "content": "# 一面\n\n日期：2023年07月14号\n\n  1. 自我介绍。\n  2. 项目介绍。\n  3. 介绍一下前端发送请求到后端的过程。\n  4. 哪些原因会造成前端请求失败？\n  5. JVM 类加载过程。\n  6. String，StringBuffer 和 StringBuilder 区别。\n  7. 介绍下项目里的测试工作。\n  8. 对测试的理解。\n  9. 测试方式有哪些？简单介绍一下。\n  10. 接口测试是如何做的？\n  11. 设计测试用例：购物车\n  12. 为什么投测试开发岗？\n  13. 手撕 两道简单 SQL\n  14. 表结构：student { s_id : 学生 id; s_name : 学生名称}, score {s_id : 学生id; c_id : 课程id; s_score : 课程分数}\n  15. 查询 \"01\" 课程分数小于 60，按分数降序排列学生姓名。\n  16. 查询课程编号为 \"01\" 的课程比 \"02\" 的课程成绩高的所有学生的学号。\n  17. 两道简单算法题\n  18. 给定一个数组 int[] arr = {12, 3, 70, 8, 555, 125, 45}，求出数组中最大的数。\n  19. 给一个小写字母组成的字符串，找到其中相邻的重复项，并删除它们，最终返回无相邻重复项的字符串。\n  20. 实习时间\n  21. 反问\n  22. 部门：京东零售-数据中台\n  23. 测试和开发占比\n\n"
    }
]