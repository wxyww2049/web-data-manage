[
    {
        "url": "https://www.nowcoder.com/discuss/536212072951033856?sourceSSR=users",
        "title": "华为OD-Java面经-21届考研",
        "content": "  * **背景介绍**\n\n先介绍下背景，三战失败选手，base西安，21届211本科计算机科班出身，本科期间没好好做规划一股脑冲去考研了，冲复旦计专没过复试线，家里支持二战所以毕业那年简单投了两三个挂掉之后就没找过工作了。脱产二战三战冲了西交软专，二战差0.0737录取，三战差0.0414录取，3月底出录取名单之后发现寄了心灰意冷，先参加了调剂去西工大非全，录取之后觉得没多大意思鸽了，同时通过在读研的舍友以及一些高中同学感知到今年行情也不好，未来几年可能也比较寄，故开始准备找工作，这个时候差不多是四月底五月初。两三个月时间断断续续把Java相关的技术栈复习起来，8月初开始投简历找工作，起初想先投西安小公司面试练练手，结果发完简历大多数因为空窗期的原因已读不回。故8月中下旬最终投了华为OD。下面根据时间线介绍下整个流程：\n\n  * **投递流程**\n\n****8.17****\n在牛客上找了栗栗了解od相关情况，加了微信，小姐姐很负责电话跟我讲了下大概的流程，当天发了我机考练习题库和机考建议（栗栗这边资料很全，不用自己额外找题库）************************************\n\n ****8.26****\n找栗栗约机试，因为周末的原因推迟到了8.28发机考邮件，这里讲一下od的机考，满分400分，两道100分和一道200分，以我机考为例，两道100分的题目一道是增强的strstr（通过率70%），另一道是最长公共后缀（100%通过），200分的题目是字符串求全排列（60%通过率，debug了半个小时通过率始终卡在60%上没能提升，可能是超时了）所以最终机试成绩是290\n\n****8.29**** 早9点通知我机试通过，紧接着发综测邮件给我，类似性格测试那一类东西（也有攻略），很快也通过了\n\n****9.7****\n约到两轮技术面试，各1小时，一场早上一场下午，当天下午结束技术面之后告知HR，HR十分钟左右回复我结果，紧接着约了资格面和主管面，安排到了当天晚上，也就是一天面了四轮。\n\n****9.12**** offer下来约入职时间，开始准备体检之类的\n\n  * **技术一面**\n\n学校里做过什么项目？毕设做了什么项目？（没什么好问的所以直接写代码了）\n\n**手撕代码：岛屿数量变体（求岛屿个数改为求最大岛屿的面积）lc 200**\n\nchar在java里占几个字节？\n\n讲一下代码运行的过程\n\n编译这个动作是在什么时候发生的？\n\n算法实现的时间复杂度是什么级别？\n\nJava里线程的生命周期\n\n什么时候会进入block状态？\n\njava里有几种IO？\n\n讲一下NIO和BIO？\n\nBIO指什么？有什么区别？\n\n项目中怎么用redis的？哪些数据适合放在redis里哪些不适合？\n\nmysql里用过哪些函数？\n\n如何写出性能比较好的sql，有哪些经验或认识？\n\n微服务有没有了解过？\n\n反问：部门做什么业务的，用的什么技术栈？\n\n答：不了解，只负责面试可能不在同一个部？\n\n  * **技术二面**\n\n学校里学了哪些课程？\n\n在校期间参加了哪些活动竞赛？\n\n讲一下毕业设计，有什么亮点\n\nredis作缓存如何避免超卖情况？\n\n如果让你重构项目会怎么优化？\n\njava中的锁锁的是什么？\n\n如何保证redis和mysql的一致性？\n\n系统做分布式部署本身应该具备哪些条件？\n\n介绍一下平衡二叉树的特点和使用场景\n\n介绍一下B树和B+树\n\n介绍一下Java容器\n\n有没有遇到过OOM，讲一下StackOverFlow，如何定位哪块的代码发生了OOM\n\n介绍一下JVM中类加载机制，类加载机制的目的是什么\n\n介绍一下对象的生命周期\n\n讲一下可达性分析和引用计数法，内存担保机制\n\n根据业务写一条sql，口头描述\n\n* ***手撕代码** ：字符去重求子集，lc 90** \n\n  * **资格面**\n\n老家哪里？\n\n毕业之后一直脱产考研吗？\n\n毕业之后生活中除了考研之外还在做什么？\n\n第一次考研失败之后有没有思考过什么原因？\n\n三战失败有没有考虑过可能是目标定太高的问题？\n\n对于职场的预期是什么样的，未来规划是什么样的？\n\n上大学为什么选择计算机专业？\n\n在校期间做过哪些相关的项目？\n\n对于华为公司文化怎么看待？\n\n身边有没有同学在华为工作？\n\n如何看待IT行业的加班现象？\n\n手里有其他offer吗？\n\n期望薪资是多少？\n\n  * **主管面**\n\n介绍一下考三次研究生的情况\n\n有没有考虑过换个学校考\n\n找工作的时候是怎么规划的\n\n在校的时候做过什么项目\n\n大学毕业的时候绩点多少，排名是多少？\n\n在校有哪些团队合作经验？在其中负责什么样的角色？\n\n有哪些人对你影响、帮助最大？\n\n压力比较大的时候如何排解？\n\n如何看待华为？\n\n觉得自己最大的优点是什么？如何去胜任接下来的工作？\n\n反问：部门做什么业务，用什么技术栈？\n\n  * **总结**\n\n整个面试流程走下来还是蛮顺利的，没有我想象中那么难，虽然一天面四轮体验不太好，但面试官大多比较和善。最后给栗栗支持支持，考虑进od的话可以联系栗栗小姐姐，认真负责提供全流程攻略。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/536196577380044800?sourceSSR=users",
        "title": "江西电信校园线下面试",
        "content": "#### 概述\n\n三位面试官，态度很好，感谢提供此次面试机会。\n\n#### 非技术面\n\n  1. 面试的岗位是什么？\n  2. 自我介绍\n  3. 介绍一下农田氮磷流失监测项目中的主要工作\n  4. 讲一下自己应聘这个岗位的优势\n\n===============================\n\n从收到录用通知直到正式确定offer，比邮件上写的日期晚了两三个星期。最后被分到南昌市电信，总包12.5万（市电信统一价），遂拒。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/536194726840500224?sourceSSR=users",
        "title": "传音驻外销售一面",
        "content": "很nice的小姐姐，整体面试体验很好，面完心情都好了很多。\n\n  1. 自我介绍\n  2. 为什么想做销售\n  3. 详细介绍一下你的创业经历，中间遇到的困难是怎么解决的\n  4. base在发展中国家可以接受么\n  5. 目前投了哪些公司哪些岗位\n  6. 之前有产品的实习。能介绍一下你对产品岗的理解么\n  7. 为什么不做产品\n  8. 介绍一下家庭状况\n  9. 父母接受你去做驻外销售么\n  10. 有没有团队合作的经历？你在团队中扮演什么样的角色\n  11. 反问\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/536156309868097536?sourceSSR=users",
        "title": "腾讯客户端三面记录（白嫖面试官）",
        "content": "9.5日二面过后就一直没有约三面，昨天突然约了三面。都这个时候了，本着捞着一个面试是一个面试的心态面的。\n\n提问了项目12min，没考察什么技术，就是了解一下课题组项目，然后就让我反问了[牛泪]。感觉肯定是kpi了吧，其实心里很释然，开始反问，反问了15min\n\n反问1、如果我需要整合的项目代码风格结构比较差，应该怎么办？\n\n反问2、引擎开发有什么难点？\n\n反问3、我注意到面试间隔比较长，这次面试时间又比较短，那还有后续吗?\n\n反问4、如果有后续，那么是hr面还是技术面？\n\n反问5、面评\n\n最后面试官说还有一些时间，讲讲自己的优势。我抓紧机会又表现了一下。\n\n突然他又问我，平时玩什么游戏。。。emmm，我说我玩过穿越火线、王者荣耀（被追问段位。。。其实我不爱打游戏，哈哈哈\n\n面试官人还是很好的，感觉也是有一定年纪的，说他面试也很忙，但还是耐心解答了我的问题。尤其是项目上遇到x山怎么解决，讲得很有参考价值。面试可以寄，希望后面科研毕业一切顺利。[赞]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/536152502111080448?sourceSSR=users",
        "title": "蔚来 二面",
        "content": "自动驾驶组\n\n  1. 自我介绍\n  2. 项目\n  3. 实习\n  4. C++stl有哪些，vector和list的区别，map和unordered_map的区别，底层实现，crud效率\n  5. 智能指针有哪些，unique_ptr赋值时编译为什么会报错，shared_ptr是线程安全的吗\n  6. 多线程如何安全的操作队列，cond，mutex，cond在wait时会释放锁吗？唤醒时会持有锁吗？\n  7. 反问\n\n25min，2023.9.26\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/535923627095494656?sourceSSR=users",
        "title": "阿里控股三面",
        "content": "主管面，有点像hr面  \n1、技术问题，只讲了一下我在项目中解决的一个问题的过程，怎么做持久化存储，序列化存储字符串太长这么办  \n2、为什么选择杭州的公司（我是广东的），腾讯给你offer你还来不来（腾讯hc少得可怜…），你会这么做选择  \n3、这辈子做得最极致的一件事  \n4、最近一天怎么安排，在干什么  \n5、有什么爱好  \n6、为什么不读研，而是就业  \n7、有无其他offer  \n今年阿里本科基本只有p4  \n反问了部门和业务，有餐补但是好像没房补（杭州可能有一次性人才补贴）  \n许愿个hr面吧  \n[面试必过]  \n——————  \n泡了一个多月，挂了  \n  \n  \n  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/535887427915780096?sourceSSR=users",
        "title": "上海大智慧 前端实习（一、二、三面，已OC）",
        "content": "更新：已拒\n\n## **一面：**\n\n  1. **自我介绍**\n  2. **说一下垂直居中水平居中方法，至少四种**\n  3. **border-redius的缩写方式**\n  4. **nav固定100px 其他内容铺满整个屏幕 （ 面试官想听到的：css 的 calc() 和 flex：1 ）**\n  5. **arr.push(num) 的返回值**\n  6. **arr.splice() 三个参数作用**\n  7. **arr.filiter 用法 和 返回值**\n  8. **ES6 新特性**\n  9. **Vue 父子传值**\n  10. **子组件更改，父组件同步渲染**\n  11. **Vue 的 watch和computed的区别、method和computed的区别**\n  12. **读代码看输出：let、var外，obj：let、（）= > this console 说说区别 考察2个东西：let、var，和this块级作用域**\n  13. **反问：**\n  14. **在我之后学习前端的过程中有什么好的建议吗？**\n  15. **请问现在有必要学SSR框架吗**\n\n## **二面：**\n\n  1. **实习时常**\n  2. **学校上课影响吗**\n  3. **讲一下上段实习的产出和经历**\n  4. **水平居中**\n  5. **子父通信 把能想到的所有方法都讲一遍**\n  6. **Vuex和Pinia区别**\n  7. **讲讲什么叫做解耦**\n  8. **游览器缓存**\n  9. **Vue2用过吗，讲一下生命周期钩子**\n  10. **页面回退的时候 会重新渲染吗？**\n  11. **无损切换页面（keep-alive、页面json后持久化）**\n\n## **三面：HR面（省略）**\n\n一家上海做券商的中厂，把能记住的面试题记下来了，可能还有漏的。不得不说一面的面试官人巨好，刚开始面试的时候脑子几乎放空状态，是面试官大哥一点点提醒回过神来的（），不懂得问面试官大哥，他都会非常细心的给你讲解。三轮面试连续的，刚进公司发了张笔试卷，一面的面试官是\n根据你笔试的卷子来问你的。一面主要在问h5c3js基础，二面就是常见的Vue八股了。\n\n但是看好像除了HR外，好像技术面两轮面试官都没看过我发的简历的样子，有种被KPI的感觉（）\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/535846390849601536?sourceSSR=users",
        "title": "个人秋招面经汇总",
        "content": "## TPLINK 提前批 测评\n\n  * 10道技术选择，3道解答，2道编程\n  * 判断是否是Ipv4地址，判断是否是回文链表\n  * 10道常识推断，10道数据分析，10道图形推断\n\n## TPLINK 提前批 软件开发工程师 一面\n\n> 面试很快，20分钟，无反问环节，我面完我看见下一个人马上腾讯会议了\n\n  * 自我介绍\n  * 本科，研究生成绩，是否是保研的，有无论文和专利\n  * 介绍自己的一个项目，遇到了什么困难，当时是怎么解决的\n  * C++中static的作用，C语言中static的作用\n  * C++的多态请介绍一下\n  * Mysql的ACID请讲一下它们的定义\n  * mysql的隔离级别请详细说一下\n  * mysql的引擎怎么实现隔离的？（这个直接不会\n  * redis的过期删除与内存淘汰\n  * 说一下堆排序怎么实现的\n\n## TPLINK 提前批 软件开发工程师 二面\n\n> 面试了快35分钟，共享屏幕手撕\n\n  * 自我介绍\n  * 介绍一下自己的项目\n  * HTTP和HTTPS区别\n  * 线程同步的方法\n  * TCP三次握手，四次挥手\n  * 了解C++11么，我说了智能指针（下面就让我手撕实现\n  * 手撕shared_ptr\n  * 手撕C语言实现虚函数功能\n\n## TPLINK 提前批 软件开发工程师 三面\n\n> 面试20分钟\n\n  * 自我介绍\n  * 是否保研，考研排名，本科成绩，研究生成绩\n  * 研究生实验室项目\n  * HTTPS客户端项目\n  * 反问环节\n\n## TPLINK 联洲提前批 测评\n\n  * 10道技术选择，4道解答，2道编程技术选择有些java题目解答题目：数据库ACID, MVC模式，RESTful风格API，响应式交互设计\n  * 整数反转，最长有效括号数量\n  * 10道常识推断，10道数据分析，10道图形推断\n\n## TPLINK 联洲提前批 一面\n\n> 35分钟\n\n  * 自我介绍\n  * 本科，研究生成绩排名，是否是保研的，考研成绩，有无论文和专利\n  * https客户端项目\n  * https和http区别，https握手的过程\n  * tcp为什么是三次握手，两次握手服务器端什么情况\n  * redis项目服务器怎么实现的，集群怎么做的\n  * 如果新增一个redis服务器节点，什么情况\n  * io多路复用\n  * 水平触发和边缘触发\n\n## TPLINK 联洲提前批 二面（终面）\n\n> 20分钟，聊天为主\n\n  * 自我介绍\n  * 本科成绩，有没有参与过竞赛，有获得过什么奖学金么\n  * 依次根据简历问各个经历，项目情况\n  * 研究生方向，毕设方向，目前毕设完成情况\n  * 反问环节\n\n## TPLINK 联洲提前批 三面（加面）\n\n  * 自我介绍\n  * 本科成绩询问，排名，数学成绩为什么这么差\n  * 实验室有参与过什么项目\n  * HTTPS客户端怎么做优化的？\n  * Socket编程有哪些API？\n  * socket函数返回值代表什么意思？\n  * C++ 指针和引用区别？\n  * C++中怎么对内存泄漏情况检查？怎么避免内存泄漏的情况？gcc启用asan标志检查；重载new和delete；使用valgrind工具尽量使用智能指针代替普通指针；使用RAII的思想编写类；预先设定好内存池，使用内存池管理内存（他好像还觉得不满意，让我答出点别的标记清除法（参考其他语言gc的方法；公司有代码审查工具，可以自动检查野指针，空指针，内存泄漏等高风险问题，有问题会给出代码高风险预警\n  * 目前有没有在面其他公司的提前批？拿到offer了么？\n  * 问我是哪里人，意向工作地点，父母情况\n\n## 万得 提前批 C++软件开发 一面\n\n> 面试官评价动手能力很强，C++底层原理了解不够深，面试时间30分钟。\n\n  * 自我介绍\n  * 聊软件API开发，单元测试\n  * https客户端项目，事件循环怎么写的，epoll\n  * 虚函数表的地址怎么获取\n  * C++11了解么\n  * C++的mutex源码有看过么，底层怎么实现的\n  * C++的share_ptr源码有阅读过么，底层怎么实现，有没有使用锁\n  * C++ 无锁怎么做的？atomic底层怎么实现的\n  * windows的API熟悉么\n  * 意向哪个城市，南京还是上海\n  * 反问技术栈，可能的工作内容学习建议\n\n## 万得 提前批 C++软件开发 二面\n\n> 面试了好像20分钟左右\n\n  * 自我介绍\n  * 介绍自己HTTPS客户端怎么做的，哪些优化点\n  * C++的编译过程\n  * 对IO多路复用的理解\n  * 内核态和用户态区别\n\n## 万得提前批 C++软件开发 笔试\n\n暂时无法在飞书文档外展示此内容\n\n> 万得已挂\n\n## 阿里巴巴 早鸟-JAVA开发工程师-买家交易链路方向 一面\n\n> 面试时间35分钟\n\n  * https客户端项目介绍，为什么要设计客户端连接池\n  * CPU,内存,磁盘怎么协同执行程序的\n  * 并发编程理解\n  * 为什么进程之间切换开销大于线程之间切换开销\n  * 为什么要区分内核态和用户态\n  * 死锁条件\n  * 说一下熟悉的git命令，git commit 和 git push 区别，为什么要设置一个暂存区\n  * 反问环节\n\n> 面试完后一天告诉挂了\n\n## 中兴 软件开发工程师 未来领军计划 一面\n\n> 腾讯会议面试，三个面试官，应该是2个技术面试官，1一个hr，面试时间50分钟左右\n\n  * 自我介绍\n  * 说一下你主要用什么编码，以及代码量\n  * 做项目时候有没有遇到奇怪的BUG，怎么解决的（数据竞争问题-tasan，未正确放置终结符'\\0')\n  * 你研究生方向是什么，做过什么项目（我说NLP)，为什么做的跟研究生方向不一样\n  * 某个线程占用率高，怎么排查问题（面试官说top命令的一个关键参数啥的，没听清top, ps, pstackLinux C++ 程序占cpu%问题排查_幻想之渔的博客-CSDN博客10 | 案例篇：系统的软中断CPU使用率升高，我该怎么办？-极客时间\n  * gdb怎么调试多线程\n  * 说一下死锁的原理\n  * 多线程中你用过哪些锁，遇到过死锁的情况么（pstack+gdb）\n  * 有遇到过内存泄漏的情况么，怎么处理的\n  * 看你做的网络相关很多，TCP和UDP的区别。\n  * 微信和QQ收发消息用的什么协议，现在这个视频用的什么协议\n  * socket底层的关键字你有使用过吗，协议怎么设计的\n  * mysql的索引优化你使用过么\n  * 数据库里面的表怎么设计的\n  * docker你有使用过吗\n  * C++的类生成的默认函数有哪些\n  * 你对重载，覆盖，隐藏的理解\n  * 多态情况下基类编写需要注意什么情况\n  * C++智能指针管理对象的原理是什么\n  * 你有没有阅读过什么开源库，简要介绍一下\n  * 貌似是hr的面试官开始问你家住在哪里，意向城市，为什么考虑这些城市工作内容希望做什么你现在有没有在面的其他公司\n  * 反问环境反问这个计划面试流程有几轮，至少两轮技术面\n\n## 中兴 软件开发工程师 未来领军计划 二面\n\n> 两个面试官\n\n  * 自我介绍\n  * 意向城市，你家乡在哪，你有没有女朋友，女朋友在哪座城市？\n  * 你自己认为你个人的优缺点是什么？\n  * 你个人遇到的最大的挫折是什么？你觉得自己抗压能力怎么样？\n  * 遇到项目优化的情况，你的解决思路是什么？如果你没办法完成优化你会怎么办？\n  * 你有过支持别人的经历么?\n  * 你觉得自己的领导能力怎么样？\n  * 你的想法跟领导有分歧，该怎么解决？你的领导如果不在技术岗多年，怎么办？\n  * 如果你在现场，项目崩溃了，3天内需要你解决这个问题，怎么解决？\n  * 你有很多任务，领导安排的，领导的领导安排的，同事安排的，你的时间怎么安排？\n  * 意向薪资，目前手里有没有别的offer，考不考虑在目前这家实习的公司转正？\n  * 你对中兴的了解是什么\n  * 反问环节业务内容\n\n> 已挂\n\n## 壁仞科技 AI软件开发工程师 一面\n\n> 面试时间30分钟\n\n  * 自我介绍\n  * 介绍一下你常用的linux命令\n  * 你makefile写的多么\n  * 编译遇到undefined symbol情况你怎么解决的\n  * 遇到段错误你怎么排查问题的\n  * 你python调用C++生成的代码怎么做的（答了一下Cython的使用方法\n  * C++ 继承和多态\n  * C++ vector相关，内存释放怎么做我们常用的操作clear()和erase()，实际上只是减少了size()，清除了数据，并不会减少capacity，所以内存空间没有减少。那么如何释放内存空间呢，正确的做法是swap()操作。①可以利用swap()方法去除vector多余的容量：vector<T>(x).swap(x)；其中，x是当前要操作的容器，T是容器的类型。②利用swap()方法清空vector容器：当 swap() 成员方法用于清空 vector 容器时，可以套用如下的语法格式：vector<T>().swap(x)。https://zh.cppreference.com/w/cpp/container/vector/shrink_to_fit\n  * C++智能指针介绍一下\n  * 一个单例模式怎么实现\n  * C++多线程编程，你一般怎么做的\n  * 对硬件相关了解么，我们这边很多需要软硬结合的\n  * 反问业务范围\n\n## 壁仞科技 AI软件开发工程师 二面\n\n  * 手撕实现线程安全的单例模式（cpp11之前的，cpp11标准之后的两种方式）只记得11的实现的方式了。。\n  * 手撕实现string\n  * 手撕实现完美转发（只记得std::forward了，忘了咋写）\n  * 目前在面哪些公司？对我们公司了解啥（对公司了解仅知道它是做AI芯片的，我说在流程中的有十多家，他说你是海投那种的呀，不去了解公司啥的，很尴尬\n  * weak_ptr使用场景（请说出除了解决循环引用的以外的\n  * C++右值引用\n  * 反问流程至少还有一轮技术面工作内容面试完统一分配\n\n## 帆软科技 后端工程师 笔试\n\n  1. 一本书里有100万单词，判断其中可能写错的单词有哪些，并给出可能正确的实现，分析相应的时间和空间复杂度。\n  2. 有一个数据表，有三个字段A,B,C，一共1000万行，字段A中不同的值有100万个，字段B中不同的值有10万个，以A字段为行维度，B字段为列维度，对字段C做求和运算，得到一个100万行，10万列的一个交叉表。在浏览器段显示这个交叉表时每页显示100行，10列，那么浏览器端开始计算这个交叉表，然后显示第一页的数据以及总页数的时间和空间复杂度是什么样?在浏览器输入页码，返回对应页码数据的时间和空间复杂度是什么样。\n\n## 帆软科技 后端工程师 一面\n\n> 面试时间50分钟，场景题目为主\n\n  * 面对一个场景，我们的服务器宕机情况很多，有已知的问题和未知的问题，你会选择什么样的方案来处理？尽可能多的说出你的解决思路面对已知的问题尽量去解决它未知的问题，服务器做好备份，流量控制，用户的这个服务锁死在一个容器里面，如果挂掉切换容器\n  * 目前有一个高性能的计算引擎，内存有限，可以处理1亿个数据计算，面对两种情况：小数据计算，大数据（类似100亿左右的），该怎么处理这个问题？尽可能多的说出你的解决思路\n  * 尽可能多的说出一些提高项目性能的方案，减少代码错误，内存泄漏等情况？代码规范，单元测试用例，代码评审，测试，项目文档等等\n  * 你想怎么样衡量自己的工作成果（绩效），工作中有的任务是你Leader安排的，有的问题是同事来求助的，有的问题是来自其他组的？\n  * 你期望的base地点\n  * 反问环节工作主要的技术栈和业务内容开发类似apache的doris数据库那种\n\n## 友塔游戏 游戏服务端工程师 笔试\n\n  1. 输入一个n*n的图，图中有不同颜色的球，点击一个球，会使得相同颜色的球爆炸（像连连看那种），每个位置不一样，请给出点击得到最大价值的一种方式.************************************************* 变形版本\n\n    \n    \n    输入\n    5\n    颜色图\n    1 1 1 2 3\n    1 1 1 2 3\n    1 1 2 3 1\n    1 1 3 1 1\n    1 1 2 1 1\n    价值图（可能不一样，以下只是例子）\n    1 1 1 1 1\n    1 1 1 1 1\n    1 1 1 1 1\n    1 1 1 1 1\n    1 1 1 1 1\n    \n    输出\n    12\n    1 1 1\n    1 1 1\n    1 1\n    1 1\n    1 1 加起来\n    \n    \n\n  1. 区间覆盖 *********************************************\n  2. 有一张 n个节点 m条边构成的的无向图 (注意该图并不保证所有节点连通，且图中可能成环) ， 节点标记为1.2.3...N，在2之后的节点上，每个节点都存在无限数量的价值为Ai的珠宝 现在有一个小偷，从节点1出发，去各个节点上偷取珠宝，已知他身上只能带一个珠宝，且偷到珠宝后必须放回节点1，假设偷取/放下珠宝不消耗时间 移动到相邻节点消耗1单位时间，请问在k单位时间内小偷能偷到最大多少价值的珠宝 (放回节点1的珠宝才算偷到)\n\n> 打家劫舍问题图论版本\n\n输入描述：输入第一行三个元素，分别是节点数n，边数m，时间k 第二行为2到n上珠宝的价值 第三行及之后，代表每一条边的信息，表示这两个节点之间有边相连\n\n输出描述：输出为k时间内能偷到的最大珠宝价值\n\n  1. 给一个n*m的矩阵游戏规则如下，玩家依次从第一行开始往后选取财宝，如果选取了a[i][j]位置的财宝，那么a[i+1][j-1]，a[i+1][j+1]位置的宝箱就会被引爆，就不能被选取。\n\n输入描述\n\n第一行输入整数n和m 0<n<=10,0<m<=10，表示有n行和m列，接下来n行，每行输入m个整数\n\n输出描述\n\n求最后玩家能够获取到的最多的财宝是多少?\n\n    \n    \n    输入\n    2 3\n    3 2 1\n    1 2 3\n    输出\n    8\n    \n    \n\n## 友塔游戏 游戏服务端工程师 一面\n\n> 面试20分钟\n\n  * 无自我介绍直接开始\n  * HTTPS客户端项目优化思路\n  * cache和buffer有了解么\n  * Linux free操作以后怎么查看\n  * MYSQL索引相关请介绍一下\n  * explain语句， Using filesort怎么优化16 | “order by”是怎么工作的？-极客时间11 如何判断一个SQL语句是否有性能问题?-慕课专栏\n  * 查询玩家的关卡数据，玩家好友的特定一关的关卡数据建立 玩家id-关卡的联合索引\n  * redis高性能的原因\n  * redis的zset数据结构底层实现\n  * 看你也比较喜欢玩游戏，为什么选择服务端而不是客户端\n\n## 友塔游戏 游戏服务端工程师 二面\n\n> 面试时间25分钟，面试官比较和蔼，无自我介绍环节\n\n  * 聊我的项目优化思路\n  * 只考虑C++开发么，不考虑其他语言么？\n  * 了解C++智能指针底层原理吗，介绍一下\n  * 如果你来设计一个智能指针，你会考虑哪些地方02 | 自己动手，实现C++的智能指针-极客时间\n  * 面对大量的读写请求你怎么处理\n  * 怎么设计一个读写锁如何理解互斥锁、条件锁、读写锁以及自旋锁？ - 邱昊宇的回答 - 知乎如何理解互斥锁、条件锁、读写锁以及自旋锁? - 知乎\n\n![](https://uploadfiles.nowcoder.com/files/20230925/812829688_1695627498990/.jpg)\n\n  * 反问环节在做什么游戏，我进去以后可能做什么\n\n> 二面完一小时通知进行人事面\n\n## OPPO 系统工程师 笔试\n\n20道选择（40分），3道编程（60分）\n\n  1. 第一行输入正整数n和q， 代表数组的大小和操作次数。第二行输入n个正整数ai，代表小欧拿到的初始数组。接下来的q行，每行输入两个正整数i和x，代表将第i个元素变为x\n\n> 这道题使用 long long 就可以过，经验\n\n1 ≤ n, q ≤ 10^5\n\n1 ≤ i ≤ n\n\n1 ≤ ai, x ≤ 10 ^ 9\n\n    \n    \n    输入\n    5 3\n    1 2 3 4 5\n    2 3\n    3 3\n    5 1\n    \n    输出\n    16\n    16\n    12\n    \n    \n\n  1. 给一个矩阵左下角坐标a,b,右上角坐标c,d给一个圆心坐标x,y，求覆盖圆的最小面积，cpp实现，π取3.1415926\n\n    \n    \n    #include <iostream>\n    #include <cmath>\n    using namespace std;\n    \n    const double PI = 3.1415926;\n    \n    int main() {\n        int a, b, c, d, x, y;\n        cout << \"Enter the coordinates of the lower left corner of the rectangle (a, b): \";\n        cin >> a >> b;\n        cout << \"Enter the coordinates of the upper right corner of the rectangle (c, d): \";\n        cin >> c >> d;\n        cout << \"Enter the coordinates of the center of the circle (x, y): \";\n        cin >> x >> y;\n    \n        // 计算圆心到矩形四个顶点的距离\n        double dist1 = sqrt(pow(x - a, 2) + pow(y - b, 2));\n        double dist2 = sqrt(pow(x - a, 2) + pow(y - d, 2));\n        double dist3 = sqrt(pow(x - c, 2) + pow(y - b, 2));\n        double dist4 = sqrt(pow(x - c, 2) + pow(y - d, 2));\n    \n        // 计算圆的半径\n        double radius = max(max(dist1, dist2), max(dist3, dist4));\n    \n        // 计算圆的面积\n        double area = PI * pow(radius, 2);\n    \n        cout << \"The minimum area required to cover the circle is: \" << area << endl;\n        return 0;\n    }\n    \n    \n\n  1. 输入一个数组，该数组的所有乘积2进制末尾至少有k个0，输出2进制末尾为k个0的最短长度。\n\n第一行输入两个正整数n和k\n\n第二行输入n个正整数ai。\n\n分解成子问题：1. 存起来每个数2进制末尾的个数（注意加起来就是乘积的2进制末尾个数），把每个数的2进制数都记录下来\n2.给定一个数k，找到数组中大于等于k的最短连续子数组。（滑动窗口）\n\n    \n    \n    #include <iostream>\n    #include <vector>\n    using namespace std;\n    \n    int countTrailingZeros(int n) {\n        int count = 0;\n        while ((n & 1) == 0) {\n            n >>= 1;\n            ++count;\n        }\n        return count;\n    }\n    \n    \n    int main() {\n        int numZeros = 0;\n        for (int num : nums) {\n            numZeros += countTrailingZeros(num);\n        }\n    \n        if (numZeros < k) {\n            return -1;\n        }\n    }\n    \n    \n    \n    \n    #include <iostream>\n    #include <vector>\n    #include <queue>\n    \n    using namespace std;\n    \n    int shortestSubarray(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> prefixSum(n + 1, 0);\n        for (int i = 0; i < n; i++) {\n            prefixSum[i + 1] = prefixSum[i] + nums[i];\n        }\n        int ans = n + 1;\n        queue<int> monoQue;\n        for (int i = 0; i <= n; i++) {\n            while (!monoQue.empty() && prefixSum[i] - prefixSum[monoQue.front()] >= k) {\n                ans = min(ans, i - monoQue.front());\n                monoQue.erase(monoQue.begin());\n            }\n            while (!monoQue.empty() && prefixSum[i] <= prefixSum[monoQue.back()]) {\n                monoQue.pop_back();\n            }\n            monoQue.push_back(i);\n        }\n        return ans == n + 1 ? -1 : ans;\n    }\n    \n    int main() {\n        vector<int> nums = {2, 3, 1, 2, 4, 3};\n        int k = 7;\n        int ans = shortestSubarray(nums, k);\n        cout << ans << endl; \n        return 0;\n    }\n    \n    这里使用了前缀和和单调队列的思想，时间复杂度为O(n)，其中n为数组长度。具体思路如下：\n    \n    1. 首先计算出数组的前缀和，即prefixSum[i]表示nums[0]到nums[i-1]的和。\n    2. 初始化一个空的单调队列monoQue，用于维护前缀和的单调性，队列中存放的是前缀和的下标。\n    3. 遍历前缀和数组prefixSum，对于每个位置i，做如下操作：\n       - 如果队列不为空并且当前前缀和减去队列头部的前缀和大于等于k，则更新答案ans为当前下标i减去队列头部的下标，并弹出队列头部；\n       - 如果队列不为空并且当前前缀和小于等于队列尾部的前缀和，则弹出队列尾部；\n       - 将当前下标i插入队列尾部。\n    4. 最后如果答案ans未被更新，则返回-1，否则返回ans。\n    \n    这个算法的时间复杂度为O(n)，空间复杂度为O(n)，其中n为数组长度。\n    \n    \n\n## OPPO 系统工程师 一面\n\n> 被面试官吐槽项目经历太少，多深入学习一下安卓的架构，面试时间30分钟\n\n  * 自我介绍（面试官让我介绍一下实验室的项目讲了我在实验室做的横向项目\n  * 面试官说我们来考察计算机基础（这个环节基本是我在说你对JAVA了解么说一下C++常用的数据结构C++怎么解决线程冲突的方式你知道哪些排序算法，它们是怎么排序的你知道epoll的原理么hashmap插入的时间复杂度\n  * 你说你经历过最难的问题，你是怎么解决的\n  * 你有没有论文，你是学硕还是专硕\n  * 反问环节问他们业务内容安卓framework层，建议我学习安卓从上层应用层出发，由上至下\n\n## OPPO 系统工程师 二面\n\n> 面试了25分钟\n\n  * 安卓系统架构理解\n  * 相机拍照流程介绍，log分析\n  * TSAN工具介绍\n  * 动态链接库和静态链接库理解\n  * 导出动态链接库中，有的函数你不想暴露给外面使用，有什么方法\n  * HTTPS客户端项目优化思路\n  * 生产者消费者模式理解\n  * 你对系统，还是服务端还是底层，哪个方向的工作感兴趣\n  * 反问想问问工作内容和职责\n\n## OPPO 系统工程师 加面\n\n> 20分钟，聊天为主\n\n  * 项目介绍\n  * 数据结构考查\n\n## 韶音科技 嵌入式软件开发 HR面试\n\n> 面试20分钟\n\n  * 自我介绍\n  * 学校经历，考研原因\n  * 为什么经历都有点短，找实习的目的是什么\n  * 为什么想来深圳\n  * 感觉你的经历不适合投嵌入式，为什么考虑投嵌入式\n  * 对韶音的了解\n  * 反问环节流程两轮技术面后，再进行简历筛\n\n> 已挂\n\n## 元戎启行 软件工程师 一面\n\n[*********************************](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fleetcode.cn%2Fproblems%2F3Etpl5%2F)\n\n## 元戎启行 软件工程师 二面\n\n> 面试时间45分钟\n\n  * 自我介绍\n  * 项目介绍，你遇到过什么困难\n  * C++智能指针原理\n  * 重排链表我先拿双端队列写的，面试官让我之后改成O（1），调试了半天（\n  * 你对IT行业的理解\n  * 你想做什么方向，看你更适合做互联网那种后台\n  * 反问问了一下工作内容\n\n## 元戎启行 软件工程师 三面\n\n> 面试时间一小时10分钟\n\n  * 自我介绍\n  * C++内存模型有了解么，大概介绍一下\n  * make_shared 和 裸指针创建智能指针对象智能指针shared_ptr踩坑笔记\n  * 裸指针创建对象问题\n  * 排查定位系统死锁问题思路\n  * 场景手撕\n\n    \n    \n    class Service{\n        void request(){\n        }\n        void query(){\n            // count last 5 minutes request times\n        }\n    }\n    \n    \n\n## 作业帮 后端软件开发 笔试\n\n  1. 输入四位整数，每位数字都加上五，然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。输入1234，结果9876。使用cpp实现\n\n    \n    \n    #include <iostream>\n    using namespace std;\n    \n    int main() {\n        int num;\n        int digits[4];\n    \n        // 读取四位整数\n        cin >> num;\n    \n        // 分离各位数字并加上5\n        for (int i = 0; i < 4; i++) {\n            digits[i] = (num % 10 + 5) % 10;\n            num /= 10;\n            std::cout << digits[i] << \" \";\n        }\n    \n        return 0;\n    }\n    \n    \n\n  1. 322\\. 零钱兑换\n  2. 695\\. 岛屿的最大面积\n\n它的输入是字符串，注意处理输入\n\n    \n    \n    输入：\n    0,0,1\n    0,1,1\n    \n    #include <iostream>\n    #include <vector>\n    #include <string>\n    \n    using namespace std;\n    \n    int main() {\n        vector<vector<int>> arr;\n    \n        // 读取输入\n        string line;\n        while (getline(cin, line)) {\n            vector<int> row;\n            size_t pos = 0;\n            string token;\n            while ((pos = line.find(\",\")) != string::npos) {\n                token = line.substr(0, pos);\n                row.push_back(stoi(token));\n                line.erase(0, pos + 1);\n            }\n            row.push_back(stoi(line));\n            arr.push_back(row);\n        }\n    \n        // 输出数组\n        for (const auto& row : arr) {\n            for (const auto& value : row) {\n                cout << value << \" \";\n            }\n            cout << endl;\n        }\n    \n        return 0;\n    }\n    \n    \n\n## 作业帮 后端软件开发 一面\n\n> 面试时间48分钟\n\n  * 寻找旋转排序数组中的最小值 II\n  * C++ vector 扩容机制\n  * C++ map 底层数据结构，红黑树插入和查询时间复杂度\n  * shared_ptr原理，多线程下使用shared_ptr需要注意什么\n  * 进程的内存布局\n  * 进程和线程区别\n  * MySQL索引你了解哪些\n  * 如何查询最热门100条的查询URL（注意可能有重复）（10亿个url，每个url 64 B，内存1GB分治法，并且保证同一个url放到同一个文件中，每个文件取top100到小顶堆\n  * HTTPS客户端项目优化，线程池优化（非活跃的时候怎么搞\n  * 反问环节\n\n## 作业帮 后端软件开发 二面\n\n> 面试时间1小时5分钟\n\n  * 简历上经历依次问一下，让你自己说一下（问了我性能优化的思路，项目设计思路，是怎么解决遇到的问题）\n  * C++ 多态，继承，封装的理解，你项目中有没有哪里体现过这些思想\n  * C++ 智能指针原理，被用在哪些场景\n  * mysql索引，说说你了解哪些\n  * 你对多路复用的理解，它们怎么使用\n  * 单例模式，工厂模式\n  * 验证回文串（出了两道题，可以选一道做，先说思路再做）\n\n## 埃科光电 软件开发 笔试\n\n> 用的牛客，代码题没有测评通过，是那种写笔记形式的\n\n选择10道，10分\n\n  * ARP协议\n  * 。。。\n\n问答题，5道，90分\n\n  1. 写一种常用的排序算法，常见思路 10分\n  2. C++几种智能指针的常用场景 10分\n  3. 内存泄漏检查方法 10分\n  4. 给一个数组，返回顶峰，类似这样：[1, 3, 2] 返回3 30分\n  5. 输入两个元素，1.step步数， 2.数组长度 ilen, 从索引0出发，返回索引0位置的方案有多少种？30分\n\n> 已挂\n\n## 鼎阳科技 嵌入式开发 笔试\n\n  1. 已知有如下界面，请设计这些界面的类图。提示:只需描述设计思路即可，可使用文字+框图的方式描述 (按你的理解定义所需要的类;且描述类之间的关系)\n\n    \n    \n    界面1\n    频率  xxx\n    幅度  xxx\n    偏移量 xxx\n    相位 xxx\n    \n    \n    界面2\n    脉宽 xxx\n    上升沿 xxx\n    延时 xxx\n    \n    \n\n后续可能会出现新的与界面1，界面2类似的界面需求:可能有类似的界面n\n\n  1. 如下代码有哪些问题?\n\n    \n    \n    int main( void ) {\n        char *str = NULL;\n        *str = get memory ();\n        printf( str );\n    }\n    char * get memory( void ) {\n        char p[20];\n        memcpy(p,\"hello world\",11)\n        return p;\n    }\n    \n    \n\n  1. 64位系统中，下面这段代码输出什么内容?\n\n    \n    \n    char*p=\"Hello\";\n    printf(\"size=0x%08x,len=%d \",sizeof(p).strlen(p));\n    \n    \n\n  1. 数组(43，29，45，49，3866，25，53]进行快速排序，请写出首次快速排序的完整过程\n  2. 2+ (9+6/3-5)*4转化为后缀表达式是什么?\n  3. 已知某结构体指针some_struct *p;表达式(unsigned long)(p+sizeof(some_struct))-(unsigned long)p;的值最可能是:请输入[A、25 B、80 C、100 D、144]并请说明理由。\n\n选D，指针p+1的值是指针p加一个结构体的内存，指针p+sizeof的值是p+结构体内存的平方；结构体按最大成员变量的长度做对齐，12可以看成3个int\n\n![](https://uploadfiles.nowcoder.com/files/20230925/812829688_1695627498938/.jpg)\n\n## 亿联网络 Go工程师 笔试\n\n操作系统中常见的两种文件访问方法：顺序，随机\n\ngo的切片由哪三个字段组成？\n\ngo函数参数传递方式？\n\ngo的并发原语，用于在多个goroutine中通信的是什么？\n\ngo使用什么可以捕获panic么\n\ngo中哪个关键字应用于接口中声明方法\n\ngo中哪个数据类型表示unicode\n\ngo的接口类型如何实现,类型继承，类型嵌入，duck typing还是泛型？\n\n## 影石 移动端C++开发 笔试\n\n  1. weak_ptr的使用，解决循环引用问题（修改代码中的问题）\n  2. 针对重复字符串实现一种优化长度转换。比如IIISSTTAAAA转变为I3S2T3A4。如果压缩以后反而更长，返回原来的。使用cpp实现\n\n    \n    \n    #include <iostream>\n    #include <string>\n    \n    std::string compressString(const std::string& str) {\n        if (str.empty()) {\n            return \"\";\n        }\n        \n        std::string compressedStr;\n        char currentChar = str[0];\n        int charCount = 1;\n        \n        for (int i = 1; i < str.length(); i++) {\n            if (str[i] == currentChar) {\n                charCount++;\n            } else {\n                compressedStr += currentChar + std::to_string(charCount);\n                currentChar = str[i];\n                charCount = 1;\n            }\n        }\n        \n        compressedStr += currentChar + std::to_string(charCount);\n        \n        if (compressedStr.length() < str.length()) {\n            return compressedStr;\n        } else {\n            return str;\n        }\n    }\n    \n    int main() {\n        std::string str = \"IIISSTTAAAA\";\n        std::string compressedStr = compressString(str);\n        std::cout << compressedStr << std::endl;\n        return 0;\n    }\n    \n    \n\n  1. 146.LRU缓存. - 力扣（LeetCode）\n\n## 影石 嵌入式开发 笔试\n\n  * fork()||fork()共创建几个进程\n  * 操作系统中锁的底层实现原理\n  * 如何保证编写代码的稳定性\n  * 浅拷贝和深拷贝区别\n  * 指针数组，数组指针，函数指针概念，区别\n  * 二分查找（有重复元素的有序数组），只能用c语言实现\n  * 实现手机菜单，设计多级菜单的数据结构，并将菜单内容打即出来，只能用c语言实现\n\n## 影石 嵌入式开发 一面\n\n> 两个面试官面我，应该是想到啥问啥，面试40分钟\n\n  * linux上电启动整个系统的过程\n  * 内核态到用户态转换过程\n  * Open 和 fopen区别\n  * 平时内存管理怎么做的\n  * C++多态有哪些，怎么实现\n  * 平时C，C++使用比例\n  * 多线程和多进程区别\n  * 创建互斥锁的linux API\n  * TCP/IP有几层\n  * HTTP协议怎么实现的\n  * TCP 套接字开发服务端得使用哪些API\n  * 小米实习主要做了啥\n  * 相机怎么使用dma_buffer\n  * 视频常见编码格式了解么H.264、MPEG-4、MPEG-2、WMA-HD以及VC-1\n  * 音频常见编码格式了解吗\n  * 实习跳槽为什么这么频繁\n  * 个人业余喜欢什么\n  * 喜欢看什么类型动漫\n  * 反问业务和技术栈：sensor相关，通信相关很多，主要使用C语言面试流程：后续还会有2-3轮技术面\n\n> 无后续\n\n## 字节跳动 后端开发工程师（直播） 一面\n\n> 面试时间50分钟，面试官人挺好，可惜我八股太废物了，得多多努力了\n\n  * 先说了一下今天的面试流程\n  * 自我介绍\n  * 你觉得哪个项目或者经历对你能力提升最大，介绍一下\n  * 询问HTTPS客户端项目优化思路\n  * GET和POST区别\n  * 键入网址到网页显示，期间发生了什么？尽可能详细描述这个过程\n  * Cookie和Session区别cookie和session的区别(全面总结) - 掘金19 | 让我知道你是谁：HTTP的Cookie机制-极客时间\n  * 如果让你设计一个直播用的协议，你会怎么设计？\n  * 你知道有哪些索引，可以说一下么MySQL 的索引可以从不同的角度进一步划分。比如说根据叶子节点是否包含数据分成聚簇索引和非聚簇索引，还有包含某个查询的所有列的覆盖索引等等。数据库使用索引遵循最左匹配原则。但是最终数据库会不会用索引，也是一个比较难说的事情，跟查询有关，也跟数据量有关。在实践中，是否使用索引以及使用什么索引，都要以 EXPLAIN 为准。\n  * 主键索引和唯一索引区别\n  * 主键索引和二级索引哪个快，为什么呢\n  * 联合索引 where a or ...，该怎么优化10 为什么我明明创建了索引，SQL却无法用到?-慕课专栏\n  * redis有哪些数据结构？zset是什么\n  * redis持久化的方式\n  * 求两个集合的交集，你选择采用什么数据结构\n  * 物理内存和虚拟内存区别\n  * 进程之间通信方式有哪些\n  * 进程和线程之间区别\n  * 多线程问题，1w个用户，你只能同时取一个id得到年龄的接口，怎么处理？如果有的线程执行快，有的执行慢？\n  * 最长回文子串\n\n## 字节跳动 后端开发工程师（直播） 二面\n\n> 面试时间1小时\n\n  * 自我介绍\n  * 内存池是怎么设计的\n  * HTTPS客户端项目优化\n  * HTTP/3.0 你了解它的原理吗\n  * 软中断和硬中断09 | 基础篇：怎么理解Linux软中断？-极客时间软中断和硬中断之间的联系与区别 - 圈点 - 内核技术中文网 - 构建全国最权威的内核技术交流分享论坛\n  * FIN_WAIT2状态你了解么\n  * TCP和UDP头部区别，说一下TCP头部有哪些字段，尽可能多\n  * select/poll/epoll原理你知道么，epoll是阻塞的还是非阻塞的\n  * 零拷贝技术你有使用过么，说一下它的原理9.1 什么是零拷贝？\n  * 如果协议依靠特殊字符来分段有什么问题\n  * aof持久化原理，rdb持久化原理，它们的优缺点？怎么改进（我说了一下混合持久化的方式\n  * 你了解mysql的索引设计么，下面这个索引该如何设计\n  * Select * from t1 where a = 'x' and b != 'x' and c = 'x' order by d desc limit 0, 10\n  * 智力题：有三张扑克，一张红桃，两张黑桃，三张牌都在C这里。选到红桃明天可以不用上班。A抽了一张牌，然后C翻开手里一张牌发现是黑桃，如果你是A，你会选择跟C手里没有被翻开的那张牌交换，还是不交换\n  * 验证二叉搜索树\n\n> 第二天通知挂掉\n\n## 柠檬微趣 C++服务端 笔试\n\n  1. 组合数，给定n和s，n个数字，这n个数字中有多少种情况相加之和等于s，不同位置相同的数视为不同。\n  2. Leetcode第10题 正则表达式匹配 和 44题 通配符匹配 合体，支持 '?' 和 '*' 和 '.' 的匹配\n  3. 野猪骑士，下一个较大元素的最小值（用单调栈可以骗分16%\n  4. 排行榜，要支持ADD, UPDATE, SERACH这些操作，有时间复杂度要求\n\n> 已挂，这家对笔试要求比较高（它题库不大，做之前建议牛客搜搜\n\n## 中望 C++软件开发 笔试\n\n> 题目重复率高，做之前牛客搜搜\n    \n    \n    // 下面这段代码应该是陷入死循环无法退出\n    #include <map>\n    \n    int main() {\n        std::map<int, int> m;\n        m[0] = 1;\n        for (auto it = m.begin(); it != m.end(); ++it) {\n            m[it->second] = it->second + 1;\n        }\n    }\n    \n    \n\n  * 删除排序链表中的重复元素\n  * 最大回文数字\n  * 卡车上的最大单元数\n\n## 中望 C++软件开发 一面\n\n> 面试时间35分钟\n\n  * 项目线程池怎么实现的\n  * 多个线程竞争的情况怎么处理\n  * C++封装，继承，多态\n  * 多态是怎么实现的\n  * dynamic_cast的原理\n  * 除了typeid 获取的rtti类型，还有哪些类型\n  * C++函数重载原理，为什么C语言里面没有重载\n  * C++ 加const能不能构成重载C++ 加const能不能构成重载的几种情况_多个const修饰可以重载吗_learner_pu的博客-CSDN博客\n  * new/delete和malloc/free 区别\n  * 求最短路径算法一般使用什么，体现了什么思想\n  * 如果有很多圆，它们只有相交和相离两种状态，你怎么判断每个圆被哪些圆包含\n  * 红黑树操作时间复杂度，建立一颗红黑树时间复杂度多少\n  * vector和list区别\n  * unordered_map,unordered_set原理\n  * 怎么测试哈希表性能\n  * 反问C++相关的工作，有自研的内存池，数据库这些面试结果一周内反馈\n\n## 中望 C++软件开发 二面\n\n> 面试时间30分钟，聊天为主\n\n  * 自我介绍\n  * 项目介绍\n  * 期望薪资\n  * 为什么考虑武汉\n  * 反问环节\n\n## 小红书 C++后端 笔试\n\n> a了第一道，第二道，第三道都是骗分。微信群里看到的一些题目和解答发过来（侵权的话私信我删除\n\n在群里看见别人发的\n\n![](https://uploadfiles.nowcoder.com/files/20230925/812829688_1695627499115/.jpg)\n\n第一题\n\n在群里看见别人答案，我也像别人这样做的\n\n![](https://uploadfiles.nowcoder.com/files/20230925/812829688_1695627498932/.jpg)\n\n第二题\n\n从数轴上截取一个连续区间 问里面存在的区间长度之和\n\n贪心+二分\n\n[7.23小红书笔试ak_牛客网](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F512737239445614592%3FsourceSSR%3Dusers)\n\n第三题\n\n在群里看见别人答案\n\n![](https://uploadfiles.nowcoder.com/files/20230925/812829688_1695627498921/.jpg)\n\n## 百度 C++/PHP/Go后端 一面\n\n> 面试时间45分钟\n\n  * 拍照流程，log是怎么分析\n  * cpp的多态怎么实现的\n  * cpp的内联函数作用，什么情况下不进行内联\n  * linux多线程你了解哪些\n  * 进程，线程区别\n  * 操作系统为进程分配了什么资源\n  * tcp,udp区别\n  * 操作系统做了什么保证tcp可靠传输\n  * 三次握手，四次挥手\n  * time_wait状态含义，有什么作用\n  * io多路复用介绍\n  * 反转链表，迭代和递归\n  * 反问环节问了一下工作内容（搜索方面，主要使用go语言问能不能提前实习\n\n## 百度 C++/PHP/Go后端 二面\n\n> 面试时间49分钟，面试官跟我说：我们这个部门是业务研发部门，跟你之前的经历都不太像，感觉你很偏底层，GO基础得好好补补\n\n  * 自我介绍\n  * https客户端项目优化分析\n  * 拍照流程，log是怎么分析\n  * redis服务器怎么实现的，有没有拿redis-cli去测试\n  * go的gmp调度你知道么（不会\n  * 你了解哪些设计模式，说一下\n  * go的interface实现设计模式怎么做的（你go不太熟悉，那我们来问问C++问题\n  * C++内存泄漏怎么预防呢\n  * 你对linux内核了解多么\n  * 静态链接库，动态链接库区别\n  * 动态链接库具体原理（记不清了，貌似是查找到那个函数过程得说出来\n  * 场景题：手机扫码PC二维码，实现登录功能，你考虑怎么实现？（抽象成问题：http网站的登录（原理）过程是怎么做的？）\n  * 智力题：99个球，每次只能取1-4个球，A先去取，A怎么取保证胜利\n  * 反转链表，迭代和递归\n  * 反问\n\n## 百度 C++/PHP/Go后端 三面\n\n  * 自我介绍\n  * 你觉得对你成长影响比较大的一段经历\n  * 国内最可能做成大模型的是哪家公司\n  * 未来取代抖音的是什么形式的APP\n  * 可以来提前实习么，Go基础怎么样\n\n## 华泰证券 后端 笔试\n\n  * b/s架构必须实现http协议么（必须的）, c/s架构和b/s架构区别\n  * 分组加密算法与散列函数算法实现的最大不同是\n  * 关系数据库规范化是为了解决关系数据库什么问题\n\n    \n    \n    关系数据库规范化是为了解决数据冗余、数据依赖和数据更新异常等问题。\n    在关系数据库中，如果存在冗余数据，会导致数据存储空间的浪费，同时也会增加数据更新和维护的难度。例如，如果一个员工在多个部门工作，将其信息重复存储在多个部门表中，就会导致数据冗余。如果某个员工的信息需要更新，就必须更新多个部门表中的数据，这样会增加数据更新的复杂度和风险。\n    此外，如果数据之间存在依赖关系，也会导致数据更新异常。例如，如果将员工的姓名和部门信息存储在同一个表中，那么如果某个部门的名称更新，就需要更新该部门下所有员工的信息，这样也会增加数据更新的复杂度和风险。\n    关系数据库规范化通过将数据分解为更小的表，并通过使用外键来建立表之间的关系，可以消除数据冗余和数据依赖，从而降低数据更新的复杂度和风险。同时，规范化还可以提高数据的查询效率和数据存储空间的利用率，从而提高数据库的性能和可靠性。\n    \n    \n\n  * 工厂模式遵循了什么设计原则\n  * 内存管理中的lru是用来管理物理还是虚拟内存的分配和释放虚拟\n  * 求两个数最小公倍数\n\n    \n    \n    #include <iostream>\n    using namespace std;\n    \n    int gcd(int a, int b) {\n        // 求a和b的最大公约数\n        if (b == 0) return a;\n        else return gcd(b, a % b);\n    }\n    \n    int lcm(int a, int b) {\n        // 求a和b的最小公倍数\n        return a * b / gcd(a, b);\n    }\n    \n    int main() {\n        int a = 12;\n        int b = 18;\n        int result = lcm(a, b);\n        cout << \"a和b的最小公倍数为：\" << result << endl;\n        return 0;\n    }\n    \n    \n\n  * 多数元素\n  * 排序数组\n\n## 华泰证券 后端开发 一面 现场面试\n\n> 线下面30分钟，一面各种基础考察为主\n\n  * 自我介绍\n  * 介绍自己项目\n  * redis跳表怎么实现的\n  * Redis aof和rdb持久化原理\n  * Mysql 事务特性\n  * Mysql 底层数据结构B+树\n  * C++多态怎么实现的\n  * 内联说一下\n  * hashmap底层实现\n  * io多路复用原理，select/poll/epoll\n  * 反问\n\n> 面试完十分钟通知下午二面\n\n## 华泰证券 后端开发 二面 现场面试\n\n> 线下面1小时左右\n\n  * 介绍自己项目\n  * 通常项目优化的思路，优化一个代码应该从哪些方面入手\n  * 电梯调度算法，有20个电梯，员工刷工卡可以到达指定楼层，早高峰上行为主，晚高峰下行为主，凌晨电梯需要一半以上停止使用检修。电梯考虑最优效率（最快速把员工送到指定楼层），电梯有最大承载数量（5-8分钟时间思考）给一张白纸设计类图，类方法，调度算法，注意可扩展性\n  * 你自己个人的职业规划\n  * 你有没有听说过华泰的末尾淘汰，你对末尾淘汰的看法\n  * 手里目前有没有其他offer，最近在投递哪些公司，你的优先级是什么\n  * 你对华泰证券的了解\n  * 最后给你一个机会，你说一下自己的优点\n  * 你为面试华泰做了什么准备\n\n## 正定私募 C++软开 笔试\n\n低延迟进程间通信\n\n目标: 以alice.cpp和bob.cpp为基础，让两个进程按要求的通信逻辑进行交互，且延迟尽可能的小\n\n单次通信逻辑\n\n## 芯动科技 GPU软件开发 笔试\n\n  * 64位机器上，malloc返回的内存是按照8字节对齐，请你实现按128位对齐的分配器，并给出相应的释放函数\n  * 一个整数转换成16进制，并按照字符串输出\n  * 实现一个ringbuffer，需要包含read (*buf, size, ring) /write (*buf, size, ring) 两个接口，支持free/free_size/empty/full操作，并且要对ringbuffer满了时候进行处理\n\n> 已挂\n\n## 科大讯飞 C++软件开发 笔试\n\n  * 科大讯飞0729非凡计划笔试算法解析\n  * 注意输入long long\n  * 输入一个数组，（都是禁着点数，保证不相同）一个正整数的目标数x，求两个正整数之和位x的数量注意禁着点可能大于目标数（考虑完备）\n\n## 科大讯飞 C++软件开发 一面\n\n> 面试时间35分钟\n\n  * 自我介绍\n  * 面试官介绍部门主要工作职责，车载AI应用开发\n  * 你说说你了解的C++特性\n  * 线程之间同步和互斥怎么做的\n  * 实际工作中有没有使用过C++新特性\n  * C++内存模型\n  * C++内存相关的问题你有遇到过么？\n  * 你对TSAN工具的理解\n  * 死锁问题一般怎么解决\n  * 线程泄漏怎么理解？\n  * 有没有遇到过内存泄漏的问题\n  * 为什么考虑合肥\n  * 反问环节询问了一下具体工作职责\n\n## 科大讯飞 C++软件开发 二面\n\n> 面试时间35分钟\n\n  * 死锁是什么，怎么调试死锁\n  * 内存泄漏怎么处理\n  * gdb调试的时候，出现很多问号，怎么进行调试Linux GDB调试代码 显示问号???的解决方法_gdb 问号_hehe053的博客-CSDN博客\n  * C++动态多态怎么实现的\n  * 个人适合担任软件开发工程师的优点\n  * 个人职业规划\n\n## 诺瓦星云 软件开发 笔试\n\n  1. 环形链表\n  2. 最大网络秩\n  3. 二叉树最大深度\n  4. 斐波那契数\n\n## 诺瓦星云 软件开发 一面\n\n> 面试时间30多分钟\n\n  * 面试官自我介绍\n  * 自我介绍\n  * 如果线程池处理一堆任务，有的任务频率很高，应该怎么处理\n  * 谈谈你对HTTP的理解\n  * HTTP长连接如何实现的\n  * TCP的首部有哪些字段\n  * UDP协议，怎么样设计可以避免丢包\n  * MySQL有哪些类型的索引\n  * C++的变量作用域有哪些\n  * C++你常用哪些特性\n  * 你对面向对象设计思想的理解\n  * 有使用过QT么\n  * 你对你自己未来1-2年规划是什么\n  * 你认为一个好的团队应该是什么样子的\n  * 反问工作主要内容：LED屏后面的驱动程序等\n\n## 诺瓦星云 软件开发 二面\n\n> 面试时间30分钟，一面二面一个面试官\n\n  * 你最近在学什么知识\n  * 你对自己规划\n  * 你待过的公司团队之间协作怎么做的\n  * 你觉得自己技术有哪些需要提升的点\n  * 后续流程HR面\n\n## 疯狂游戏笔试\n\n第一道k，targetk在，那么k*2+1，和k*3+1就在。问target在不在容器里面。target==k|| target == k*2+1 ||\ntagret=k*3+1, 还有(target-1)/3 和（target-1）/2的判断\n\n第二题翻转图像像素数组rgb颜色12344个为一组，一组内顺序不能改变。\n\n## 快手 C++网络SDK 一面\n\n> 面试时间50分钟\n\n  * 自我介绍\n  * TSAN原理介绍\n  * 相机拍照流程优化\n  * https客户端项目优化\n  * C++ 野指针，悬空指针区别野指针就是不知道指向哪里了； 悬空指针就是指向的地址已经无效了。悬空指针就是将这个指针指向的内存已经释放了，却没有对指针进行赋空，因为C++并没有垃圾回收机制，你delete了一个指针只是释放了指针指向的内存空间，而指针本身依旧还在，正确的操作是delete一个指针后立马将指针赋值为nullptr野指针就是未进行初始化的指针，你不知道这个指针变量里面的内容是什么，一般是最近一次这块内存上面的内容，也就是说不知道用这个指针访问的内存是哪一块，所以指针初始化的时候要typename * p = nullptr；\n  * 引用和指针区别\n  * C++ 友元函数，友元类作用\n  * C++ 多态实现原理\n  * 多重继承有什么问题\n  * 怎么获取一个实例的类型 （typeid）\n  * C++ inline作用\n  * C++ 智能指针\n  * make_shared 和 shared_ptr 初始化方式区别Item 21:优先考虑使用std::make_unique和std::make_shared而非new - Effective Modern C++异常安全有关效率\n  * C++ 模板 相关的（忘了，不太会\n  * c++ 属性 deprecated\n  * 动态链接库，静态链接库区别\n  * 看一段代码有什么问题\n  * 8个硬币，有个硬币偏重还是偏轻不知道，是假币，用天平至少需要几次找出来（3次）说一下思路\n  * 反问主要工作内容（音视频部门，视频编解码相关）\n\n## 快手 C++网络SDK 二面\n\n  * 130\\. 被围绕的区域\n  * 面完挂，没撕出来\n\n## 快手 C++工程师 一面\n\n> 面试时间45分钟\n\n  * HTTPS项目优化思路\n  * 内核同步，时间管理怎么做的\n  * malloc/free, new/delete区别；new怎么分配内存在栈上\n  * 虚函数和纯虚函数区别，纯虚函数可以实例化么\n  * 虚函数调用原理\n  * 基类指针或引用指向派生类，然后强转成void*,再使用强转回基类指针或引用，去调用虚函数有什么表现\n  * 派生类指针或引用指向派生类，然后强转成void*,再使用强转回派生类指针或引用，去调用虚函数有什么表现\n  * 反转链表 II\n\n## 快手 C++工程师 二面\n\n> 面试时间75分钟\n\n  * sync.Map原理\n  * 线程，协程区别，你对于协程的理解\n  * GO协程实现方式，协程调度方式\n  * 什么情况下推荐使用协程\n  * 线程调度的方式\n  * 分析两种遍历方式区别\n\n    \n    \n    int a[m][n]\n    for i in m\n    for j in n\n    s+=a[i][j]\n    for j in n\n    for i in m\n    s+=a[i][j]\n    \n    \n\n  * 手撕实现shared_ptr\n  * 项目线程池实现方式\n\n## 快手 C++工程师 三面\n\n  * 自我介绍\n  * 介绍自己项目和经历\n  * 你的职业规划\n  * 你有哪些OFFER\n  * 设计一个视频搜索系统，你会考虑哪些因素？\n  * 反问环节\n\n## 宁德时代 软件工程师 笔试\n\n    \n    \n    输入n和k，n表示锂电池总数，k表示购买种类数，接下来输入n个正整数，表示锂电池的额定电压。输出一个正整数表示所有方案中最大差异度。使用cpp\n    保证通过例子:输入\n     6 3\n    13 5 1 8 21 2\n    输出\n    8\n    解析，选择13 5 21时候最大差值是8\n    \n    \n\n  * 完美矩形\n  * 树中距离之和\n\n## 中欧基金 java 开发 一面\n\n> 群面，6个面试者，3个面试官\n\n  * 自我介绍\n  * 感受最深的课程\n  * 遇到最难的挑战\n  * 咨询答疑环节\n\n> 其他人学历都好高，有几个海外的硕士并在美国实习的，人麻了\n\n一面完后还要经过挑选和部门评估，选优胜的同学去上海实习一个月，实习一个月会有项目，之后要进行答辩，答辩完后再挑选人进行二面。\n\n## 星环科技 分布式存储 笔试\n\n  1. 给定一个正整数n,请你求出所有满足1<i，j<n并且i*j是完全平方数的正整数对(i,j)个数。例如，当n=4时所有满足条件的整数对为(1,1),(1,4),(2,2),(3,3),(4,1),(4,4)，输入一个整数n(1<n<10^6)。输出一个整数表示所有满足条件的整数对数。使用C++。保证通过用例，输入4时输出6。\n  2. 实验室的机器人失控了，现在机器人正在暴走他会破坏途径路径上的一切。好在你仍然对它有一定的控制能力，你发现机器人接下来会移动n次，第 次移动a米现在你能够做的是指定每一次移动的方向为左边或者右边，以此尽量减少机器人暴走覆盖的范围。\n\n你想要知道在指定的方向最优的情况下，机器人暴走覆盖的范围最少是多少?机器人暴走覆盖的范围是每次它移动的路径的并集。例如当a={1,2,3}时，你可以指定前两次向左移动，第三次向右移动，那么最终机器人暴走覆盖的范围就是3米。\n\n    \n    \n    输入\n    2\n    4\n    5 1 2 5\n    6\n    1 1 4 5 1 4\n    \n    输出\n    6\n    5\n    \n    \n\n## 燧原科技 AI芯片工具开发工程师 笔试\n\n> 有部分英文题目\n\n19道选择+1道不定项选择+2道问答\n\n选择：\n\n  * C++深拷贝\n  * 下面的 x 值\n\n    \n    \n    int x = ~2;\n    std::cout << x << \" \";\n    \n    \n\n  * -9的补码\n\n问答：\n\n  * static作用\n  * 大端和小端定义，写个函数判断大端和小端\n\n## 燧原科技 AI芯片工具开发工程师 一面\n\n> 面试时间40分钟\n\n  * 聊项目\n  * 共享屏幕手撕三道题目，需要打开编译器写测试用例，反转链表，斐波那契数列（空间复杂度O（1）），用栈实现队列\n  * 对操作系统的了解\n\n## Smart 分布式文件系统 面试\n\n> 面试时间1小时\n\n  * 详细询问cpp数据中心项目，有没有在多个服务器测试\n  * OSI网络七层协议\n  * 一致性哈希怎么做的，好处，有没有去做分片测试（增加一个节点或者减少一个节点\n  * 单元测试通常包括哪些内容\n  * HTTPS客户端项目主要工作\n  * 写一个波浪形排序(我不知道怎么降低，我是写了个快排+交换\n\n    \n    \n    // 将给定的数组中的元素进行波浪形排序，要求时间和空间复杂度尽可能低。\n    // 波浪形排序是指：arr[0] >= arr[1] <= arr[2] >= arr[3] <= arr[4] >= arr[5] ...\n    // 例如：\n    // 输入：1, 2, 6, 7, 5, 3, 4\n    // 输出：4, 1, 7, 5, 6, 2, 3\n    \n    \n\n  * 反问环节\n\n> 已挂\n\n## 地平线 智能中间件软件开发 一面\n\n> 面试时间50分钟\n\n  * 自我介绍\n  * C++多态\n  * C++虚函数作用\n  * 构造函数可以是虚函数吗，内联函数可以是虚函数吗，那静态成员函数呢\n  * 什么时候需要纯虚函数\n  * 基类指针和引用转换成派生类指针和引用原理\n  * 基类的智能指针转换成派生类的智能指针是什么原理\n  * C++为什么要引入右值\n  * C++右值引用和左值引用区别\n  * std::move原理\n  * 完美转发原理\n  * C++函数可以返回一个lambda表达式对象吗\n  * shared_ptr, unique_ptr区别\n  * C++多线程编程需要使用什么\n  * lock_guard和unique_lock区别，使用场景\n  * udp套接字编程过程，tcp套接字编程过程\n  * 进程和线程之间的区别\n  * 内核线程和用户线程有什么区别，怎么查看一个线程是否是内核线程\n  * 内核线程可以访问用户态地址空间吗\n  * 有使用过共享内存吗，共享内存是怎么实现的\n  * 虚拟内存是怎么变换成物理内存，MMU，TLB的原理\n  * 进程有哪几种状态\n  * 进程上下文切换过程\n  * 系统调用和进程上下文切换区别\n  * 单例模式如何实现\n  * 工厂模式怎么实现\n  * 一般怎么排查coredump，gdb怎么调试coredump\n  * 知道图像处理的大致流程吗\n  * 了解YUV的存储格式吗\n  * 最小覆盖字串，口述思路\n  * 反问至少三轮面试业务部门工作内容：车载的sensor,camer,通讯,调度等等\n\n> 已挂\n\n## 滴滴 提前批 C++开发 一面\n\n> 面试官人笑眯眯的，然后面完十分钟就挂了\n\n  * 对中断处理理解这里需要重新仔细复盘一下\n  * TSAN工具原理，线程泄漏是什么情况，数据竞争是什么情况\n  * C++怎么处理数据竞争这种情况\n  * TCP重传机制介绍，重传间隔是多少？\n  * HTTPS客户端项目优化思路，你知道零拷贝么，当时有没有使用零拷贝的思路优化\n  * Select, poll, epoll原理\n  * aof日志，rdb持久化原理\n  * aof日志持久化，会丢数据吗\n  * 你觉得我有啥没问到的地方吗？\n  * 剑指 Offer 42. 连续子数组的最大和，除了DP有没有其他方法分治法，不太会写（后面得补补了\n  * 反问\n\n> 已挂\n\n## 腾讯 软件后台开发 QQ社群，社区 一面\n\n> 面试时间50分钟\n\n  * Redis 服务器如何实现的\n  * 一致性哈希原理，如何做分片\n  * redis主从复制模式，除了这个还有什么模式\n  * redis的string是怎么实现的\n  * 存储1亿个QQ号应该采用redis的哪种数据结构，为什么不采用string呢采用hash，hash有优化，string的话占用内存更高\n  * mysql有哪些默认引擎，它们特点是什么\n  * 为什么要采用B+树，而不采用哈希表，或者其他树这些数据结构呢\n  * 一条 update 语句，会加哪些锁，update一行数据和一个范围内的数据呢？update 没加索引会锁全表？\n  * Mysql 隔离级别\n  * MVCC原理\n  * HTTP协议实现\n  * HTTP/1.0 和 HTTP/2.0区别\n  * HTTPS流程\n  * TCP四次挥手过程\n  * 第三次挥手丢失会发生什么情况，内部实现原理是什么？\n  * 进程和线程的区别\n  * 协程的原理，协程有什么好处和坏处\n  * C++多态实现\n  * 和为 K 的子数组用前缀和+哈希表的方式做的时间复杂度，空间复杂度是多少，有没有可以优化复杂度的方法？\n\n> 面完20分钟看已经挂了\n\n## 腾讯 WXG软件后台实习一面\n\n> 面试时间100分钟，上来先写三道算法题，算法题细节要求比较高\n\n  * 字符串转换整数 (atoi)注意去掉硬编码，考虑清楚细节\n  * 合并两个有序链表注意释放掉头节点内存\n  * 某企业有30万的员工，ID为[1-30万]，年终年时需要从这30万名员工中抽取出10万名中奖员工。假设目前有个能够在[0-65535]范围内生成随机数的随机函数rand()，请使用rand()函数编可执行的抽奖程序，为该企业抽出10万名中奖员工的ID\n  * KCP协议原理\n  * TCP拥塞控制过程，TCP拥塞控制是降低发包频率还是减小发送窗口\n  * 内核网络收包过程，这个过程中中断处理的作用，后续协议栈是怎么处理的\n  * 硬中断，软中断\n  * DMA拷贝会占用总线么\n  * 反问环节技术栈和业务内容微信技术架构，主要C++\n\n## 腾讯 WXG软件后台实习二面\n\n> 面试时间100分钟，上来先写三道算法题\n\n1.一个文件内有10亿个32位正整数，请从大到小去重后输出到另一个文件\n\n2.倒转单链表（在原链表上倒转）struct LinkNode { int value; struct LinkNode * next;};\n\n3.给定两个字符串s和t，其中t是s的子字符串。s的子字符串是指字符都取自s并且保持s中位置的相对顺序，但不要求顺序是连续的。比如，s=\"abcdef\"，t=\"bd\"。要求找出t在s中匹配的子字符串数量。\n\n比如：Input：s=\"rabbbit\", t=\"rabbit\"Output：3\n\nrab b bitra b bbitrabb b it\n\n不同的子序列\n\n  * HTTPS项目优化思路\n  * 线程池设计\n  * Linux 下排查死锁的方式\n  * Linux 给定一个二进制可执行文件，排查它是否可能存在内存泄漏\n  * C++ 多态\n  * 构造函数可以被声明为虚函数吗？析构函数呢\n  * 反问环节\n\n> 已挂\n\n## 腾讯安全 软件后台开发 一面\n\n> 面试一小时\n\n  * 自我介绍\n  * HTTPS项目优化，为什么要做这个优化\n  * 内存泄漏排查怎么做\n  * gdb调试的时候，如果没有任何信息，有当前的内存地址和源代码，怎么做调试\n  * 正向代理，反向代理\n  * Nginx知道么\n  * MYSQL事务怎么实现的？\n  * TCP四次挥手过程\n  * 出现Time_wait状态怎么办\n  * 为什么不找数据分析，数据开发的工作，而要投递我们这\n  * 你个人优点和缺点，你的缺点你现在是怎么改进的？\n  * 手撕LRU\n  * 反问环节主要做腾讯云服务器的安全\n\n## 腾讯安全 软件后台开发 二面\n\n> 面试时间69分钟\n\n  * 自我介绍\n  * 21\\. 合并两个有序链表\n  * 53\\. 最大子数组和\n  * 介绍自己过往经历中觉得做的最好的项目\n  * 还有什么其他能改进的地方？DPDK原理\n  * traceroute原理\n  * 输入网址到网页显示，期间发生了什么\n  * TCP三次握手过程，为什么不是两次或者四次\n  * SYN发送太快有什么问题\n  * 实现一个并发安全的hashmap应该怎么考虑，（先确定哈希冲突方式，再确定如何加锁\n  * mysql的索引实现方式\n  * mysql的哈希表的扩容方式\n  * 操作系统进程内存模型实现\n  * 逻辑地址到物理地址转换过程\n  * 个人职业发展规划\n  * 个人优点，缺点\n  * 为什么不考虑做深度学习，大模型相关的算法工作\n  * 个人曾经遇到最大的困难，怎么解决这个问题的？还有什么别的学习方式么。\n  * 反问CSIG的部门，分析网络流量有无威胁\n\n## 超参数科技 后台开发工程师 一面\n\n> 面试时间1小时\n\n  * 自我介绍\n  * 实习时间为什么这么短\n  * 介绍自己项目\n  * 增量数据传输场景题，怎么设计数据结构\n  * 一个矩形n × m，全为1，给一个(x,y),半径r，将半径r内的点改为0\n\n> 已挂\n\n## 华大 eda软件开发 面试\n\n> 面试时间50分钟，五个面试官\n\n  * 自我介绍\n  * 复盘4道笔试算法题目\n  * 右值引用，完美转发\n  * Vector push_back n 个元素，怎么证明这个过程时间复杂度是O（n)，数学的方式\n  * 快速排序和堆排序时间复杂度都是O（logn)，为什么快速排序叫快排，为什么在平均情况下快速排序比堆排序要优秀？\n  * 你个人求职意愿\n  * 介绍你自己一个难度比较大的项目\n  * 数据中心项目目的和难点\n  * 反问环节业务内容，新人培养\n\n## 拓竹科技 C++软件开发 一面\n\n> 面试45分钟左右，面试官网络较差，后续换的电话面试\n\n  * 自我介绍\n  * C++ 模板特化\n  * 网络方面开发你主要擅长哪些\n  * 线程泄漏是什么\n  * TSAN工具原理\n  * 你对操作系统内存管理有哪些理解\n  * 内存跟文件怎么建立关系\n  * 一个进程运行的时候，内存跟进程的程序文件有没有关系\n  * 实习工作内容\n  * 最长递增子序列\n\n## 拓竹科技 C++软件开发 二面\n\n> 面试50分钟\n\n  * 自我介绍\n  * HTTPS客户端项目拷打\n  * C++lambda表达式，lambda表达式开销\n  * C++智能指针，介绍一下\n  * C++右值引用\n  * C++11的enumItem 10:优先考虑限域枚举而非未限域枚举 - Effective Modern C++\n  * 你说一下自己的优点和缺点\n  * 对3D打印行业的了解\n  * 你喜欢DIY么\n  * 反问环节新人培养半年有个mentor,三个月试用期\n\n## 达摩院 C++软件开发 一面\n\n> 面试40分钟\n\n  * 自我介绍\n  * 介绍一个你觉得自己做的难度比较高的项目\n  * pybind和cython哪个封装损失的性能少\n  * 异步IO有使用过么\n  * 多路复用原理\n  * 编辑距离\n  * 被围绕的区域\n  * 你对未来的规划\n  * 你们实验室有没有论文发表的要求\n  * 反问\n\n> 已挂\n\n## 东方财富 C++服务端软件开发 一面\n\n> 面试时间30分钟\n\n  * 你对内存泄漏理解，怎么处理内存泄漏\n  * C++菱形继承问题\n  * HTTP协议理解\n  * HTTPS过程\n  * 对称加密和非对称加密作用\n  * 懒汉式单例模式怎么实现，线程安全吗\n  * 寻找链表的中间节点，白纸手写\n\n> 已挂\n\n## 蔚来 中间件开发 笔试\n\n  * 在二叉树中找到一个节点的后继节点__牛客网\n  * 二叉树中的最大路径和\n\n## 莉莉丝 服务端软件开发 笔试\n\n  * 给定一个n个点和m条边的无向图，点编号从1到n，图中不含重边和自环。请你对给定图进行判断，如果该图是一个仅有一个环的连通图，则输出YES，否则输出NO。第一行输入两个整数n,m，接下来m行，每行包括两个整数a,b表示a和b之间存在一条无向边。类似下面这个链接做法*********************************************\n  * 输出每个数左边比它小的第一个数(单调栈)输出每个数左边比它小的第一个数(单调栈)_alex1997222的博客-CSDN博客\n  * 多重背包**************************************************************\n\n## 莉莉丝 服务端软件开发 一面\n\n  * 删除整数数组中一个数，O（1）空间，O(N)\n  * http网站的登录（原理）过程是怎么做的？手机扫二维码，PC端浏览器登录成功\n  * TSAN原理\n\n## 莉莉丝 服务端软件开发 二面\n\n> 面试时间30分钟\n\n  * 自我介绍\n  * 介绍一下你本科和研究生学过的课程\n  * 编译原理和汇编掌握怎么样（我说不熟悉），那你擅长什么课程（网络，OS相对擅长）\n  * 虚拟地址\n  * 64位CPU为什么会比32位CPU快\n  * GPU和CPU区别\n  * 硬盘传输速度，固态硬盘和机械硬盘传输速度\n  * 网卡传输速率是多少\n  * 数据库你了解哪些，介绍一下你mysql掌握的\n  * 你参加过什么社团么\n  * 你喜欢看什么书\n  * 能不能来上海实习，来上海实习学校有事情怎么办，你怎么平衡工作和学习\n  * 反问环节\n\n## 西安三星电子研究所 平台软件开发 一面\n\n> 三位女面试官，面试时间30分钟\n\n  * 英文面试：说一下你的爱好（下面是中文的\n  * Linux IO 栈了解么\n  * 内核同步机制介绍一下\n  * 中断处理介绍一下\n  * malloc和new区别\n  * 虚拟内存\n  * 多级页表的作用\n  * 静态库，动态库区别\n  * 堆排序，描述一下\n  * 描述一下项目优化过程\n  * 反问环节\n\n## 吉比特 游戏研发工程师 笔试\n\n  * 通过投票对团队排名\n  * Game of Sum - 洛谷 | 计算机科学教育新生态\n\n> 已挂\n\n## 小米 **整车架构软件开发工程师 - Linux-汽车** 笔试\n\n注意字符串提取\n\n    \n    \n    #include <iostream>\n    #include <sstream>\n    #include <vector>\n    \n    int main() {\n        std::string input = \"1950:10,2000:15,3000:9\";\n    \n        std::vector<int> freq;\n        std::vector<int> loss;\n    \n        std::stringstream ss(input);\n        std::string segment;\n    \n        while (std::getline(ss, segment, ',')) {\n            std::stringstream pair_ss(segment);\n            std::string freq_str, loss_str;\n    \n            std::getline(pair_ss, freq_str, ':');\n            std::getline(pair_ss, loss_str, ':');\n    \n            freq.push_back(std::stoi(freq_str));\n            loss.push_back(std::stoi(loss_str));\n        }\n    \n        // 打印结果\n        for (int i = 0; i < freq.size(); ++i) {\n            std::cout << \"freq[\" << i << \"] = \" << freq[i] << std::endl;\n            std::cout << \"loss[\" << i << \"] = \" << loss[i] << std::endl;\n        }\n    \n        return 0;\n    }\n    \n    \n\n  * 1665\\. 完成所有任务的最少初始能量\n\n## 银泰百货 C++ 笔试\n\n  * 206\\. 反转链表\n  * 221\\. 最大正方形\n  * 498\\. 对角线遍历\n\n## 迈瑞 软件开发工程师 一面\n\n> 面试时间30分钟\n\n  * 自我介绍\n  * 介绍一下自己经历\n  * 介绍自己项目，如果你现在来重新写一遍这个项目你会考虑怎么优化\n  * 你项目中遇到的最大困难是什么，现在有更好的解决思路吗\n  * 为什么投递武汉，看你是山西人\n  * 自己的职业规划，你认为什么样的公司是高科技公司\n  * 反问新人培养机制？1周公司培养，之后是部门培养，会有C++专业考试，根据考试结果划分到不同岗位，有对实时性要求高的岗位，也有驱动开发的，还有QT开发的\n\n## 竞技世界 游戏后端软件开发 一面\n\n> 面试时间35分钟\n\n  * 介绍一段自己觉得做的比较好项目\n  * 一致性哈希原理\n  * Select 和 epoll区别\n  * 多路复用场景下套接字是非阻塞的还是阻塞的\n  * 非阻塞条件下，send返回值>0, <0, =0含义\n  * 使用epoll 的时候 EWOULDBLOCK 或 EAGAIN 错误 区别\n  * linxu平台下怎么去看进程，以及进程占用的内存\n  * 怎么去查看一个进程占用的句柄数（记不清了这\n  * gdb调试的时候怎么去查看程序的堆栈\n  * 多线程下gdb调试时候，怎么查看线程情况，切换线程\n  * Linux kill 信号含义懂么，常见信号代表什么\n  * 20亿个数，找出其中最大的1000个，有什么方法（有内存限制）\n  * 反问环节业务内容数据中台，所有游戏数据都汇聚到这，缓存系统啥的也会做，QPS晚间能达到几百万\n\n## 菜鸟 java开发 网络电话面试\n\n> 面试时间1小时\n\n  * 自我介绍\n  * 我们这边主要工作语言是Java接受么，接受来杭州么？\n  * 有使用java写过项目吗？\n  * 就目前这几段经历，你觉得你更喜欢哪种工作，介绍一下实习期间的主要工作。\n  * 为什么要去做个优化，这个优化对你们有什么好处么？有没有被生产环境实际去使用？\n  * websocket客户端在哪些情况下要增加重连机制？为什么要去增加重连机制？\n  * 服务端升级的时候，怎么避免带来给客户端造成影响？\n  * hashMap的实现底层原理？\n  * 设计模式有了解吗，说一下你的项目有没有使用过工厂模式\n  * 有没有使用spring框架\n  * 微服务了解么，注册中心作用\n  * 了解VIM编辑器吗\n  * 对Mysql了解吗，执行索引计划会查看么\n  * 说一下网站（扫码或者输入密码）账号登录过程登录成功以后，我另启了一个页面，这样页面为什么是保持登录状态呢？（我猜是使用了cookie\n  * 你对python的了解\n  * 研究生期间主要做的工作性格预测，中文文本是怎么进行分词，训练的时候有考虑数据的向量维度吗多模态摘要，图片信息是怎么处理的\n  * 对音视频领域了解吗?webrtc有学习过吗？\n  * 反问业务内容菜鸟内部的客服系统\n\n## 淘天阿里妈妈 C/C++研发工程师 一面\n\n> 面试时间1小时\n\n  * 自我介绍\n  * 个人习惯的C++版本\n  * 完美转发作用\n  * 完美转发一般怎么实现\n  * vector本身存放位置，元素存放位置（栈还是堆上\n  * linux你有没有遇到过coredump问题，怎么去调试解决\n  * 2g内存，64位机器，可以申请1T内存吗\n  * 1T文件中存放着各种字符串，统计不重复字符串个数\n  * 高考一本分数线确定，就是有1000w考生，假设按照第100w考生的分数作为一本线\n  * 基数排序\n  * 多线程，实例化C, B, A; 按A, B, C顺序打印， 线程退出的时候按照C, B, A顺序打印\n  * 反问环节主要业务内容：C++推荐系统（纯内存，推荐速度要求比搜索引擎更高，ms级别），技术栈以C++/Go为主\n\n> 已挂\n\n## 大普微 一面\n\n> 面试时间30分钟\n\n  * 项目经历介绍为主\n\n## 大普微 二面\n\n> 面试时间30分钟\n\n  * 自我介绍\n  * 项目介绍\n  * 单元测试框架，嵌入式环境下做单元测试\n  * DPDK原理，怎么去用来优化你的项目\n  * 嵌入式环境下，设计日志系统怎么设计\n\n## 绿盟 研发工程师-后端 一面\n\n> 面试时间30分钟\n\n  * 自我介绍\n  * 性能优化介绍\n  * 内存分析怎么做的，稳定性分析怎么实现的\n  * tcp协议，http协议有没有自己去实现过，底层包拼接了解么\n  * 使用Linux遇到coredump情况怎么解决\n  * 守护进程怎么实现？\n  * Mysql 的索引，事务，锁介绍一下\n  * 多线程编程有使用哪些锁\n  * 反问业务内容？网络流量分析，预防威胁\n\n## 阿里 智能互联 C/C++研发工程师 一面\n\n> 应该是简历面，从电话形式改成视频了，面试28分钟\n\n  * 自我介绍\n  * 项目和经历介绍\n  * 单元测试怎么写的，考虑哪些地方\n  * 相机软件测试工具怎么开发的\n  * 最近在看什么书，学习什么，linux内核有学什么吗\n  * 内核内存分配原理，mmap的原理\n  * 反问主要业务做智能硬件设备，C++在这边主要做一些跨段的开发，会结合大模型或者AI做一些工作\n\n## 阿里 智能互联 C/C++研发工程师 二面\n\n> 电话面50分钟\n\n  * 自我介绍\n  * 项目和经历询问\n  * 了不了解websocket协议\n  * RTC了解吗\n  * 设备重启怎么获知当前时间\n\n## 美团 到家广告 一面\n\n> 面试时间57分钟\n\n  * 自我介绍\n  * 接受学习java语言么\n  * 旋转数组查找值，一次二分解决\n  * C++是怎么实现多态的\n  * 各个排序（冒泡，选择，归并，堆排序，快速排序）算法使用在什么场景下，基于比较的排序算法为什么最快是O（nlogn)\n  * STL容器底层的排序是怎么实现的\n  * 外部排序怎么做\n  * 缺页异常\n  * 异常，中断区别\n  * linux内核的五个组成部分\n  * 进程调度算法有哪些，进程的优先级反转是什么\n  * linux下C++线程怎么是实现的\n  * 红黑树，二叉平衡树介绍\n  * B+树，B树区别\n  * TCP三次握手，四次挥手过程\n  * 介绍你自己做过的比较好的项目\n  * 反问环节美团外卖的广告相关，需要使用java语言\n\n> 已挂\n\n## 格兰菲 驱动开发 一面\n\n> 面试时间1小时\n\n  * 自我介绍\n  * 项目和经历仔细询问（面试官从上往下问\n  * dma_buf\n  * 中断概念\n  * 缺页异常是什么\n  * 内核实现同步的手段\n  * 自旋锁适合程序有sleep的情况吗\n  * 虚拟地址，物理地址\n  * 虚拟内存作用\n  * C++多态实现\n  * this指针介绍一下原理\n  * 成员函数调用delete this有什么问题\n  * C++新特性介绍一下\n  * 共享屏幕手撕反转链表\n\n> 已挂\n\n## 荣耀 通用软件开发 一面\n\n> 面试30分钟\n\n  * 接受转java么，我们这个部门是负责云服务相关开发\n  * 虚拟地址\n  * LRU,LFU实现原理描述\n  * Mysql 怎么实现数据并发访问的\n  * Mysql，获取每个用户对应的每个月流量统计综合，按月排序，SQL语句怎么写\n  * Mysql 索引数据结构\n  * 为什么B+树的节点，双向链表连起来\n  * Mysql 左连接，右连接，全连接 区别\n  * 网络协议分层情况\n  * TCP头部字段有哪些\n  * 你是怎么去学习这个新技术\n  * 工作和学校学习最大的区别\n  * 反问\n\n## 哔哩哔哩笔试\n\n  * 基本计算器III\n  * 复原IP地址\n  * 问答请设计一张用户表存储用户信息，信息需要包含学校信息，并查询注册用户最多的三个学校名称，如果注册用户数相等则都需要输出设计一张表存储用户之间的关注信息，并查询用户A，用户B，用户C共同关注的信息查询被关注数最高的前100名客户，如果关注数相同则根据注册时间进行排序。如何实现高并发的排行查询？请选择合适的中间件，并简单阐述技术方案。为保障首页稳定，需要对接口请求进行限流，请问有哪些常用的限流算法？多节点下如何进行限流？新年晚会邀请100名学生参加活动，如何设计报名系统，使得系统能够满足全国大学生的报名并保证名额不超发\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/535753747872415744?sourceSSR=users",
        "title": "2024秋招，康冠科技软件测试工程师面试",
        "content": "10.11更新\n\n9月25号上午发的笔试题，大题写的一般，直到10月11日才发oc，总包16w\n\n\\--------------------------------------------------------------------------------------------------------------------------------------\n\n响应速度还是挺快的，9月21号晚上11点投的，22号上午和我约23号上午的面试，我有事错过\n\n24号晚上约25号上午的面试\n\n**提问：**\n\n1、自我介绍\n\n2、实习的时间安排\n\n3、实习的任务安排\n\n4、为什么选择软件测试岗位？\n\n5、软件测试需要耐心、细心、专心，繁琐，一个工作需要做好几天\n\n6、自动化，编测试脚本写过吗？\n\n7、英语等级，身高\n\n8、计算机语言，java学的怎么样\n\n9、java、python、C测试题选一个\n\n10、加班时间能接受多久，周六加班\n\n11、薪资要求，含加班\n\n12、准备考研吗？有挂科吗？\n\n**反问：**\n\n1、上班时间：早八点半到晚五点半，午休两小时，其他时间算加班\n\n2、介绍一下公司，深圳、惠州工业园，主要是交互式电子白板，主要是安卓，底层是C\n\n3、去公司有专门培训，产品的应用场景，要测哪些东西，编写用例，一个半月培训，有食堂宿舍，运动场所，员工四人间，上床下桌\n\n4、多久到岗，今年可以来最好早点，三个月试用期工资一样\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/535581489552011264?sourceSSR=users",
        "title": "百度前端面经",
        "content": "一面\n\n  1. vue的生命周期\n  2. 第一次渲染页面触发哪几个生命周期\n  3. created 和 mounted 的区别\n  4. 插槽的使用场景\n  5. vue组件之间的通信\n  6. SPA应用\n  7. 首屏优化\n  8. js的基础数据类型\n  9. 基本数据类型和引用数据类型的存储\n  10. js的延迟加载的方式（defer 和 async\n  11. 行内元素都有哪些？块级元素有哪些\n  12. css的引用方式\n  13. import 和 link 引用 css 的区别\n  14. 手写：找到出现频率最高的字符\n  15. 手写：红绿灯\n\n二面\n\n  1. let 和 var 作用域\n  2. await 和 promise\n  3. map是并行还是串行的\n  4. 手写：统计出现两次的元素\n  5. less 好在哪\n  6. 打包和线下编译的过程\n  7. package.json 的最重要的几个属性\n  8. dependencies 和 devDependencies 的区别\n  9. 有没有用过 alpha 和beta 版本的包，有什么问题\n\n三面，纯聊天\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/535505156352282624?sourceSSR=users",
        "title": "雷火0924笔试 400/400",
        "content": "9646516\n\nT4是近期做过的最难的笔试压轴题。\n\n1.给球员得分记录找mvp，按照题意模拟即可，弄个map存下分数\n\n    \n    \n    #include <bits/stdc++.h>\n    using namespace std;\n    using ll = long long;\n    const int INF = 0x3F3F3F3F;\n    const int maxn = 2e5 + 555;\n    const int MOD = 1e9 + 7;\n    int32_t main() {\n        ios::sync_with_stdio(false);\n        cin.tie(0);\n        cout.tie(0);\n        cout.precision(10);\n        cout << fixed;\n        int n;\n        cin >> n;\n        string ta, tb;\n        cin >> ta >> tb;\n        map<string, int> tm;\n        map<string, map<string, int>> pm;\n        int mvp_val = -1e9;\n        string mvp;\n        for (int i = 0; i < n; i++) {\n            string player, team;\n            int val;\n            cin >> player >> team >> val;\n            tm[team] += val;\n            pm[team][player] += val;\n            if (pm[team][player] > mvp_val) {\n                mvp_val = pm[team][player];\n                mvp = player;\n            }\n        }\n        if (tm[ta] == tm[tb]) {\n            cout << \"ended in a draw\" << endl;\n        } else if (tm[ta] > tm[tb]) {\n            cout << ta << endl;\n        } else {\n            cout << tb << endl;\n        }\n        cout << mvp << endl;\n        return 0;\n    }\n    \n\n2.给出隐身逻辑，有草丛隐身和buff隐身两种，判断A是否能看到B。先处理下每个人物i是否在草丛j中，查询的时候先看b是否开了buff，然后看ab是否是一伙的，之后再看b是否在草丛中，如果在再看ab在不在一个草丛中。我用了bitset优化，暴力应该也可以。注意B不在草丛的情况，没注意的话会卡56%\n\n    \n    \n    #include <bits/stdc++.h>\n    using namespace std;\n    using ll = long long;\n    const int INF = 0x3F3F3F3F;\n    const int maxn = 2e5 + 555;\n    const int MOD = 1e9 + 7;\n    struct user {\n        double x, y;\n        int buff, cls;\n        bitset<200> st;\n    };\n    vector<user> V;\n    bool inside_circle(double cx, double cy, double cr, double x, double y) {\n        double ox = x - cx;\n        double oy = y - cy;\n        double d = ox * ox + oy * oy;\n        return d <= cr * cr;\n    }\n    bool inside_rect(double A, double B, double C) { return A <= B && B <= C; }\n    int32_t main() {\n        ios::sync_with_stdio(false);\n        cin.tie(0);\n        cout.tie(0);\n        cout.precision(10);\n        cout << fixed;\n        int n, m, q;\n        cin >> n >> m >> q;\n        for (int i = 0; i < n; i++) {\n            user s;\n            cin >> s.x >> s.y >> s.buff >> s.cls;\n            V.push_back(s);\n        }\n        for (int i = 0; i < m; i++) {\n            int t;\n            cin >> t;\n            if (t == 0) {\n                double cx, cy, cr;\n                cin >> cx >> cy >> cr;\n                for (auto &u : V) {\n                    u.st[i] = inside_circle(cx, cy, cr, u.x, u.y);\n                }\n            } else {\n                set<double> sx, sy;\n                for (int j = 0; j < 4; j++) {\n                    double x, y;\n                    cin >> x >> y;\n                    sx.insert(x);\n                    sy.insert(y);\n                }\n                assert(sx.size() == 2);\n                assert(sy.size() == 2);\n                for (auto &u : V) {\n                    u.st[i] = inside_rect(*sx.begin(), u.x, *next(sx.begin())) &&\n                              inside_rect(*sy.begin(), u.y, *next(sy.begin()));\n                }\n            }\n        }\n        while (q--) {\n            int a, b;\n            cin >> a >> b;\n            a--;\n            b--;\n            if (V[b].buff) {\n                cout << 0 << endl;\n            } else if (V[a].cls != V[b].cls) {\n                if (!V[b].st.count()) {\n                    cout << 1 << endl;\n                } else {\n                    if (((V[a].st & V[b].st).count())) {\n                        cout << 1 << endl;\n                    } else {\n                        cout << 0 << endl;\n                    }\n                }\n            } else {\n                cout << 1 << endl;\n            }\n        }\n        return 0;\n    }\n    \n\n3.给一堆物品，每个物品有两个值a和b，求最多取出k个物品的条件下，取出a总和为y的物品，最小的b总和是多少。a和y有正有负，k<=5。\n\n这题数据水了，暴力DP 100ms轻松过，正解可能需要折半搜索优化下。\n\n    \n    \n    #include <bits/stdc++.h>\n    using namespace std;\n    using ll = long long;\n    const int INF = 0x3F3F3F3F;\n    const int maxn = 2e5 + 555;\n    const int MOD = 1e9 + 7;\n    const char *FAIL_FLAG = \"Cannot Make It!\";\n    int32_t main() {\n        ios::sync_with_stdio(false);\n        cin.tie(0);\n        cout.tie(0);\n        cout.precision(10);\n        cout << fixed;\n        int n, k, x, y;\n        cin >> n >> k >> x >> y;\n        if (x == 1)\n            y = -y;\n        vector<pair<int, int>> V;\n        for (int i = 0; i < n; i++) {\n            int v, a, b;\n            cin >> v >> a >> b;\n            if (a == 1)\n                b = -b;\n            V.push_back({b, v});\n        }\n        vector<unordered_map<int, int>> F(6);\n        F[0][0] = 0;\n        for (auto [a2, b2] : V) {\n            for (int i = k; i >= 0; i--) {\n                for (auto [a, b] : F[i - 1]) {\n                    if (!F[i].count(a2 + a)) {\n                        F[i][a2 + a] = b + b2;\n                    } else {\n                        F[i][a2 + a] = min(b + b2, F[i][a2 + a]);\n                    }\n                }\n            }\n        }\n        ll ans = 1e18;\n        for (int i = 0; i <= k; i++) {\n            if (F[i].count(y)) {\n                ans = min(ans, 1LL * F[i][y]);\n            }\n        }\n        if (ans < 1e18) {\n            cout << ans << endl;\n        } else {\n            cout << FAIL_FLAG << endl;\n        }\n        return 0;\n    }\n    \n\n4.给一个字符串矩阵(n*m~1e5)，每次移动可以上下左右走，也可以瞬移到相同字符处，代价都是1,给出1e5个询问，求两点最短路。这题出的真心不错，一眼就能看到思路，但是需要处理很多细节。\n\n首先先加26个辅助点，代表a-z，每个辅助点连向对应字符位置，由于辅助点要一来一回，为了方便起见，将辅助点边权设为1，普通边边权为2，求出答案后除以2.\n\n从a到b要么不使用传送，那么答案是曼哈顿距离，要么至少使用一次瞬移。此时A到B的答案为A->中间点X->辅助点->B。此时可以枚举辅助点的类型，这样辅助点->B这段距离可以预处理出来。中间点X->辅助点代价是1。A->中间点X代价是A到最近的这个类型的点的距离，这可以bfs预处理出来。\n\n    \n    \n    #include <bits/stdc++.h>\n    using namespace std;\n    using ll = long long;\n    const int INF = 0x3F3F3F3F;\n    const int maxn = 2e5 + 555;\n    const int MOD = 1e9 + 7;\n    const int dx[] = {1, -1, 0, 0};\n    const int dy[] = {0, 0, 1, -1};\n    #define IDX(x, y) (((x) * (m)) + (y))\n    void dijk(int s, vector<int> &D, const vector<vector<pair<int, int>>> &G) {\n        set<pair<int, int>> st;\n        st.insert({0, s});\n        D[s] = 0;\n        while (!st.empty()) {\n            auto [dis, pos] = *st.begin();\n            st.erase(st.begin());\n            if (D[pos] < dis) {\n                continue;\n            }\n            for (auto [to, cost] : G[pos]) {\n                if (D[to] > cost + dis) {\n                    D[to] = cost + dis;\n                    st.insert({D[to], to});\n                }\n            }\n        }\n    }\n    vector<int> chr[26];\n    int n, m;\n    void bfs(int ch, vector<int> &dis, const vector<vector<pair<int, int>>> &G) {\n        queue<pair<int, int>> q;\n        for (int i : chr[ch]) {\n            q.push({0, i});\n            dis[i] = 0;\n        }\n        while (!q.empty()) {\n            auto [d, idx] = q.front();\n            int x = idx / m;\n            int y = idx - x * m;\n            q.pop();\n            for (int k = 0; k < 4; k++) {\n                int x2 = x + dx[k];\n                int y2 = y + dy[k];\n                if (x2 >= 0 && x2 < n && y2 >= 0 && y2 < m) {\n                    if (dis[IDX(x2, y2)] > d + 1) {\n                        dis[IDX(x2, y2)] = d + 1;\n                        q.push({d + 1, IDX(x2, y2)});\n                    }\n                }\n            }\n        }\n    }\n    int32_t main() {\n        ios::sync_with_stdio(false);\n        cin.tie(0);\n        cout.tie(0);\n        cout.precision(10);\n        cout << fixed;\n        cin >> n >> m;\n        vector<string> V(n);\n        for (int i = 0; i < n; i++) {\n            cin >> V[i];\n        }\n        vector<vector<pair<int, int>>> G(n * m + 100);\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                chr[V[i][j] - 'a'].push_back(IDX(i, j));\n                for (int k = 0; k < 4; k++) {\n                    int x = i + dx[k];\n                    int y = j + dy[k];\n                    if (x >= 0 && x < n && y >= 0 && y < m) {\n                        G[IDX(i, j)].push_back({IDX(x, y), 2});\n                    }\n                }\n                G[IDX(i, j)].push_back({n * m + V[i][j] - 'a', 1});\n                G[n * m + V[i][j] - 'a'].push_back({IDX(i, j), 1});\n            }\n        }\n        vector<vector<int>> dis(26, vector<int>(n * m + 30, INF));\n        for (int i = 0; i < 26; i++) {\n            dijk(n * m + i, dis[i], G);\n        }\n        vector<vector<int>> dis2(26, vector<int>(n * m + 30, INF));\n        for (int i = 0; i < 26; i++) {\n            bfs(i, dis2[i], G);\n        }\n        int q;\n        cin >> q;\n        while (q--) {\n            int x0, x1, y0, y1;\n            cin >> x0 >> y0 >> x1 >> y1;\n            x0--;\n            x1--;\n            y0--;\n            y1--;\n            int ch = V[x1][y1] - 'a';\n            ll ans = abs(x0 - x1) + abs(y0 - y1);\n            for (int i = 0; i < 26; i++) {\n                ll step1 = dis2[i][IDX(x1, y1)] * 2;\n                ll step2 = 1;\n                ll step3 = dis[i][IDX(x0, y0)];\n                ll now = step1 + step2 + step3;\n                ans = min(ans, now / 2);\n            }\n            cout << ans << endl;\n        }\n        return 0;\n    }\n    \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/535220690824237056?sourceSSR=users",
        "title": "秋招C++之三战百度面试官",
        "content": "## 9.23一面\n\n50分钟左右，自我介绍+问项目+写题+问八股。\n\n  * 写题是一道二叉树路径最大权值和，比较简单，牛客上写完需要直接提交判题。\n  * 介绍一下智能指针的实现\n  * 进程间通信的方式\n  * 协程是否了解？协程一定优于线程吗\n  * TCP和UDP的区别\n  * DNS用的是TCP还是UDP\n  * 考虑过之后走什么方向吗\n  * 怎样做的性能优化\n\n## 9.23二面\n\n30多分钟，自我介绍+问项目+问八股+写题。\n\n  * 写题是二叉树的层序遍历，每过一层顺序反转一下，不需要运行。\n  * 介绍一下智能指针\n  * 介绍一下常见的排序算法\n  * 静态数组和new数组的区别\n  * 虚表了解吗，原理是怎样的\n  * 程序编译的具体过程介绍一下\n  * 静态库和动态库有什么区别\n  * map和unordered_map的区别\n  * 多线程访问map的冲突怎么解决？有了解过java和go的XXXmap吗\n  * 析构函数可以不是虚函数吗\n  * 数组和链表的区别是什么，各有什么应用场景\n\n## 9.23三面\n\n50分钟左右，自我介绍+问项目+问八股+写题。\n\n  * 写了一道链表的局部反转，需要提交。\n  * 写一个工厂模式的demo，不用运行。\n  * 设计模式了解吗，介绍一下熟悉的设计模式\n  * 是否有看过代码规范的文档\n  * 对互联网目前的发展形势了解吗\n  * 了解GPT吗，自己有没有用过\n  * 自己的职业规划是什么样的\n\n第三次走百度的流程了，整体的面试体验还不错，三个面试官都开摄像头了，好！就是连着面有点难顶，等结果吧。\n\n算上提前批，百度已经3笔6面了，给个offer不过分吧[许愿]\n\n![](https://uploadfiles.nowcoder.com/images/20230923/366704875_1695478532602/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n11.7，终于从面试变成offer评估了😅，度子你是真能泡啊。\n\n11.22，offer call。给了个小sp吧应该是，a不了。\n\n11.24，拒了。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/535197169268068352?sourceSSR=users",
        "title": "百度一二面",
        "content": "# 百度\n\n## 投递2023-09-06\n\n## 笔试2023-09-12\n\n。。。忘了，只记得选择题很难。\n\n## 面试2023-09-23\n\n### 一面\n\n**自我介绍。**\n\n**讲一下Transformer的主要结构。（Self-\nAttention+FFN）Encoder和Decoder的区别。（主要区别在Attention里，encoder是双向的、decoder是单向的）还了解哪些Attention机制？（讲了一个SE-\nNet，其他的就不了解了）**\n\n**了解哪些多模态学习的方法？（CLIP、ALBEF、VLMo）讲一下CLIP。** **除了CLIP的ITC损失，还有哪些损失？（ITM、MLM）**\n**MLM、ITM损失具体怎么实现？（感觉都是交叉熵）LM和MLM的区别？（LM单向预测，MLM双向预测）** **多模态学习的关键？（编码和对齐）**\n**了解哪些对齐的方法？（不了解TAT）**\n\n**大模型微调与普通微调的区别。（大模型微调指冻住大部分参数，仅选择部分参数，或添加部分参数进行微调）了解哪些大模型微调方法。（P-tuning、LoRA）**\n\n**挑一个项目讲。（解决问题+创新之处+结果）**\n\n**手撕：**\n\n二叉树的所有路径和之和。\n\n二叉树：每个节点取值为0~9。\n\n路径：根节点到叶子节点。\n\n路径和：路径上每个节点的数拼接。如路径为“1->3->2”，路径和为132。\n\n求这颗二叉树所有路径和之和。\n\n**你们专业主要学习了什么课程？（模式识别、机器学习、高级企业级开发技术）**\n\n**投的什么岗位？（机器学习、数据挖掘、自然语言处理）讲一下自然语言处理中的词嵌入。（词袋模型、TF-IDF、Word2Vec、ELMO、BERT）**\n\n**有无实习？（无TAT）**\n\n**反问：**\n\n有什么需要提高的地方？\n\n简历写了很多，但要深入了解某个方法。\n\n### 二面\n\n拷打。被共享了捏。\n\n**自我介绍。** **介绍两个项目。深挖。**\n\n**BERT和GPT的区别。**\n\nBERT使用的为Transformer Encoder、GPT使用的是Transformer Decoder。\n\n**介绍大模型微调。有没有使用过DeepSpeed。（没有）LoRA介绍（讲得不好）。**\n\n>\n> [大模型的训练工具（1）---Deepspeed](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F609865550)\n\nDeepSpeed是微软推出的大规模模型分布式训练工具，主要实现了ZeRO并行训练算法。\n为什么要用DeepSpeed？大模型在训练时，往往需要大量内存来存储中间激活、权重等参数，百亿模型甚至无法在单个GPU上进行训练，使得模型训练在某些情况下非常低效和不可能。这就需要多卡，多个节点进行分布式训练。\n\n大规模深度学习模型训练中，有两个主要的范式：\n\n  * 数据并行\n  * 模型并行\n\n**数据并行** 常见的场景是\n模型大小能够被单个GPU容纳，数据批大小会增加模型的难度。解决方案是，让模型的不同实例在不同GPU和不同批数据上运行。模型每个实例都使用相同的参数进行初始化，但是在前向传递期间，不同批次的数据被发送到每个模型。收集来自每个模型实例的梯度\n并 计算梯度更新，然后更新模型参数 并 更新每个模型实例。\n\n**模型并行** 通过把一个大模型拆分到多个GPU上训练，可以实现模型大小\n超过单个GPU显存的模型训练。这种方法的问题是计算使用效率不高，因为在任何时间点，只有一个GPU正在使用，而其他GPU处于空闲状态。\n\n**BatchNorm和LayerNorm的区别？什么时候用BatchNorm、什么时候用LayerNorm？**\n\n相同之处：\n\n  * 都是常见的归一化技术，可以提升神经网络的训练速度，提高模型的性能。\n  * 都可以通过![](https://www.nowcoder.com/equation?tex=\\\\lambda&preview=true)和![](https://www.nowcoder.com/equation?tex=\\\\beta&preview=true)两个可学习参数来缩放和平移，可学习参数量![](https://www.nowcoder.com/equation?tex=2d&preview=true)，![](https://www.nowcoder.com/equation?tex=d&preview=true)为隐藏层维度。\n\n差异：\n\n  * BatchNorm在batch维度上进行归一化，LayerNorm在feature的维度上进行归一化，\n  * BatchNorm需要保留训练阶段的均值和方差，仅预测时使用；LayerNorm不需要。\n  * BatchNorm一般用于卷积网络，使用于图像、语音等数据；LayerNorm一般用于RNN，使用于序列数据上效果更好。\n\n**Python中参数传递，什么时候是引用，什么时候的数值。（可变对象和不可变对象）**\n\n可变对象传递时，在函数内改变，外部会改变。 不可变对象传递时，在函数内改变，外部不会改变。\n\n**对比学习介绍。（举了个SimCRL的例子）对比学习损失函数有哪些。（不了解，后面搜了一下，InfoNCE、RINCE、ReLIC）**\n\n**手撕：**\n\n复原IP地址。（LeetCode 93)\n\n没有考虑到两个0的情况。 如00000输出应该不包括，00.0.0.0。\n\n"
    }
]