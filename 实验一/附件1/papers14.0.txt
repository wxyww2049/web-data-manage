[
    {
        "url": "https://www.nowcoder.com/discuss/592812306195632128?sourceSSR=users",
        "title": "中软国际（长沙）Java开发实习 一面",
        "content": "1、自我介绍\n\n2、介绍项目\n\n3、controller层web路径访问顺序,前后端的交互流程\n\n4、Dao层涉及的文件\n\n5、mapper和xml文件，怎么关联的\n\n6、怎么理解运用数据库的，举生活例子或代码说明\n\n7、一段代码中，先删a表再删b表有无影响，两表是无关系的\n\n8、实现某一事务的流程所需步骤\n\n9、SQL题：具体用户记录唯一的表中，初始化时用户却产生多条记录，怎么删除多余的（只保留任意一条）\n\n10、vue的特点优势\n\n十六分钟结束，无反问环节\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592809653646475264?sourceSSR=users",
        "title": "北京某小厂面经 java",
        "content": "项目\n\n0.拷打项目\n\n1.大文件上传问题。\n\n2.双token机制\n\n常规八股\n\n1.对springcloud的理解\n\n2.消息队列作用\n\n3.aop在项目中的使用\n\n4.string常用的方法\n\n5.详细讲讲`String#intern`\n\n6.linux怎么部署项目\n\n第二天已oc\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592790344001994752?sourceSSR=users",
        "title": "松鼠ai 一二面 （已OC）",
        "content": "### 一面 2024.2.27\n\n  1. 自我介绍\n  2. 能实习多久\n  3. 项目拷打\n  4. 转链\n  5. 转链接的项目出发点\n  6. 技术选型\n  7. 发号器的实现\n  8. 62进制的实现\n  9. 特殊词屏蔽的实现\n  10. 缓存穿透、缓存击穿、缓存雪崩的区别。\n  11. 如何解决singleflight的原理\n  12. 如何使用efk\n  13. 收集ngix的access日志efk的介绍\n  14. canal的使用\n  15. es拷打\n  16. 论坛\n  17. JWT的原理和优缺点（refresh token 和 黑名单）\n  18. session和JWT的区别\n  19. session的存储问题\n  20. mongoDB\n  21. 帖子排序的实现（zset+仿照Hacker News的算法）\n  22. 计网100-500这些状态码\n  23. 对网关的理解\n  24. tinyint和int的区别\n  25. 主键索引和普通索引的区别\n  26. b+树\n  27. 如何构建字符串的索引\n  28. 字符串作为主键和int作为主键的b+树的区别\n  29. 个人的优缺点\n  30. 如何快速融入职场\n  31. 对于转正的看法\n\n### 二面 2024.2.29\n\n  1. 自我介绍\n  2. 项目中有什么你觉得有启发的吗？（说了一个 简历上之外的 日志收集项目）\n  3. 对于实习工作的期望\n  4. 能接收的工作量是多大\n  5. 实习的期望薪资\n  6. 开始做项目有多久了\n  7. 自己是偏向于工程化还是基础架构？\n  8. 项目上的内容外，还有什么其它想说的吗\n  9. 发号器的实现\n  10. 布隆过滤器的使用和实现\n  11. efk中的 filebeat有什么缺点吗\n  12. 对微服务的理解\n  13. 微服务中的组件\n  14. 市面上的注册中心\n  15. console能当注册中心吗\n  16. go的map的理解\n  17. 引用类型和值类型\n  18. 什么存在堆上，什么存在栈上\n  19. go的GC\n  20. go的G-M-P模型\n  21. 如何保证完成非主协程后，再执行主协程\n  22. 对于context的理解\n  23. 还有用过其他的数据库吗\n  24. mysql中的 int和tinyInt的区别\n  25. int1 和int10 的区别\n  26. 当使用联合索引（a,b,c）时，where a=10 and b>10 and c<100使用其中的什么字段\n  27. mysql的分库分表\n  28. mysql增加字段会锁表吗\n  29. 什么场景适合使用索引\n  30. redis的常用数据结果\n  31. bitmap的使用场景\n  32. hyperloglog的使用场景\n  33. set和zset的底层数据类型是什么\n  34. 502 和 504 的区别，以及什么场景下使用\n  35. Linux指令\n  36. php有了解吗\n  37. 公司选择有什么预期吗\n  38. 个人的规划\n  39. 反问环节\n  40. 选择的小组的工作范围是什么\n  41. 有无房补餐补\n  42. 发什么电脑有无ld和mt带\n  43. 面试的建议\n  44. 对于实习生的期望\n\n29日 下午 五点 告知已OC。\n\n这是鼠鼠大年初八后广投40份后，第一个给我面试的公司。很感激！\n\n我找日常实习算是简单告一段落，接写下来是边实习+边找暑期实习。\n\n加油！\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592776922048761856?sourceSSR=users",
        "title": "多益一面",
        "content": "1.先自我介绍  \n2.讲一下最熟悉的项目  \n3.深挖项目，问的很详细  \n4.看你会Python和java，讲讲这两种语言的区别和优点  \n5.问一下java基础的东西，讲一下多态  \n6.java的动态绑定和静态绑定有了解吗  \n7.有没有了解过jvm，内存溢出机制是什么  \n8.看你用过MySQL，讲一下MySQL的快照读和当前读  \n9.有没有用过limit关键字  \n10.讲一下你用过的场景  \n11.有了解过后端的框架吗  \n12.讲一下spring的注解  \n13.讲一下你用过的springboot的注解  \n14.做个题，子集（力扣原题）  \n太菜了[牛泪]后面的八股答不出来根本，题目用的是循环，忘了回溯怎么用的了[牛泪]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592807956589133824?sourceSSR=users",
        "title": "上海某小厂面经 java",
        "content": "1.拷打项目\n\n场景\n\n2.慢接口排查\n\n3.扫码登录\n\n主要还是拷打项目比较多，场景题没考虑到的面试官也会提醒，面试体验还不错。\n\nupdate: oc\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592770612595023872?sourceSSR=users",
        "title": "2.29数禾科技 日常面经",
        "content": "基本就是根据简历上写的内容来面\n\n1.介绍一下自己的项目\n\n2介绍一下令牌桶算法 还有其他常用的限流算法么\n\n3线程池的工作原理 常用参数\n\n4异步扣减库存 如何扣减失败怎么办\n\n5如何保证mq消费成功 ，如何保证mq的高可用\n\n6假如加入一个取消订单的功能 如何实现\n\n7除了延迟队列还有其他方式取消订单么\n\n8如何进行用户登录的验证\n\n9如何通过threadlocal优化鉴权\n\n10最终点赞数据一直写在redis里么\n\n11讲一下缓存穿透 怎么解决\n\n12做拦截 除了限流 还可以做哪些功能去拦截请求\n\n13如何保证redis和mysql的一致性 高并发情况下如何保证\n\n14 ==与equals区别\n\n15接口和抽象类的区别\n\n16java常用的数据类型 和集合类\n\n17详细讲一下常用的集合类\n\n18动态代理实现方式\n\n19用过的设计模式有哪些\n\n20说一下类加载过程\n\n21spring中如何声明事务\n\n22常用的索引类型 联合索引失效问题 知道为什么么\n\n23redis分布式锁实现的原理 常用的数据类型\n\n24tcp和udp的区别\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592805775475511296?sourceSSR=users",
        "title": "上海某小厂面经 java",
        "content": "写题(只用说思路)\n\n  1. lc20 有效的括号\n  2. lc128 最长连续序列\n\n场景\n\n  1. 主动通知\n  2. 项目中aop怎么用的\n  3. 如何在springboot项目中实现文件上传\n\n3.1 大文件怎么处理\n\n常规八股\n\n  1. jwt组成\n  2. git 常用命令\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592761554144112640?sourceSSR=users",
        "title": "b站-Java后端or数开-日常实习-一/二面",
        "content": "> 线下面试，没录音，很多题目记不得了\n\n# 题目\n\n  1. jvm的内存模型？String s = new String(\"abc\")时发生了什么？\n  2. jvm的垃圾回收器及使用场景。\n  3. 介绍下依赖注入DI\n  4. 介绍下HashMap\n  5. instanceof实际是怎么完成判断的？\n  6. 为什么选择Kafka？为什么能够支持大流量场景？如何保证数据不丢失？\n  7. apollo的使用场景和原理\n  8. 爬虫后数据清洗的方法有哪些？\n  9. redis的使用场景？介绍下zset使用的数据结构？\n  10. binlog日志的格式？介绍下redo log和undo log？\n  11. 介绍下回表查询\n\n# 算法\n\n给了两道比较简单的题\n\n[53\\. 最大子序和\n](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fleetcode.cn%2Fproblems%2Fmaximum-\nsubarray)\n\n[136\\.\n只出现一次的数字](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fleetcode.cn%2Fproblems%2Fsingle-\nnumber)\n\n# 复盘\n\n## String s = new String(\"abc\")时发生了什么？\n\n首先是去方法区的字符串常量池中寻找\"abc\"字符串，如果没有，则创建。\n\n在堆中创建一个String对象，指向字符串常量池中的地址。\n\n栈上指向堆中对象的地址。\n\n所以看该字符串常量池中是否存在“abc”，若存在，则只需要在堆中创建一个对象，否则创建两个。\n\n如果对于String a = \"abc\"?\n\n则无需在堆上创建对象，栈上直接存储指向字符串常量池的地址。\n\n## jvm的垃圾回收器及使用场景\n\n**为什么需要垃圾回收器？**\n\n  1. 释放内存供其他对象使用\n  2. 减轻程序员负担，自动管理内存\n  3. 减少内存碎片\n\n**垃圾回收器及使用场景**\n\n****![](https://uploadfiles.nowcoder.com/images/20240304/930416553_1709555644410/B294EC709BD86C5377AE73834F7F0BB5)\n\n注：图中的实线表示新生代垃圾回收器和老年代垃圾回收器的组合使用情况，其中G1和ZGC都是即可新生又可老年。\n\n**新生代**\n\n从新生代开始说起，Serial是单线程垃圾回收器，其不支持并发，垃圾回收时会停止所有工作线程，且在对大内存进行处理时，但效率效率较低。\n\n由此引出两个改进方向：\n\n  1. 垃圾回收和工作线程并发执行，减少Stop the World(STW)现象\n  2. 使用多线程进行垃圾回收，加快对大内存的垃圾回收速度。\n\n针对方向一，专门针对新生代的垃圾回收器均未做调整，这可能是因为年轻代的回收相对较快？引入并发执行可能带来更多的风险？\n\n针对方向二，则引出了Serial的多线程版本：ParNew。单核上与Serial效果一致，多核上效率更高，默认线程数和cpu数量相等。\n\n垃圾回收时，有一个trade\noff，即停顿时间和吞吐量。有可能面临的问题是：每次的停顿时间减少了，但是停顿次数更多，导致最后的总吞吐量可能更少。根据不同的场景，可以确定目标是max(减少停顿时间,\n增大吞吐量）。一般对于web服务，响应用户请求通常需要减少停顿时间，对于长时间的计算任务，交互较少的任务，那可能需要增大吞吐量。\n\n对于新生代的垃圾回收，如果是专注于吞吐量，可以选择Parallel Scavenge，该垃圾回收器的特点是吞吐量优先，且可控。\n\n对于新生代来说，实际垃圾清除时，都是用标记-复制算法，其特点是高效，不会产生内存碎片，缺点就是费内存，但是新生代一般都比较小，所以这么选择也合理。\n\n****\n\n**老年代**\n\n和新生代中Serial对应的老年代垃圾回收器是Serial old,也是单线程，优缺点基本一致。\n\n和新生代Parallel Scavenge对应的老年代垃圾回器是Parallel old，优缺点基本一致。\n\n二者均采用标记-整理算法，特点是无内存碎片，但相对效率不高。\n\n在新生代中提到一个改进方向，就是通过工作线程和垃圾线程并发执行，来降低STW时间。老年代中的CMS即从这个角度解决问题，以获取最短停顿时间。\n\n****![](https://uploadfiles.nowcoder.com/images/20240304/930416553_1709556855153/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n当然这里的并发不是完全并发，是在并发标记和并发清理阶段并发，而在处理标记和重新标记时进行STW，不过这两个阶段很快，最终STW时间很短。\n\n优点上就是低停顿时间，缺点：\n\n  1. 对cpu资源敏感，cpu不足4个时，对用户影响大\n  2. 无法处理浮动垃圾，出现Concurrent Mode failure时，会导致full gc，这时候会采用Serial old来进行垃圾收集，Serial old可是一个单线程的垃圾回收器，这次会产生长时间的STW。\n  3. 每次垃圾回收阶段，用户线程还在运行，并产生垃圾，所以需要预留空间，不能像其他垃圾回收器那样等老年代满了再回收，这个比较可以通过-XX:CMSInitiatingOccupancyFraction修改。\n  4. 使用标记-清除算法，有内存碎片。\n\n**老少通吃**\n\nG1回收器基于分区的思想，每个小区可以属于新老代。\n\n![](https://uploadfiles.nowcoder.com/images/20240304/930416553_1709557342043/D2B5CA33BD970F64A6301FA75AE2EB22)\n\nG1有计划的避免在全区域进行垃圾收集，其根据每个区中垃圾堆积的价值（回收后的空间大小 vs 回收所需要的时间），维护优先队列，来确定收集目标。\n\n每个区维护区域内引用类型与其他区域数据的引用关系，使用Remembered Set，目的是在做GC Roots\nTracing时避免扫描全堆。（之前的垃圾回收器在新老之间也要记录）\n\n不同的代所占据的区块数也是动态调整。\n\n整体上使用标记-整理，对于每个小块来说，回收时将其复制到另一小块，是标记-复制。高效且避免了内存碎片。\n\n好处就是STW时间可控（通过参数设置停顿时间不超过N毫秒），由于分区策略，对大内存应用也好使。\n\n至于其如何去解决G1的每个问题，这里就没看了。\n\nZGC暂时没看。\n\n****\n\n## **Kafka高吞吐量的原因**\n\nKafka在普通机械硬盘下也可以达到每秒几百万的处理量。\n\n从以下四个方面考虑其高性能的原因：\n\n  * **磁盘顺序读写：** 虽然在随机读写下，机械硬盘 < 固态硬盘 << 内存，但是顺序读写时，访问速度差距小了很多。\n  * **页缓存：** 数据首先写入到文件系统的页缓存中，依赖操作系统进行flush时异步刷盘（可以调整producer.type来修改，sync or async），降低磁盘I/O次数。\n  * **零拷贝：** 考虑消费者从kafka消费数据，Kafka将数据发送到网络上的过程\n  * 不使用零拷贝的情况，4次传输，CPU参与\n  * ![](https://uploadfiles.nowcoder.com/images/20240304/930416553_1709559466535/D2B5CA33BD970F64A6301FA75AE2EB22)\n  * 使用零拷贝，2次传输，全程DMA控制，缩短时间65%。\n  * ![](https://uploadfiles.nowcoder.com/images/20240304/930416553_1709559521481/D2B5CA33BD970F64A6301FA75AE2EB22)\n  * **批量处理：** 发送端进行批量压缩和发送，降低网络IO带来的影响。消费者要一条，实际发送了n条，同时通过offset来控制消费进度。\n\n****\n\n## **Binlog的日志格式**\n\nbinlog不同于redo log，undo log，其实在Server层实现的日志。用于备份恢复和主从复制。\n\n如果数据库数据全部被删了，需要通过binlog恢复，redo log因为是循环写，所以数据不全。\n\nBinlog的日志格式分为三种\n\n  * STATEMENT（默认）：记录逻辑操作，sql语句。在有uuid，now等动态函数式，可能导致数据不一致。\n  * ROW：记录数据最终被修改的样子，但是针对一条update语句，可能会记录n条修改记录，导致binlog过大。\n  * MIXED：根据不同情况自动使用STATEMENT和ROW模式。\n\n相比较而言，redo log记录的是物理日志，即在实际的物理地址上进行了什么更新。\n\n****\n\n## instanceof实际是怎么完成判断的？\n\n对 A instanceof B来说，\n\n    \n    \n    if A为null: \n      return True\n    if A == B:\n      return True\n    \n    switch A:\n    \tcase 接口类型：\n    \t\t遍历A实现的接口，若有与B一致的，return True\n    \tcase 类类型：\n    \t\t遍历A的super链直到Object，若有与B一致的，return True\n    \tcase 数组类型：\n    \t\t看B，B如果是类，只能是Object\n    \t\tB如果是接口，必须是数组实现的接口之一。\n    \t\tB如果是TC类型的数组，则与A的SC类型的数组，相比，二选一：\n    \t\t\tTC和SC是相同的基本类型\n    \t\t\tTC和SC都是引用类型，但是可以在运行时强制转换。\n    \n\n**参考资料**\n\n[https://blog.csdn.net/weixin_54232686/article/details/126862579](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2Fweixin_54232686%2Farticle%2Fdetails%2F126862579)\n\n[https://blog.csdn.net/weixin_63020134/article/details/131357852](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2Fweixin_63020134%2Farticle%2Fdetails%2F131357852)\n\n[https://blog.csdn.net/Mr_YanMingXin/article/details/121451254](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.csdn.net%2FMr_YanMingXin%2Farticle%2Fdetails%2F121451254)\n\n[https://zhuanlan.zhihu.com/p/658756647](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F658756647)\n\n[https://juejin.cn/post/7103335306103324685](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fjuejin.cn%2Fpost%2F7103335306103324685)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592752014631636992?sourceSSR=users",
        "title": "腾讯IEG一面",
        "content": "最近约面了，牛客一看，原来是海捞，无所谓，捞了就面，虽然面不过，但还是涨涨经验，就怕这段时间过去了与大厂无缘了\n\n  * 项目重难点\n  * 别的没有用到虚拟DOM，为什么性能也很好\n  * 操作虚拟DOM真的比原生操作DOM快吗\n  * 浏览器缓存\n  * 跨域\n  * 前端模式的使用以及了解\n  * 项目优化\n  * 对手写轮子以及已有的轮子的对比，为什么不找别的\n  * 为什么Echart，而不是别的库\n  * 前端安全相关的问题\n\n基本都是按照项目随缘问的，还是要多完善完善项目！！！\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592803581539946496?sourceSSR=users",
        "title": "上海某小厂面经 java",
        "content": "拷打项目\n\n1.1 双token怎么做无感刷新和防止泄露的？\n\n1.2 浏览器指纹怎么做的？\n\n1.3 双token存在哪？\n\n1.4 拦截器拦截的哪些接口，怎么配置的？\n\n常规八股\n\n1\\. 项目中用到的集合？\n\n2\\. 哪些是线程安全的？线程安全的list是什么？\n\n3\\. spring/springboot常用注解？\n\n场景题\n\n1\\. list中去除一个学生名为李四的元素？\n\n1.1 迭代器不能删除问题\n\n2\\. RBAC权限模型如何拿到一个用户有的所有权限？\n\n2.1 左右连接区别\n\n第二天已oc\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592751787405217792?sourceSSR=users",
        "title": "0229【阿里云】Java暑期实习提前批一面（技术服务平台）",
        "content": "全程80分钟，电话面，八股+项目+反问\n\n【八股】30min\n\n全是Java八股\n\n  1. 你的技术栈是Java，讲一下Java面向对象的特点\n  2. 你实际应用过“多态”吗，举一个具体例子，和重载有什么关系？\n  3. Java中的HashMap了解吗？\n  4. 聊聊HashMap的底层结构\n  5. 为什么要引入红黑树，而不用其他树？\n  6. 红黑树和二叉搜索树、AVL树有什么区别？\n  7. HashMap会出现红黑树一直增高变成无限高的情况吗？\n  8. HashMap读和写的时间复杂度是多少？\n  9. HashMap是线程安全的吗？怎么解决？\n  10. 解决线程安全问题还有哪些办法？\n  11. volatile关键字是如何保证内存可见性的？底层是怎么实现的？\n  12. 为什么需要保证内存可见性？\n  13. volatile为什么要禁止指令重排，能举一个具体的指令重排出现问题的例子吗\n  14. Synchronized的底层原理是什么，锁升级的过程了解吗？\n  15. 线程是怎么确定拿到锁的？锁信息具体放到哪的？\n  16. Synchronized加锁和ReentrantLock加锁有什么区别？\n  17. 线程池了解过吗？有哪些核心参数？\n  18. 为什么核心线程满了之后是先加入阻塞队列而不是直接加到总线程？\n  19. 核心线程数一般设置为多少？\n  20. IO密集型的线程数为什么一般设置为2N+1？\n  21. 聊聊MySQL的索引结构，为什么使用B+树而不用B树\n  22. 你是怎么建立索引的？一般是建立哪些字段的索引呢？\n  23. 怎么确定语句是否走了索引？\n  24. 如果要建立联合索引，字段的顺序有什么需要注意吗？\n\n【项目】40min\n\n分布式的场景是因为我项目中大量使用，如果自己项目没有用的话一般不会询问\n\n  1. 你的项目中微服务通信是怎么实现的？\n  2. 怎么保证分布式事务，具体的场景是什么？\n  3. Seata的TCC模式是如何保证confirm或cancel会成功执行的？\n  4. 除了Seata还有什么方式解决分布式事务吗？\n  5. RocketMQ是怎么保证分布式事务的，如果半消息commit失败了怎么办？如果其中有一方网络有问题消息丢失怎么办？\n  6. Dubbo实现服务调用的过程，实现动态代理的细节是怎么样的？为什么传入一个接口就可以实现一个代理对象？\n  7. 你提到了Netty，聊聊对Netty的理解？\n  8. 什么是NIO，什么是BIO？\n  9. 你对epoll的执行流程了解吗？\n  10. 平时怎么数据存储，后面穿插八股，见【八股】第9题\n\n当场约了一场笔试（非系统的统一笔试），约到第二天，是部门考察代码能力的笔试，是非算法的场景编程题，预计一个半小时（还不知道具体会是什么场景）\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592739214446301184?sourceSSR=users",
        "title": "字节前端实习二面 2.29 已挂",
        "content": "55min\n\n忘记录音了，几乎没有八股文，菜就多练吧[牛泪][牛泪]\n\n回忆一下还记得的\n\n1.问项目\n\n2.以你自己的理解说一下写vue和react的区别，不要背八股文\n\n3.zustand是怎么实现和其他组件通信交互的，什么原理\n\n4.你了解的css有哪些技术写法，你怎么做技术选型\n\n还有一点什么忘了\n\n手写题\n\n1.实现一个类的私有属性，内部方法能访问，类外不能访问。不会，试了用symbol和闭包，不对，面试官提示用this和map，没写出来太菜了[牛泪]，有大佬可以教教[牛泪]\n\n2.实现lodash的`_.get(object, path, [defaultValue])方法`\n\n菜就多练[牛泪]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592737954498371584?sourceSSR=users",
        "title": "字节-ads infra-系统架构实习生 一面二面",
        "content": "做推荐系统鸡架的组 只记得部分题了 如下\n\n**一面 2.06**\n\n自我介绍\n\n问了下之前的实习经历\n\n智能指针有哪些，shared ptr线程安全问题\n\n只提升cpp标准 能提高性能吗\n\nrvo和nrvo\n\nstring_view知道吗 大概讲讲\n\n移动语义 左值右值\n\n算法题：\n\n1.给一个vector<int>要求删掉里面所有偶数，原地操作\n\n2.n个数找第k大\n\n**年后二面 2.21**\n\n聊了聊简历上的东西然后开始写题\n\n1.手写一个shared ptr\n\n3.买卖股票最佳时机 lc121\n\n3.买卖股票最佳时机VI lc188\n\n**2.28**\n\nleader说过了\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592678191601332224?sourceSSR=users",
        "title": "17.西安立辰远景（软件开发工程师 60min）",
        "content": "笔试手写代码 一共五道题\n\n  1. 一个长度为n的一维数组，数组[i,j,k]给它的i~j范围加上K个值，i<=j<=n-1 ，例如i,j,k的参考值 arr[[1,2,3],[0,5,10],[5,6,7]]，尽量降低时间的复杂度\n  2. 两个数组，一个表示用户封禁时间，另外一个表示用户解封的时间，返回用户封禁的总时长\n  3. 数组能否去掉一个值仍然成为非递减序列，如果可以返回true，否则返回false\n  4. 银行一共四个窗口办理业务，有两个数组arr1[1,2,2,4,4,5],arr2[12,14,8,25,12,10]第一个数组表示顾客的到达银行的时间，第二个数组表示顾客办理业务的平均时间，请问顾客的平均等待时间是多少\n  5. 一批处理任务，双核CPU最短处理的时间是多少\n\n题目都能理解，要做出来还是要有一定的算法基础，继续好好复习吧\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592674850796232704?sourceSSR=users",
        "title": "【经验分享】面试通过，但想看其他工作机会，要怎么说呢？",
        "content": "# ****\n\n****\n\n【原则】不需要和面试官表达此类意向，只需要和HR沟通一个最晚的入职时间就可以，然后在这段入职时间内找到一个新的offer，如果满意新offer，就去新offer这家就可以。\n\n【其他】企业方每年也会顾虑这个问题，有人会有住房，及毕业证等等材料问题无法及时办理入职证明，这个也是求职者无法短期内入职的一个重要条件；另一点是秋招以后的春招企业方也在选在最优的人，他们也是在为一些放弃了offer的人找储备。\n\n【首先】应该和HR先沟通一个双方容易达成的最晚入职时间，比如秋招拿到offer能够在春招前入职，应该有1-2个月的时间\n\n【其次】在这段时期内去准备其他企业的offer，基本上2周就有结果\n\n【理由】Hr：由于我这里的毕业证、学位证等证件情况，我预计在X月份的时候这些文件资料才能全部下来，考虑到签收offer需要这些文件，我也许无法立即入职。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592670052868972544?sourceSSR=users",
        "title": "【闪送】测试开发岗笔试真题",
        "content": "[**春季刷题节活动正在进行中，限量周边/****100元****京东卡等你哦，和牛牛一起刷真题进大厂！**](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Flink%2Fchunjishauti2)\n\n[![](https://uploadfiles.nowcoder.com/images/20240228/999991353_1709091127200/45F820A377D8F6816998CB7A61BDB83B)](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Flink%2Fchunjishauti2)\n\n闪送测试开发岗笔试试卷公开啦！是校招笔试的完整题量和难度哦，官方授权绝对真实\n\n![](https://uploadfiles.nowcoder.com/images/20240229/999991353_1709175317172/DBCA72A08E3DF5AE8F2525FE67FFA580)\n\n[https://www.nowcoder.com/exam/company?currentTab=recommand&jobId=100&selectStatus=0&tagIds=13409](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fexam%2Fcompany%3FcurrentTab%3Drecommand%26jobId%3D100%26selectStatus%3D0%26tagIds%3D13409)\n\n> 小贴士：电脑端使用Ctrl+F快捷键更方便查找\n\n![](https://uploadfiles.nowcoder.com/images/20240229/999991353_1709175370096/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n**✨✨更新更多更全校招信息请关注**[**牛客校招日程**](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fgw-c.nowcoder.com%2Fapi%2Fsparta%2Fjump%2Flink%3Flink%3Dhttps%253A%252F%252Fgw-c.nowcoder.com%252Fapi%252Fsparta%252Fjump%252Flink%253Flink%253Dhttps%25253A%25252F%25252Fwww.nowcoder.com%25252Flink%25252Fstxzrc)\n\n[**https://www.nowcoder.com/link/stxzrc**](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fgw-c.nowcoder.com%2Fapi%2Fsparta%2Fjump%2Flink%3Flink%3Dhttps%253A%252F%252Fgw-c.nowcoder.com%252Fapi%252Fsparta%252Fjump%252Flink%253Flink%253Dhttps%25253A%25252F%25252Fwww.nowcoder.com%25252Flink%25252Fstxzrc)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592492142258335744?sourceSSR=users",
        "title": "大数据工程师面试 - 字节跳动 Spark 面试考点！",
        "content": "> 我是**大数据欧老师** ，曾在互联网某大厂任大数据负责人，从业大数据领域近 10 年，全网粉丝\n> 5000+，从很多候选人的面试和咨询中复盘了**大数据工程师的面试全流程** ，如果你有求职大数据工程师的计划，欢迎找我聊一聊！\n\n## 直接拿走去复习！！！\n\n## Spark 知识点（上）- 原理题\n\n  1. RDD 的概念？RDD 的常见算子？\n  2. Spark 和其他框架的比较？和 Hadoop 的比较？Spark Streaming 和 Flink 的比较？\n  3. Client 提交 vs Cluster 提交模式的区别？\n  4. RDD 持久化等级和含义？\n  5. 广播变量实现原理？\n  6. Accumulator 累加器的实现原理？\n  7. repartition vs coalesce ？\n  8. RDD 的宽窄依赖？\n  9. Shuffle 分类和原理？\n  10. Spark 的内存模型？Execution Mem vs Storage Mem? 如果 Mem 不足怎么处理？\n\n## Spark 知识点（下）- 调优题\n\n  1. 内存如何调优？\n  2. 序列化对性能的影响？场景？例子？\n  3. 并行度调优，如何合理设置并行度？\n  4. 数据 Locality？存算一体和存算分离的好处？\n  5. Spark Shuffle 的常见优化手段？\n  6. 数据倾斜场景和常见优化手段？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592485634837581824?sourceSSR=users",
        "title": "字节-商业化-后端开发-日常实习-二面（已OC）",
        "content": "> 一面的题目竟然被牛客吞了，显示违规\n\n# 问题\n\n  1. 项目分为了哪些模块，如何进行拆分的？\n  2. 聊天使用了开源的组件吗？一次聊天的过程，后台做了哪些处理？KV结构的持久化是怎么选型的？\n  3. 难点or成就感点。\n  4. 其他对项目非技术类的疑问？盈利模式等？给选型提供了建议。基本上纯聊天。\n\n# 算法\n\n题目描述：给定一个数组，判断是否存在一组下标，使得 i < j < k, a[i] < a[j] < a[k]。\n\n写了两种思路：\n\n第一反应是：[*************](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fleetcode.cn%2Fproblems%2Flongest-\nincreasing-subsequence)\n\n后续利用这里的思想：[********](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fleetcode.cn%2Fproblems%2Ftrapping-\nrain-water)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592484062489522176?sourceSSR=users",
        "title": "第一次面大厂，二面秒挂（百度）",
        "content": "岗位：智能驾驶战略规划组 AI前端开发实习生\n\n一面电话聊了几分钟他们的项目，结束之后就是留了个作业，对开源项目的二次开发。\n\n二面展示项目，面完秒挂\n\n哎，哪个厂能收留鼠鼠啊\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592479711482089472?sourceSSR=users",
        "title": "传统工科转金融经验分享",
        "content": "# 【机械转金融】传统工科专业上岸证券公司经验分享\n\n![图片](https://mmbiz.qpic.cn/sz_mmbiz_jpg/HAsphIWGQJKsCGCs81oSuP0qrqrv4XNPcdiaaPUYxx5MibXJK88mYjoBEzGwKhfGNMMuDEJFR80rFvAa2K3cBxBw/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1)\n\n  \n\n[【机械转金融】传统工科上岸证券公司经验分享](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FmRSjF-Y7E_m5Jw_dEmTAIw)\n\n**  \n**\n\n**1.** 个人背景：211本-机械工程，硕士-生物医学工程，专业背景可以说是debuff拉满，两段实习（中国电信研究院+国开行省分）  \n\n  \n**2.** Offer情况\n：国开证券省公司（国家开发银行子公司），业务承做岗，二线城市，待遇还是非常不错的（具体可私聊），国开证券市场化程度很低，这就意味着更强的稳定性和更小的竞争压力，是追求稳定+较高薪资待遇的好去处，相比其他券商，国开证券对传统工科的同学们更加友好  \n\n**3.**\n投递简历：传统工科薪资待遇、工作环境、上升空间什么的大家心里都有数，就不赘述了。看到国开证券招聘，就投了简历，0证券行业经验，也没有证券资格从业证，作为一个工科生，内心多少还是羡慕金融行业的，谁又不想坐在CBD高档写字楼里拿高薪呢？冲！\n\n  \n\n**4.** 笔试：跟国开行笔试类似，内容很多，大量行测、英语等等，整整考了快2小时，累，考完头晕眼花\n\n  \n**5.**\n一面：群面，无领导小组讨论，大概有10来个人左右，时间15-20分钟，给定一个问题需要我们讨论出一个最终结果来，讨论非常激烈，人人都抢着发表见解，很难插上话。个人感觉面试官们听的都非常仔细，发言要准确、务实、一针见血，没用的话尽量少说，要体现出自己的智慧和分析总结的能力  \n✅【无领导小组讨论小建议  **】**  \n①无领导小组讨论一定要发言，不发言肯定被pass  \n②发言要说到点上，自己的论点尽量一针见血，别说废话，慎重思考后再发表自己的见解，简洁且务实  \n③如果没有十足把握，就不要做总结的人，不要为了更多地吸引面试官的注意力或是提高自己的存在感而在没有把握的情况下总结陈词，否则可能会起到反作用，总结不好很容易给自己减分  \n④如果有可能，可以照顾下没有发言的同学，这样显得自己更有人情味和更好的团队意识，能增加面试官好感，提高对自己的印象分  \n⑤不要在最后发言，不然能说的好论点都被别人说了  \n  \n\n**6.**\n二面：先自我介绍，然后结构化面试，多对一。3个问题，一问一答，每个问题会给时间考虑，跟公务员面试很像，问题有：对金融市场某些现象的看法，在工作中跟老员工有矛盾如何处理等等  \n  \n\n**7.** 三面 （综合健康访谈）：邮件写的是综合健康访谈，但实际就是1对1的面试，一问一答，主要针对简历、毕业课题、实习、家庭等等提问  \n  \n\n**8.** 录用：某天清晨电话+短信通知，后来才知道省公司只有一个名额，还是非常幸运的\n\n  \n\n**有求职相关问题可随时私信哦！** **  \n**\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592472617810964480?sourceSSR=users",
        "title": "百度AIGC Java后端实习面经",
        "content": "# 八股\n\n线程安全\n\nredis 常用命令\n\n慢 sql 优化\n\n创建索引的原则\n\nB+树为什么查询快\n\nexplain 命令\n\nConcureentHashMap 的实现原理\n\n什么情况用HashMap、ConcureentHashMap\n\n# 算法\n\n岛屿数量（说思路）\n\n拓扑排序（用 IDEA 写了一个方法）\n\n# 场景题\n\n一个主任务包含多个子任务，子任务之间是串行的关系，如何实现任务调度的功能\n\n子任务有 wait、running、fail、success 四种状态，如何判断主任务的状态\n\n  \n\n已挂\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592469066330255360?sourceSSR=users",
        "title": "京东Java实习业务面试",
        "content": "自我介绍 （根据问的先后顺序写）\n\n1.说说类的加载机制\n\n2.说说JVM（中间问了双亲委派，甚至提到了JUC）\n\n3.你项目中用了MongoDB，那你说说MongoDB和Mysql的区别以及各自的优势\n\n4.说说MongoDB的应用场景，为什么\n\n5.说说Mysql的事务\n\n6.说说Redis的淘汰机制\n\n7.Redis的常用数据类型有哪些（中间问了个数据结构的底层原理，还提到了跳表）\n\n8.算法你熟不熟悉\n\n9.说说你的项目\n\n10.你在这个项目中都做了哪些工作\n\n反问\n\n1.业务线\n\n2.哪些方面欠缺（给了些关于简历的建议）\n\n3月4日更新\n\n凉\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592443005626245120?sourceSSR=users",
        "title": "0228【美团】民宿Java日常实习一面",
        "content": "全程45分钟，无八股，只有项目和代码\n\n美团民宿，base北京，牛客投递\n\n【项目细节】 15min\n\n【代码】30min\n\n  1. （非算法）从一个User列表，筛选出女性、20岁以上的user然后再按照年龄排序。\n\n这个就是用 .stream().filter().sorted().toList()\n来完成，但我写完面试官说要考虑健壮性，比如要先判断是否合法，还要判断年龄性别是否为null，（感觉是从实际工程角度考察我的思考是否全面，我当时只考虑写出筛选逻辑没考虑这些，感觉比较减分）\n\n  2. LC环形链表2原题\n\n总体感觉比较奇怪，没遇到过这样考法的\n\n  \n\n3.1更新 oc（只有一面）\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592442684585848832?sourceSSR=users",
        "title": "拼多多java一面总结",
        "content": "上来先进行了简单的自我介绍，之后是介绍公司的项目，接下来面试官开始问问题，（感觉比较看重学习的能力），问问题的方式是引导性的，首先会问你了解的技术，然后在其中出一些题目，现场在编辑器中实现\n\n第一道题为5-8分钟看一篇英文的文档，然后之后把文档讲给面试官听，恰好遇到了自己学习过的知识，单例模式，其中文档中介绍的实现方式有饿汉式，懒汉式，静态代码块，内部类，为了解决懒汉式的线程不安全问题，通过同步代码块实现线程安全，还有两种方式可以打破单例模式的限制，创建一个类的多个不同的对象，分别是通过反射使用私有构造器造对象，类继承序列化接口的方式（这种还不太了解）\n\n第二道题是一道死锁的问题，让编写一段代码，这段代码必定会产生死锁，要求不能使用Thread.sleep();\n其中用到了CyclicBarrier，**CountDownLatch，这些是我不太了解的，经过面试官的提醒才勉强写了出来**\n\n**第三道题是一道算法题，在一个同时有正数有负数的n个数的数组中，要求找出三个数，这三个数的乘积要求在所有数中最大，算法的时间复杂度为o(n)\n，这道题把我难住了，没有思路，自己面试前也没有刷过算法题，所以凉凉，接着面试官提醒，就说了几个排序算法**\n\n**第四题是问了问是否了解设计模式，说了我知道的四五种，面试官挑了其中的一种问了问这种设计模式是怎么样的**\n\n**接下来就是一些对公司的介绍，以及和面试官的一些聊天。**\n\n**这次面试下来，感觉自己的基础还是不扎实，算法题还是需要每天练，培养自己解决问题的思维，JUC部分自己还是有些欠缺，这里贴面试官和我说的一句话，不管将来做什么工作，都要不断挑战新的技术，不断精进，提高自己写代码的效率，一天完成的看能否0.8天就完成，三天完成的可不可以两天就完成。**\n\n**大概率会凉凉，还是努力沉下心学习技术吧**\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592436551800328192?sourceSSR=users",
        "title": "腾讯wxg笔试",
        "content": "  * 五道算法题\n  * os的缓存内存硬盘和快速选择待补\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592427306937749504?sourceSSR=users",
        "title": "即时设计 Java 二面",
        "content": "【实践题】\n\n设计一个微信公众号的阅读服务 题目描述 用户订阅公众号之后，可以在自己的文章列表看到所订阅公众号发表的文章，文章列表按时间倒序排列。该产品的日活用户为 1\n亿，已有 100w 个公众号，每个公众号每天平均生产1篇文章。用户可以订阅任意数量公众号。整个系统如何设计，需要考虑数据存储、接口设计等问题。\n\n【算法题】\n\n  1. 基本的二分查找\n  2. 如果有重复元素找最开始的下标\n  3. 找第一个大于等于的元素下标\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592420618331598848?sourceSSR=users",
        "title": "0228【滴滴】Java日常实习二面",
        "content": "国际金融部（Credit Tech）北京，全程40分钟，无项目\n\n【八股】 20min\n\n  1. 说说对用户态内核态的理解？\n  2. 零拷贝了解吗，讲解一下\n  3. CPU使用率和CPU负载有什么区别？\n  4. 怎么写一个Java程序让电脑卡死？\n  5. 现场写一个死循环，看一下cpu负载，你的八核CPU为什么占用率是300%而不是800%？\n  6. 知道KMP算法吗？\n  7. 说说MySQL索引\n  8. 为什么HashMap中要用红黑树，而MySQL中用B+树？\n  9. 说说你对图这个数据结构的理解，哪些地方可以使用图？\n\n【算法】\n\n手写LRU\n\n八股答出来75%，算法写了个大概，然后口述了下思路，面完10min通知OC\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592436282844884992?sourceSSR=users",
        "title": "小黑盒后端一面",
        "content": "  * 聊项目 看一下项目上线网址\n  * 问mysql底层\n  * 乐观锁和悲观锁\n  * mysql一个事务怎么自己实现乐观锁\n  * 如何查看一条sql语句用了索引\n  * explain语句 真的有执行具体语句吗 怎么检测呢\n  * 索引\n  * 聚簇索引和非聚簇索引\n  * 联合索引 找a=1 b>2 c=3 会索引失效吗？ 下降索引？\n  * http协议通信过程\n  * 进程之间http如何通信\n  * 手撕：链表反转 类也自己写\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592408743019589632?sourceSSR=users",
        "title": "最长连续子序列 - 华为OD统一考试",
        "content": "> OD统一考试（B卷）\n>\n> 分值： 100分\n>\n> 题解： Java / Python / C++\n\n![alt](https://uploadfiles.nowcoder.com/images/20231201/644248237_1701399029315/A4F5E48572027B66E6ECFA2EF0A7C66A)\n\n## 题目描述\n\n有N个正整数组成的一个序列。给定整数sum，求长度最长的连续子序列，使他们的和等于sum，返回此子序列的长度，\n\n如果没有满足要求的序列，返回-1。\n\n## 输入描述\n\n第一行输入是：N个正整数组成的一个序列。\n\n第二行输入是：给定整数 sum。\n\n## 输出描述\n\n最长的连续子序列的长度。\n\n### 备注\n\n  * 输入序列仅由数字和英文逗号构成，数字之间采用英文逗号分隔\n  * 序列长度：1 <= N <= 200\n  * 输入序列不考虑异常情况\n\n## 示例1\n\n    \n    \n    输入：\n    1,2,3,4,2\n    6\n    \n    输出：\n    3\n    \n    说明：\n    1,2,3和4,2两个序列均能满足要求，所以最长的连续序列为1,2,3，因此结果为3。\n    \n\n## 题解\n\n> 数据量不大，简单的两层循环**暴力** 即可。\n\n### Java\n\n    \n    \n    import java.util.Arrays;\n    import java.util.Scanner;\n    /**\n     * @author code5bug\n     */\n    public class Main {\n        public static void main(String[] args) {\n            Scanner scanner = new Scanner(System.in);\n    \n            // 读取整数数组\n            int[] arr = Arrays.stream(scanner.nextLine().split(\",\"))\n                    .mapToInt(Integer::parseInt)\n                    .toArray();\n    \n            int sum = scanner.nextInt(), result = -1;\n            for (int i = 0; i < arr.length; i++) {\n                int tot = 0;\n                for (int j = i; j < arr.length; j++) {\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592403619387912192?sourceSSR=users",
        "title": "#华为OD面经#Java语言",
        "content": "# 华为OD面经(全程辅导，有意向伙伴欢迎私聊）\n\n背景：国外IT学士毕业，应届毕业生。\n\n投递：BOSS直聘里遇到OD项目HR，HR非常耐心，在询问了我情况后给了我很多建议，并提交了我的简历等相关资。在这之后HR询问了我相关的求职意向和发展意向等细节，并为我安排后续面试。\n\n机考：机考主要是两道简单题目与一道困难题目，根据通过用例占比赋分，简单题目较为简单，很顺利做出来。困难题目有思路，但是限制于时间原因我没有完全跑全测试用例所以不是满分，但是总分是通过的。\n\n性格测试：这点很重要，在考试之前HR一直强调性格测试的重要性，总之就是表现出人非常乐观外向，喜欢合作，情绪非常稳定等\n\n一面（技术面）：HR在前一天通知我准备技术面试，技术一面被安排在下午，面试过程是先手撕算法，技术一面的算法是关于String的翻转问题，因为平时爱好就是钻研算法，所以很快有思路开写，但可能因为太过于紧张，耗费了一些时间，但最终是做出来了。然后就是询问经历经验，然后根据选择的语言以及个人叙述众所掌握的技术和项目来提问，一般就是一些原理和如何实现之类的问题。\n\n二面（技术面）：我的技术二面排在了技术一面的当天晚上，流程也是一样，首先要手撕算法题，这次给的是一道很明显的DP问题，我平时刷算法很多加之同一天第二次技术面当场写算法也没那么紧张，很快就写出来了，之后就是一样的流程，问经验经历，然后根据这些来提问。\n\n三面（综合面试）：技术面后HR提前跟我通知说准备进行综合面试，之后晚上主管打来电话进行了综合面试，主要问一些非技术上面的问题，包括背景，意向等等，时间大约在20mins-30mins。之后HR通知我说综合面试过了，等Offer审批了。\n\n总结下来第一点就是负责的HR是个很好的HR，有这个HR在通过的概率会提升非常多。然后就是自身能力，包括项目经验，对掌握技术的熟练程度和算法能力等等。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592403320732389376?sourceSSR=users",
        "title": "蔚来hr面 已oc",
        "content": "  * 个人学习情况\n  * 介绍一下竞赛经历\n  * 为什么选这个岗位\n  * 遇到最大的挫折\n  * （想到再补）\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592390114911760384?sourceSSR=users",
        "title": "华为OD面经",
        "content": "**背景：** 国外IT学士毕业，应届毕业生。\n\n**投递：**\nBOSS直聘里遇到OD项目HR，HR非常耐心，在询问了我情况后给了我很多建议，并提交了我的简历等相关资。在这之后HR询问了我相关的求职意向和发展意向等细节，并为我安排后续面试。\n\n**机考：**\n机考主要是两道简单题目与一道困难题目，根据通过用例占比赋分，简单题目较为简单，很顺利做出来。困难题目有思路，但是限制于时间原因我没有完全跑全测试用例所以不是满分，但是总分是通过的。\n\n**性格测试：** 这点很重要，在考试之前HR一直强调性格测试的重要性，总之就是表现出人非常乐观外向，喜欢合作，情绪非常稳定等。\n\n**一面（技术面）：**\nHR在前一天通知我准备技术面试，技术一面被安排在下午，面试过程是先手撕算法，技术一面的算法是关于String的翻转问题，因为平时爱好就是钻研算法，所以很快有思路开写，但可能因为太过于紧张，耗费了一些时间，但最终是做出来了。然后就是询问经历经验，然后根据选择的语言以及个人叙述众所掌握的技术和项目来提问，一般就是一些原理和如何实现之类的问题。\n\n**二面（技术面）：**\n我的技术二面排在了技术一面的当天晚上，流程也是一样，首先要手撕算法题，这次给的是一道很明显的DP问题，我平时刷算法很多加之同一天第二次技术面当场写算法也没那么紧张，很快就写出来了，之后就是一样的流程，问经验经历，然后根据这些来提问。\n\n**三面（综合面试）：**\n技术面后HR提前跟我通知说准备进行综合面试，之后晚上主管打来电话进行了综合面试，主要问一些非技术上面的问题，包括背景，意向等等，时间大约在20mins-30mins。之后HR通知我说综合面试过了，等Offer审批了。\n\n总结下来第一点就是负责的HR是个很好的HR，有这个HR在通过的概率会提升非常多。然后就是自身能力，包括项目经验，对掌握技术的熟练程度和算法能力等等。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592385934549692416?sourceSSR=users",
        "title": "美团到店 日常实习  一面",
        "content": "拷打了一个小时，一直深挖项目，问到不会才换下一个方向，面试官人不错，会指导编程题的思路。\n\n总体来说，感觉还是不错的，实习的第一次面试，至少说话没有语无伦次。\n\n1.自我介绍，问实习时长\n\n2.小论文所研究的问题\n\n3.所用到的Java的技术栈\n\n4.小论文的创新点\n\n5.港口项目简介\n\n6.是用计算机视觉来做风险决策吗\n\n7.船的长、宽是否有表示\n\n8.经纬度计算的误差大概是多少\n\n9.港口项目中，你的职责是什么\n\n10.后端用的技术栈\n\n11.项目的业务流程\n\n12.编程：多线程分别获取数据并进行排序\n\n13.怎么判断多个线程执行完毕\n\n14.线程池的几个参数\n\n15.有没有遇到过线程处理很慢的情况，任务数大于核心线程数怎么办？\n\n16.核心线程数如何设置\n\n17.线程池的类型\n\n18.Redis的作用是什么？保存本船信息和其他船信息的key和value是什么？\n\n19.Redis的其它功能？除了查询还有什么功能？\n\n20.Redis的底层数据结构\n\n21.抽奖系统项目简介\n\n22.DDD架构和MVC架构的区别\n\n23.每个领域包含哪些\n\n24.抽奖系统有哪几个微服务模块\n\n25.编程：用数组实现一个队列\n\n26.编程：leetcode 257\n\n27.了解SpringBoot吗？知道它的哪些特色？\n\n28.什么情况下会用IoC和AOP\n\n29.AOP的使用场景\n\n30.Spring的事件机制？异步处理事件\n\n31.Kafka的结构\n\n32.Kafka如何保证数据不会丢失\n\n33.如何保证消息的有序性\n\n34.了解Docker吗？Dcoker的好处？Docker为什么可以直接拉取镜像运行即可？\n\n35.反问\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592403057334333440?sourceSSR=users",
        "title": "蔚来二面",
        "content": "  * 自我介绍\n  * 个人情况\n  * 项目有意思的点\n  * cpp的vector线程安全吗\n  * 你用过的docker和git的一些情况\n  * 一直聊天~\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592378304502476800?sourceSSR=users",
        "title": "阿里菜鸟 java 一面",
        "content": "第一次被捞的时候的面试记录，二面就没有八股了\n\n自我介绍\n\n说一下三次握手机制，端口状态？\n\n说说 TCP 四次挥手的过程？\n\n如果大量连接都进入time wait状态会有什么问题？\n\n连接重用有哪些方式？\n\n什么时候会发生回表的操作？\n\nJVM的垃圾回收算法有哪些？\n\nJVM常见参数有哪些？\n\n新生代和老年代的比率，过大和过小的话会对新生代和老年代分别产生什么影响？\n\n中途拷打了一下实习和项目（大概20min）\n\n讲一下java里面锁的实现，自己发散的讲\n\nvolatile有什么作用？\n\n线程池参数的作用，如何设定参数比较好，根据什么推导公式来设定合理的参数的？\n\nsynchronized和ReentrantLock的相同点和不同点有哪些？\n\n讲一下redis自己最了解的部分？\n\nredis的持久化机制介绍一下，优缺点有哪些？\n\n全程一个小时\n\n由于是补录当天晚上有个笔试面 需要开摄像头\n\n类似手写个生产者消费者模型\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592353922820452352?sourceSSR=users",
        "title": "杭州某互联网公司 Java 面经",
        "content": "# 杭州某互联网公司 Java 面经\n\n1）\n\n面试官：为什么刚开始会投前端？\n\n我：阿巴阿巴，主要是公司只开了前端实习生，我又是全栈，所以就投了，主要还是侧重后端。\n\n2）\n\n面试官：先做个自我介绍吧\n\n我：阿巴阿巴，从时间顺序去梳理学技术的过程，然后获得了哪些成就，阐述下为什么前后端都学，主要是想做自己的项目，自我介绍很重要，后续的吸引火力就靠这部分，如果有面试官感兴趣的，到时候八股文会少一些，还是要好好准备的。\n\n3）\n\n面试官：项目的业务流程介绍一下\n\n我：我这边直接申请开了共享屏幕去介绍业务代码，这样我也不用去背了，因为会有注释，直接看代码也更清楚和真实，因此跟做的项目最好是自己吃透，有能力的话自己可以独立设计前后端的项目然后上线，我这边是演示功能，然后去讲解业务代码，然后面试官会追问一些场景题。\n\n4）\n\n面试官：如果你的请求次数大的话怎么做处理？\n\n我：阿巴阿巴，先热点数据缓存一波吧，多级缓存架构涉及\nNginx、Caffeine,Redis，阿巴阿巴，说实话根本没用过，看过理论而已，缓存后，可以做限流处理，单机限流可以使用 Google 的\nGuavaLimit 或者 Apache 的 Commons 库，分布式就 Redis+Lua\n脚本，这边可以讲下常见的限流算法补充一下，还可以考虑熔断和降级的措施，像阿里的 Sentinel，SpirngCloud 全家桶的\nHystrix，这边其实自己项目如果有过实践就会很好阐述了。\n\n5）\n\n面试官：HTTP 是无状态的，那怎么区分用户？\n\n我：因为我这边是存了一个 Session 用户登录态，然后 AOP 去做一个权限检验的，其实我还搞了个 JWT 拦截器和 Token\n机制，随时切换，这边主要就是 Cookie、Session、Token 的原理、使用场景、各自的优缺点，聊到 Token\n还想聊加密算法也是可以的，看面试官意愿即可。\n\n6）\n\n面试官：如果想要项目监控，怎么实现？\n\n我：阿巴阿巴，不会了，我这边只过 Log 日志，像 Metrics 去监控一些数据，然后可视化图表，我好像是看过 Prometheus+Grafana\n做一个项目监控，下次实践下试一试，还有一个是 Trace\n链路追踪，我就听面试官阐述，我自己项目阿巴阿巴，直接宝塔可视化看看项目，或者用阿里云和腾讯云的可视化服务就可以了，再不行，直接进服务器敲 Linux\n命令看看啥情况。\n\n7）\n\n面试官：Ak，SK 在你项目的作用是什么？\n\n我：阿巴阿巴，AK 类似与用户名，做一个知道你是谁的功能，类似与公钥和私钥，SK 是不能在网络中进行传输的，主要用作一个签名加密，这边可以去阐述下如果 SK\n泄漏怎么处理，其实和 Token 密钥泄漏差不多，Sk 我这边设置是可以更新的，更新后原来的令牌就失效了。\n\n8）\n\n面试官：注册和登录的业务逻辑介绍一下？\n\n我：开了共享屏幕，直接按代码进行讲解就可以了，校验参数，然后查询用户，加密后去对比密码，然后我这边还有一个邀请码机制，注册的话需要用到邮箱 Spring\nMail，我 Q 邮箱开了个 SMTP，手机短信因为要付费，我就选择了邮箱。\n\n9）\n\n面试官：AI 模型怎么使用的？\n\n我：阿巴阿巴，讯飞星火、阿里百炼、混元、文心一眼、华为盘古、等等都是看官方文档，然后直接下一个 Demo\n看下能不能跑就行，需要先开通服务，个人推荐先去薅免费的 AI 羊毛，付费的被刷量后就 GG 了，这块还是要谨慎，尤其是我还做开源项目，每天都会去控制 AI\n使用次数。\n\n10）\n\n面试官：爬虫这块怎么实现的？\n\n我：我是用 Http 请求和 Jsoup 解析 HTML 页面，然后一层层去获取想要的数据，这块也只是个简单的使用，会 Python\n的话可以详细阐述，不过别太深入，懂的都懂，不能暴露太多信息。\n\n过了一天就 OC 了，前后面了两次，第一次面的前端，尴住，后续前端面试官帮我约了后端。最近暑期面试逐渐开了，xdm 可以开投暑期了。\n\n开源项目 Gitee 地址：[https://gitee.com/falle22222n-leaves/vue_-book-manage-\nsystem](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fgitee.com%2Ffalle22222n-leaves%2Fvue_-\nbook-manage-system)\n\n欢迎老铁们 Star 下！⭐⭐⭐\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592340282855763968?sourceSSR=users",
        "title": "0228【小红书】新业务部Java日常实习一面",
        "content": "全程45分钟，项目+八股+手撕\n\n牛客22号投递，约面比较晚\n\n【项目】 20min\n\n  1. 介绍一下项目背景、后端部分有几个人\n  2. 讲一下你是如何使用分布式事务的\n  3. 你是如何通过令牌桶算法解决库存超卖问题的，讲一下细节\n  4. 你是如何使用责任链模式的，你设置了哪些处理器？\n  5. 你使用了RocketMQ发送延时消息，延时消息是如何保证的，非商业版本的延时时间有什么限制？\n  6. 你使用了redis作为缓存，如何保证缓存与数据库一致性？\n\n【八股】15min\n\n  1. 讲解一下单例模式\n  2. 如何实现一个单例模式，讲讲Spring中的单例模式\n  3. 单例模式是线程安全的吗？\n  4. 怎么保证一个单例的线程安全？\n  5. ThreadLocal是怎么保证线程安全的？\n  6. 聊聊MySQL的索引机制\n  7. 聊聊MySQL中的乐观锁与悲观锁\n  8. MySQL中update查询语句是表锁还是行锁（看是否走索引）\n  9. 讲一下Redis的过期策略\n  10. Redis的大key问题怎么避免、怎么处理？\n  11. 聊聊AOP机制的底层原理（动态代理）\n  12. 同一个service类里面，方法A使用了@Transactional注解，方法B调用了A方法，会有什么问题吗？（事务失效）\n  13. 用过线程池吗？核心参数有哪些？\n\n【算法】\n\nLC300原题\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592331701716561920?sourceSSR=users",
        "title": "c++#华为od面经分享#（已得授权）",
        "content": "# 背景\n\n985本计算机专业，延毕一年（私聊可以搞定延毕、断档、考研失利等情况）\n\n# 1.15 投递\n\n在某BOSS上投递的简历，HR人很nice，非常负责任。\n\n# 1.19 收到机试通知\n\n第一题是一个哈夫曼编码，第三题是一个动态规划，机试整体难度不算高，刷leetcode hot100或者是csdn上的华为od题库都可以。\n\n# 1.22 性格测试\n\n据说这个是可以挂人的。主要选一些积极向上的选项，前后会出现相同的问题，注意保持一致。\n\n# 1.25 资面\n\n资面主要是了解一些基本情况。如果有空窗期的话建议突出自己空窗期间一直在提升自己。\n\n# 1.26 技术面\n\n技术面两轮，我的在同一天。一面手撕一道字符串的题（好像非常喜欢出字符串相关的题），面试官人很nice但是一直在拷打我的项目细节，每一个细节都会问到答不出来为止。二面手撕一道区间合并，面试官主要问一些c/c++的八股。\n\n# 2.19 主管面\n\n面的东莞的gts部门，主要介绍了一下项目，然后聊了聊岗位的需求之类的。最后结果是未通过，原因未知。HR帮我转到了中间件团队，资面未通过，据HR说原因是我在考公（后期发展稳定性），遂转到海思。海思的资面和主管面很快，都是在2.27晚上进行的，电话会议。资面大概聊了十来分钟，还是聊一些基本情况。主管面没有问技术问题，闲聊了大概半个小时，也是聊一些基础情况和部门的信息。当晚得知主管面通过，目前等待offer审批。\n\n# 小结\n\n华为的面试体验还是非常不错的，面试官大多很谦虚。然后是最重要的一点，一定要找一个负责任的HR，会给你更好的体验。[#华为od#](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fcreation%2Fsubject%2F5adfc6bc0d77444a82aa7903c5e83302)[#华为od面经#背景](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fcreation%2Fsubject%2F7dfa06eed4874a159db33b2984545502)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592328247698788352?sourceSSR=users",
        "title": "华为OD海思面经",
        "content": "# 背景\n\n985本计算机专业，目标院校。\n\n# 1.15 投递\n\n在某BOSS上投递的简历，HR人很nice，非常负责任。\n\n# 1.19 收到机试通知\n\n第一题是一个哈夫曼编码，第三题是一个动态规划，机试整体难度不算高，刷leetcode hot100或者是csdn上的华为od题库都可以。\n\n# 1.22 性格测试\n\n据说这个是可以挂人的。主要选一些积极向上的选项，前后会出现相同的问题，注意保持一致。\n\n# 1.25 资面\n\n资面主要是了解一些基本情况。如果有空窗期的话建议突出自己空窗期间一直在提升自己。\n\n# 1.26 技术面\n\n技术面两轮，我的在同一天。一面手撕一道字符串的题（好像非常喜欢出字符串相关的题），面试官人很nice但是一直在拷打我的项目细节，每一个细节都会问到答不出来为止。二面手撕一道区间合并，面试官主要问一些c/c++的八股。\n\n# 2.19 主管面\n\n面的东莞的gts部门，主要介绍了一下项目，然后聊了聊岗位的需求之类的。最后结果是未通过，原因未知。HR帮我转到了中间件团队，资面未通过，据HR说原因是我在考公，遂转到海思。海思的资面和主管面很快，都是在2.27晚上进行的，电话会议。资面大概聊了十来分钟，还是聊一些基本情况。主管面没有问技术问题，闲聊了大概半个小时，也是聊一些基础情况和部门的信息。当晚得知主管面通过，目前等待offer审批。\n\n# 小结\n\n华为的面试体验还是非常不错的，面试官大多很谦虚。然后是最重要的一点，一定要找一个负责任的HR，会给你更好的体验。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592305380286377984?sourceSSR=users",
        "title": "合思Java1面",
        "content": "> 面试时间25min 实习可转正岗\n\n  * 反射、集合、线程池、分布式锁、JVM\n  * copyProperty是深拷贝还是浅拷贝\n  * Redis有哪些数据类型\n  * Set和Hash的区别\n  * Mysql事务\n  * InnoDB和Myisam区别\n  * SQL如何优化(加索引、分库分表)\n\n后续-2.29二面，已oc\n\n后续-3.18入职，第二天跑路，24届的兄弟谨慎入职。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592132499082317824?sourceSSR=users",
        "title": "0227【CSDN】Java日常实习一面",
        "content": "全程40分钟，因为还有另一个面试就提前中断了。\n\n面试官人不错但比较抠细节，今天全天被网络相关知识拷打\n\n【项目】\n\n  1. 说一下项目的结构\n  2. 你用到了websocket，说一下和http的区别？\n  3. websocket底层的协议是什么，怎么实现的？\n  4. 使用过sse吗，和websocket的区别是什么，为什么不用sse？\n  5. websocket是全双工的吗？sse是全双工的吗？实现上有什么区别？\n\n【八股】\n\n  1. 聊聊网络传输中的编码和解码过程\n  2. http协议有哪些部分？请求头有哪些内容？\n  3. 聊聊网络传输中的打包与拆包\n  4. 如果一个http请求过大要拆分成10个，接收端怎么保证按序成功接收？\n  5. 聊聊TCP队头阻塞\n  6. 使用过mqtt吗，这个协议是在哪一层？是基于以太网的吗？怎么保证消费端能连接到mqtt服务器？\n  7. 聊聊数据库的ACID特性，分别怎么保证？\n  8. 说说数据库的隔离级别，分别存在问题？\n  9. 给你一个转账的业务，如果多个转账请求并发发生，你在数据库层面怎么去编写sql语句来保证数据正确性？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592109957961592832?sourceSSR=users",
        "title": "大数据工程师面试 - 字节跳动 Hive 面试考点！",
        "content": "> 我是**大数据欧老师** ，曾在互联网某大厂任大数据负责人，从业大数据领域近 10 年，全网粉丝\n> 5000+，从很多候选人的面试和咨询中复盘了**大数据工程师的面试全流程** ，如果你有求职大数据工程师的计划，欢迎找我聊一聊！\n\n## 直接拿走去复习！！！\n\n## Hive 知识点（上）- HSQL 语法\n\n  1. 什么是窗口函数？\n  2. ROW_NUMBER() / RANK() / LAG() / LEAD() 的含义？\n  3. RANK() 和 DENSE_RANK() 的区别？\n  4. 上述窗口函数的使用场景？\n  5. PARTITION / CLUSTER BY / DISTRIBUTE BY 的含义和区别？\n  6. 使用 STACK 进行列转行？\n  7. 使用 EXPLODE 进行行转列？\n\n## Hive 性能优化\n\n  1. 数据倾斜的场景有哪些？\n  2. 如何在 Hive 中判断数据发生了倾斜？\n  3. 数据倾斜一般如何处理？\n  4. Shuffle 的类型和性能优化手段？\n  5. Hive 的存储格式有哪些？有什么优劣势？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592078686589923328?sourceSSR=users",
        "title": "字节-商业化-后端开发-日常实习-一面",
        "content": "# 八股\n\n> 删除掉了部分项目相关\n\n  1. 讲讲IO多路复用？select/poll/epoll的差别?\n  2. 动态线程池技术？如果让你来实现一个线程池，会考虑哪几部分？\n  3. Kafka的使用场景？如果出现了消息堆积如何优化？\n\n# 算法\n\n1\\. 八皇后\n\n# 总结\n\n问的问题很少。算法折腾了半小时。\n\n八股答的很糊，说的很多但是可能术语不够精确。\n\n简历上写了埋点监控，但是被问起来场景，为什么要用这个方法，数据落下来怎么用，如果重新设计怎么设计，被问懵了。\n\n# 复盘\n\n## IO多路复用\n\n**什么是IO多路复用？**\n\n**多路：** 指的是多个socket网络连接；\n\n**复用：** 指的是使用一个线程来检查多个网络连接（或者说文件描述符）的就绪状态。\n\n**好处是：** 解决了单线程处理多个IO操作时的阻塞问题。在需要处理大量并发IO的情况下，可以提升程序性能和响应速度。\n\n**常用的多路复用技术？**\n\nselect -> poll -> epoll\n\n**select:**\n\n提供了一种单线程处理多个IO操作的方式。\n\n流程如下：\n\n  1. 应用程序调用select函数，参数中传递待监听的文件描述符集合，进入阻塞。\n  2. 内核将这些文件描述符加入到内核维护的等待队列，监听其IO状态。\n  3. 当有文件描述符准备好IO操作，内核将其标记为可读或可写。\n  4. 内核将这些准备好的文件描述符信息返回给应用程序，select返回。\n  5. 应用程序接受返回后，遍历文件描述符，检查哪些文件描述符准备好了IO操作。\n  6. 应用程序根据文件描述符状态进行IO操作，完成后调用select等待下一次IO事件。\n\n![](https://uploadfiles.nowcoder.com/images/20240227/930416553_1709040638172/839C0A2C4C9809031C4F2A3C30C0BF1D)\n\n存在的问题：\n\n问题一：首先是用户态和内核态之间拷贝的开销，两次copy，从用户态->内核态，因为需要告知内核态需要管理哪些文件描述符，这个无法省。但是内核态->用户态，明显只有部分fds（文件描述符）发生了事件，却做了一次整体拷贝。并且，用户态只知道发生了事件，但是不知道是哪些fds，所以还要重新遍历，时间复杂度是O(n)。\n\n问题二：单个进程/线程能监听的最大连接数，在内核中写死了，32位：1024；64位：2048。\n\n**poll**\n\n解决了问题二，在调用时，可以指定数组大小，而非select中固定大小的bitmap，该数组的大小仅受限于系统资源。但这个并非关键问题。\n\n**epoll**\n\n****![](https://uploadfiles.nowcoder.com/images/20240227/930416553_1709042731576/3E4AD032CB74C4F9C94C9B14FDCA36A2)\n\n有几点改进：\n\n1.IO事件发生后放入就绪链表，避免了用户态需要遍历来确定事件的处理；\n\n2.只有在用户态主动调用epoll_wait时才执行拷贝，而非一旦发生IO事件即拷贝，减少了用户态和内核态的切换次数，提高了效率。\n\n另外， 红黑树的结构，便于查询、插入、删除，时间复杂度都是O(logn)。、\n\n## MQ中的消息堆积问题\n\n**出现消息堆积的原因**\n\n1.生产端数据激增\n\n2.消费端消费能力不足或挂掉\n\n3.kafka中数据倾斜\n\n**解决方法：**\n\n1.从生产端入手：如果是过时无效的数据直接清空，拉到latest；如果有效，但是不要求消费顺序，可以直接消费最新的数据，lag部分的数据用离线补偿。\n\n2.从消费端入手：\n\n  1. 增加消费者的数量。\n  2. 增加分区的数量。（增加分组时，同步要增加一组内的消费者的数量）\n  3. 加强消费者的消费能力：优化消费逻辑，批量消费，异步消费 \n\n3.数据倾斜问题解决：根据业务重新设置key，使其均匀。\n\n## 八皇后\n\n> 非优解，写的麻烦，仅为理思路\n\n不考虑输出的形式，现在需要使用回溯去遍历所有的可能。\n\n主干函数如下：\n\n    \n    \n    /**\n    tmp: 用于记录每行所选定的y轴坐标的index，x轴坐标隐藏在数组下标中了\n    x：当前在处理第几行\n    n：处理的是几皇后问题\n    **/\n    public void backtrack(List<Integer> tmp, int x, int n){\n    \tif（tmp.size() == n){\n    \t  \t//当tmp中元素数量为n时，说明每行的皇后都找到了合适的位置。\n    \t  \t//res是一个全局变量，用于记录结果，先不考虑他。\n    \t\tres.add(new ArrayList<>(tmp);\n    \t\treturn;\n    \t}\n    \t//对于当前第x行的皇后，要考虑0~n-1的所有可能的y轴坐标\n    \tfor (int y = 0;y < n;y++){\n    \t  \t//尝试坐标(x,y),如果是个合法位置，则考虑x+1的摆放\n    \t\tif (isValid(tmp, y){\n    \t\t  tmp.add(y);\n    \t\t  backtrack(tmp, x+1, n); //进入下一行\n    \t\t  tmp.remove(tmp.size()-1);\n    \t\t}\n    \t}\n    }\n    \n\n其中有些问题，比如如何判断当前皇后位置是否合法？\n\n    \n    \n    public boolean isValid(List<Integer> tmp, int y2){\n    \t//当前的坐标实际上是（tmp.size(), y2），点还没放进tmp，所以不用-1\n      \tint x2 = tmp.size();\n      \tfor (int x1 = 0; x1 < tmp.size(); x1++){\n    \t\tint y1 = tmp.get(x1);\n    \t  \t//肯定不会同行的，同列或者斜线即为不合法，斜线可以看x,y轴增量是否一致\n    \t \tif (y1 == y2 || Math.abs(x1 - x2) == Math.abs(y1 - y2)){\n    \t\t\treturn false;\n    \t\t}\n    \t  \treturn true;\n    \t}\n    }\n    \n\n现在问题已经解决了，收个尾。\n\n目前给出的结果实际上是 [[0,1,2,3,4],[1,0,4,2,3],...],即给出y轴的坐标，题目要求给出的形式是\n\n    \n    \n    [\n     [\".Q..\",  // 解法 1\n      \"...Q\",\n      \"Q...\",\n      \"..Q.\"],\n    \n     [\"..Q.\",  // 解法 2\n      \"Q...\",\n      \"...Q\",\n      \".Q..\"]\n    ]\n    \n\n写个函数改改\n\n    \n    \n    public List<List<String>> visualize(int n){\n    \tList<List<String>> finalRes = new ArrayList<>();\n      \tfor(List<Integer> item : res){\n    \t\tList<String> tmp = new ArrayList<>();\n    \t  \tfor (int y : item){ //第y个为Q\n    \t\t\ttmp.add(\".\".repeat(y) + \"Q\" + \".\".repeat(n-y-1));\n    \t\t}\n    \t  \tfinalRes.append(tmp);\n    \t}\n    }\n    \n\n整体流程如下：\n\n    \n    \n    class Solution {\n        List<List<Integer>> res = new ArrayList<>();\n    \n        public List<List<String>> solveNQueens(int n) {\n            backtrack(new ArrayList<>(), 0 , n);\n            \n            return visualize(n);\n        }\n    \n        public void backtrack(List<Integer> tmp, int x, int n){\n           \n        }\n    \n        public boolean isValid(List<Integer> tmp, int y2){\n          \n        }\n    \n        public List<List<String>> visualize(int n){\n    \t}\n    }\n    \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592130122245844992?sourceSSR=users",
        "title": "0227【快手】电商Java日常实习一面",
        "content": "全程50分钟，面试官循循善诱地引导但是感觉问得有点深，不是靠单纯被八股能答出来的，特别是网络那块\n\n【项目】\n\n  1. 谈谈你的项目用户规模和应用场景\n  2. 你的仿12306项目如何保证库存不超卖\n  3. 如何保证Redis与Mysql数据一致性\n  4. 怎么提高扣减库存时候的系统并发量\n  5. 你提到的了预扣库存，异步下单的思路，怎么保证异步下单一定是成功的呢？如果失败了该怎么处理？\n  6. 12306每个座位只能卖一次是怎么保证的？\n  7. 你的消息或请求存在重复消费问题吗？是怎么解决的？\n\n【八股】\n\n全程只有计算机网络基础，但有些细节抠的比较难受，并且连链路层和物理层的都问了\n\n  1. 讲一讲网络分层、每一层的职责是什么？\n  2. 为什么要有应用层，如果没有会怎么样？\n  3. 传输层的职责是什么，如果没有传输层会怎么样，可以直接通过ip进行通信吗？\n  4. 如果只通过ip完成通信，主机可以确定进行通信的是哪个进程吗？\n  5. 讲一下TCP报文头部信息\n  6. 网络层的职责是什么？网络接口层的职责是什么？\n  7. IP寻址和MAC寻址有什么不同？有了MAC地址为什么还要IP地址？\n  8. 你对物理层的理解是什么，物理层有什么协议？\n  9. 如何理解TCP的拥塞控制、流量控制，两者有什么区别，分别是为了保护谁的？\n\n【算法】\n\n用O(logn)的复杂度找出一个排序数组中出现次数超过一半的数字，没有则返回-1\n\n思路：看到排序数组和logn就想到二分，先找到N/2位置的元素，这个元素一定是出现超过一半的数组，再利用两次二分找到第一个位置和最后一个位置\n\n更新1 2.28下午约二面\n\n更新2 2.29二面，只问了些项目细节和思考，没有八股和算法，20min结束\n\n更新3 3.1 oc\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592056795883921408?sourceSSR=users",
        "title": "面试题解析|宝洁八大问-沟通与管理",
        "content": "🙋题目：举例说明你是怎样用事实促使他人与你达成一致意见的？  \n\n  \n\n❗️关键词：用事实，达成一致\n\n  \n\n💡提示：本题已经帮助我们设置好了答案场景，即：说服！且最终双方真实的达成一致，注意，不是各退一步，也不是互不干涉，而是你完全的说服对方与你达成一致。\n\n  \n\n🛞讲述逻辑：\n\n1.描述场景内的冲突点，表达清楚双方矛盾的中心问题以及各自的立场。\n\n2.阐述你为了说服对方所选取的事实依据是什么以及如何确定该事实依据。\n\n3.按照步骤说明你如何完成说服对方的动作，可以将重点放在描述对方被你打动的那个关键时刻。\n\n4.对这次经历做总结性陈词，并且讲述说服对方之后你们所达成的结果。\n\n  \n\n宝洁八大问作为非常经典的问题合集，能够很好的帮助大家总结自己的个人经历，建议每一位候选人在求职前都可以深入学习了解下宝洁八大问的回答技巧。如果有疑问，可以后台私信详细咨询。\n\n  \n\n面试稳稳赢系列会主要和大家共同讨论面试题目的拆解，站在HR的视角带你看透面试问题的本质。欢迎持续关注，另外同时有简历稳稳赢，求职稳稳赢等更多板块，欢迎大家来我的主页，学习以及讨论相关话题。\n![Ua27oLRNJeZzFQ2QSCby3QFs4IR0Zbjy.jpg](https://uploadfiles.nowcoder.com/images/20240227/722513612_1709029286108/B6A539E8C2377857BC6B2ADAF9E3849D)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592048099116232704?sourceSSR=users",
        "title": "华为OD 测试岗  base苏州",
        "content": "一、机考\n\n作为一个非科班出身而且没有学过编程的我一开始听说有机考就直接想放弃了，后来在HR的鼓励下开始自学Python，边学边做练习，大概持续了两个月左右吧😂，HR就一直催着申请机考，我一拖再拖后来实在不好意思拒绝了就申请了机考，两道中等的一道困难的，结果300分飘过~\n\n二、性格测试\n\n机考完成后的第二天就收到了性格测试的邮件通知，HR先大概讲解了一下答题规则和。。。（你懂得）然后就开始作答，当天就会有测试结果。据说性格测试不通过两年内是不能再投递简历的。\n\n性格测试通过后HR会和我沟通接下来的就职城市意向，我选了苏州。\n\n然后HR会收集一些个人资料证件什么的，可以分类放进文件夹里打包发送过去\n\n三、资面\n\n比较简单，一开始先让介绍一下简历，然后问到觉得测试工作最重要的品质是什么？你觉得自己的优势是什么？期望薪资是多少？等等。\n\n一般第二天就会有结果。\n\n四、技术一面\n\n面试官比较高冷，一上来就开始手撕代码了，题目比机考简单但是由于太紧张了没静下心来仔细想，而且只给了20分钟时间，没有做出来。（面试结束后又想想，5分钟就做出来了）接着开始进行技术问答，问到了测试流程、测试方法、Linux命令等，其中有个问题答的不是太好，如果测试中遇到偶发性的bug，一直复现不出来你会怎么处理？\n\n听说这一轮的面试结果很不理想，面试官评价不太好\n\n手撕代码题目：计算一个等式，\n\ns=a+aa+aaa+aaaa+aa…a(总共有n个这样的数相加)的值，其中a是一个1～9的数字。\n\n例如当a ＝ 2，n ＝ 5时，s ＝ 2+22+222+2222+22222。\n\n输入：\n\n输入一行包含两个整数a(1<=a<=9)和n(1<=n<=9)，其中n为几个这样的数字相加（如描述中的例子n是5）。\n\n输出：\n\n输出一行结果s。\n\n五、技术二面\n\n技术一面的结果不会影响二面的参加，相当于是并行的。最终评定是综合两轮面试的结果来看的，如果两轮面试的评价大相径庭还会再有幸参加技术三面🤣\n\n这次的面试官是位女士，很温和，一开始就让自我介绍，接着开始进行技术问答。问的问题很多很全面又很细致，大概记得的有：测试方案设计、测试方法、性能测试（为什么要有混合场景？、资源使用率中的cpu指标一般是多少？）、fiddler抓包工具、postman怎么做越权测试、Linux命令、SQL修改数据语句，还会结合简历中使用到的工具进行提问。技术问答持续了半个多小时然后就开始手撕代码了，这次的题也很简单，不到十分钟就做完了，面试官截了图，面试就结束了。\n\n手撕代码题目：给定一个整数数组 nums 和一个整数目标值 target，\n\n请你在该数组中找出和为目标值 target的那两个整数，并返回它们的数组下标。\n\n你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现\n\n六、技术三面：\n\n由于一面的面试官给的评价不好，二面的面试官给的评价很好，所有我又迎来了第三次技术面试\n\n这次的面试官也是位女士，人特别好。先是问了技术问答，比如测试方案设计、可靠性测试、是否会自动化测试等，然后就是手撕代码环节，题目是道计算题，简直是送分题，但是由于我的粗心大意，中间有个地方写错了，面试官给指了出来让我修改。真的是非常的nice~\n\n手撕代码题目：企业发放的奖金是以利润提成为基础的。\n\n利润(I)小于或等于10万元时，奖金10%；\n\n利润高于10万元低于20万元时，低于10万元的部分10%，高于10万元的部分7.5%；\n\n20-40万元之间时，高于20万元的部分5%；40-60万元之间，高于40万元的部分3%；\n\n60万-100万之间时，高于60万的部分1.5%；\n\n高于100万元时，超过100万元的部分1%。\n\n从键盘输入当月的利润I，找出要发放的奖金总额？\n\n七、综面\n\n技术面试结束后三个面试官会一起合议面试结果和确定薪资层级，通过后接着进行综面。一般两三天会有结果。\n\n综面的面试官一般是该招聘部门的领导。一开始会对之前的面试有一个整体的评价，然后被问到为什么要做测试？测试工作中有遇到最大的挑战是什么？如何克服的？平时的bug量级是多少等，然后开始指出我的优缺点，以及今后努力的方向和方法，我觉得还是蛮诚恳的，很受用。\n\n八、谈薪\n\n综面一般没啥问题，接着就是华为的HR打电话过来核对之前的工资流水，然后谈薪（一般是由一开始和你对接的HR按照你的期望薪资和公司谈薪，所以让他多争取一下）\n\n九、offer审批\n\n薪资谈拢之后就可以坐等offer发放啦，一般是一周左右的时间，这个要根据部门的需要。\n\n总结：准备面试的整个过程我真的学到了不少东西，大到测试知识、算法练习小到面试技巧、沟通技巧，所以过程当中我就觉得不管结果怎么样，我都欣然接受。同时觉得自己也是幸运的，遇到很靠谱的HR还有好的面试官。\n\n准备面试的过程中，也经常会看这里的面经，所以作为感谢自己也浅谈一下自己的面试经验，希望对要参加面试的小伙伴有帮助😊\n\n#华为OD面经#\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592070312838062080?sourceSSR=users",
        "title": "0227【阿里云】云网络团队Java提前批一面",
        "content": "电话面，总时长75分钟，无算法。\n\n【开场问题】10min\n\n  1. 本科期间写了多少代码，有没有做什么项目\n  2. 为什么要用Spring框架来完成后端开发，Spring有哪些好处？\n  3. 你自己使用过工厂模式吗？有什么好处？\n\n【项目相关】55min\n\n这方面好多问题问的比较深，不是直接问简历写的东西是如何实现的，而是讲完场景后优化思路并深化探讨。（大部分问题是按照项目延伸的，实际的校招对分布式这些没有特别要求）\n\n  1. 看到你使用了websocket，你知道长连接和短连接的区别吗？各有什么优缺点\n  2. http也可以长轮询，为什么不用http？\n  3. 聊聊seata管理分布式事务的方式，讲一下两阶段提交、三阶段提交。\n  4. 聊一下对CAP理论的理解\n  5. 如果让你设计一个分布式系统，你要考虑哪些方面？\n  6. 如果想在分布式系统中实现高性能，要怎么实现？\n  7. 解决库存超卖的具体思路、限流的具体场景和深入，如何识别不合理请求\n  8. 如果自己实现一个rpc框架，要注意什么，怎么实现？\n  9. RPC远程过程调用从消费端到提供端发生了什么？为什么能直接调用服务端上的方法？\n\n【八股】10min\n\n  1. 聊聊Java里面的IO\n  2. Java是值传递还是引用传递\n  3. try catch和finally里面，如果catch有return语句，finally还会执行吗？\n  4. 如果两个对象的hashcode相同，equals一定返回相等吗？\n  5. list set map的区别\n  6. 进程和线程的区别\n  7. 什么情况下会产生死锁\n\n【其他】\n\n感觉面试官对个人思考比较看重，还问了很多其他场景性的问题，也提了一些网络方面前沿的思考，总体来说感觉比目前其他面试难度都高\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592045698447597568?sourceSSR=users",
        "title": "京东—java后端日常实习—一面面经",
        "content": "自我介绍，项目\n\n1、 Redis了解吗，作用\n\n2、 Redis数据结构有哪些，你在项目中使用的是哪一种\n\n3、 Redis健壮性\n\n4、 同步、异步\n\n5、 创建线程的方法哪些\n\n6、 线程池作用\n\n7、 Springboot spring springMvc\n\n8、 Aop 、Ioc\n\n9、 浅拷贝，深拷贝\n\n10、 List a, list b; a=b是浅拷贝还是深拷贝，怎么才能深拷贝\n\n11、 接口、抽象类的区别，抽象类的作用\n\n12、 String stringbuffer stringbuilder\n\n13、 Springboot的注解哪些\n\n14、 你项目中怎么向前端传数据的，Itp什么的\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592042218630680576?sourceSSR=users",
        "title": "华为-大数据开发",
        "content": "研究生学的机器学习，结果今年算法岗全军覆没，倒是开发岗被捞了。由于是三个多月之前的面试，有些问题记不清了，特此抱歉。\n\n23.11.30\n\n一面\n\n自我介绍\n\nJVM的组成，垃圾回收机制\n\nMapReduce的流程，Spark与Hadoop的优劣\n\n快速排序的原理，是否是稳定的（估计是前面答得不太熟，太久都忘了）\n\nBEV的原理和流程（简历项目）\n\n笔试第一题的思路\n\n手撕（只记得是一道滑动窗口的题，用两层for就能解）\n\n反问\n\n23.12.1\n\n二面\n\n自我介绍\n\n静态类和静态方法是什么，为什么静态方法不能使用动态方法\n\nException与Error的区别，举例几个来判断是那种\n\nDocker命令都用过什么\n\nLinux命令都用过什么\n\n手撕 Leetcode56合并区间原题\n\n查看CPU和内存状态的Linux的命令是什么\n\n反问\n\n23.12.7\n\n三面\n\n自我介绍\n\n谈职业规划（感觉没聊到一块去，以为挂了）\n\n24.1.22\n\n电话OC\n\n24.2.1\n\n保温\n\n24.2.23\n\n第二次保温（询问是否一定来）\n\n24.2.27\n\n收到小奖状\n\n![](https://uploadfiles.nowcoder.com/images/20240227/313998363_1709025811507/42C5C012E45081445DC562CB79FC3BF9)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592041871501713408?sourceSSR=users",
        "title": "蔚来安全开发一面",
        "content": "  * 自我介绍\n  * 介绍项目\n  * 一直聊项目\n  * 聊了一下微服务\n  * 项目进程如何通信 线程呢？了解过其他方法吗\n  * docker和虚拟机区别\n  * git合并分支的一些冲突问题\n  * 聊一下动态规划\n  * 代码题：走楼梯\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592035121939722240?sourceSSR=users",
        "title": "即时设计 Java 一面",
        "content": "【Java基础】\n\n  1. 项目介绍\n  2. final字段有什么作用\n  3. String属于基础数据类型吗？\n  4. 基础类型都有哪些\n  5. 普通类和抽象类的区别，抽象类和接口的区别\n  6. 抽象类可以被final修饰吗，为什么？\n  7. 线程和进程的区别\n  8. Java中是如何实现线程的？\n  9. 继承Thread类和实现Runnable接口有什么区别？\n  10. Thread类中run方法和start方法有什么区别\n  11. 线程安全有什么相关的操作？\n  12. 常用哪些数据结构\n  13. ArrayList和HashMap的扩容机制\n  14. HashMap的底层是什么\n  15. TCP和长连接有了解吗？介绍一下TCP\n  16. WebSocket为什么需要心跳包机制？\n  17. 平时实习或者自己的项目是否使用过MySQL调优？\n  18. 如果实践的话，如何进行MySQL调优的排查思路\n\n【算法测评】\n\n  1. 实现一个方法，将元素添加到数组中的指定位置，数组是可扩展容量的\n  2. 实现一个方法，获取二叉树的深度\n\n【开发测评】\n\n  1. 让你设计一个文件管理系统，你觉得都需要哪些必要的模块或者必要的功能，整体的设计有哪些思路\n  2. 实习中你负责的项目主要负责哪些模块，最复杂的是哪些？\n\n面试官是个帅哥，面试体验很不错，已过\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592030000547651584?sourceSSR=users",
        "title": "亚信科技 java",
        "content": "2024.2.27  \n20 min  \n1\\. springcloud 和 springboot 的区别  \n2\\. spring 的 ioc aop  \n3\\. bean 的生命周期  \n4\\. 创建对象有哪些方法  \n5\\. 创建线程有哪些方法  \n6\\. 继承与接口有什么区别,接口里可以有方法吗  \n7\\. stream 流  \n8\\. docker 的优缺点  \n9\\. docker 部署与虚拟机部署有什么区别  \n10\\. 常用的 linunx 命令  \n11\\. mysql 与 redis 的区别  \n12\\. redis 的持久化策略  \n13\\. redis 的集群方式  \n14\\. 常见的缓存淘汰算法  \n15\\. mysql 的分组与查询优化  \n很简单，感觉是 kpi [牛泪]  \n===更新===  \n没想到当天就 oc 了 [笑cry]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592019863858622464?sourceSSR=users",
        "title": "字节前端实习一面",
        "content": "58min\n\n1.说一下学前端的历程和路线，都是通过什么方式学的\n\n2.介绍一下项目的难点\n\n3.说一下技术选型的原因\n\n4.zustand和redux状态管理库的区别\n\n5.react和vue学习上有哪些区别有什么感受\n\n6.css优先级\n\n7.flex布局的常用属性\n\n8.重排和重绘，如何减少重排\n\n9.commonjs和es6的模块化两种导入规范的区别\n\n10.js的基础类型，堆内存和栈内存\n\n11.垃圾回收机制\n\n12.js事件循环，流程\n\n13.http的多版本\n\n14.协商缓存\n\n15.见过的状态码和含义\n\n16.泛型\n\n17.算法，括号匹配\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592018349157101568?sourceSSR=users",
        "title": "汽车之家 2024春招",
        "content": "(推迟了半小时, 估计上一个答的太好了)\n\n  * 为什么离职\n  * 工作内容\n  * 职业规划\n  * gc相关\n  * springboot start之后发生了什么\n  * 会mybatis底层么 (会不了一点, 这能问什么东西???\n  * 线程池有几种工作队列\n  * 多线程并发\n  * 问了一嘴go, 估计是他不会\n  * 想不想面架构相关, 可以叫同事进来\n  * ... 更多记不得了 常规八股而且也没多少\n\n肉眼可见的敷衍, 估计已经有意向人选了\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/592018311584460800?sourceSSR=users",
        "title": "众安保险数据分析实习生面试",
        "content": "今天面了众安保险的数据分析岗，感觉很顺利，但是拢共就面了20min，还是有点没底\n\n更新一下：过啦，当天下午三点面 五点就通知通过了！！ 效率真高。\n\n### 面试流程：\n\n1.自我介绍\n\n2.过去实习中影响最深刻的一个项目\n\n3.两个简单的SQL，口述就行\n\n部门表（员工姓名、部门、薪资） 取出每个部门的最高薪资、平均薪资、总薪资\n\n用户表（用户id、登陆时间） 取出每天每个用户第二次登录的记录（我用窗口函数做的）\n\n4.给我介绍了一下公司业务、部门构成、以及实习生的日常工作\n\n5.反问\n\n我反问了是按项目开展工作还是职能 答：职能\n\n感觉很顺利，但是拢共就面了20min，还是有点没底\n\n## 面试很简单，面试前做了一些准备也附上：\n\n1、sql的执行顺序\n\nFROM - ON - JOIN - WHERE - GROUP BY - WITH - HAVING - SELECT - DISTINCT -\nORDER BY - LIMIT\n\n在 SQL 中，查询语句的执行顺序通常是按照以下步骤进行的：\n\n  1. **FROM** ：首先，从指定的表（或视图）中获取数据，这是查询的基本数据源。\n  2. **WHERE** ：然后，根据 WHERE 子句中的条件筛选出满足条件的行。\n  3. **GROUP BY** ：如果查询包含 GROUP BY 子句，则将结果按照指定的列进行分组。\n  4. **HAVING** ：在分组后，根据 HAVING 子句中的条件筛选出满足条件的分组。HAVING 子句可以被认为是 WHERE 子句针对分组后的结果的过滤器。\n  5. **SELECT** ：选择要检索的列，并且对数据进行计算、转换等操作。\n  6. **DISTINCT** ：如果查询包含 DISTINCT 关键字，则去除结果集中重复的行。\n  7. **ORDER BY** ：按照指定的列对结果集进行排序。\n  8. **LIMIT / OFFSET** ：如果使用了 LIMIT 或 OFFSET 子句，最后根据这些子句来限制结果集的大小或移动结果集的起始位置。\n\n需要注意的是，虽然这是一般情况下的执行顺序，但在实际执行过程中，数据库系统可能会对查询进行优化和重排，以提高性能。\n\n2、表连接方式有哪些及其区别？\n\n在 SQL 中，连接是用于联合两个或多个表的操作，以便获取相关的数据。有几种连接方式，主要包括 INNER JOIN、LEFT JOIN（或 LEFT\nOUTER JOIN）、RIGHT JOIN（或 RIGHT OUTER JOIN）和 FULL JOIN（或 FULL OUTER\nJOIN）。以下是它们的主要区别：\n\n  1. INNER JOIN:INNER JOIN 返回两个表中符合连接条件的行。如果某一行在其中一个表中没有匹配行，则该行不会包含在结果中。\n  2. LEFT JOIN (或 LEFT OUTER JOIN):LEFT JOIN 返回左表中的所有行，以及右表中符合连接条件的行。如果在右表中没有匹配的行，则结果集中右侧的列将包含 NULL 值。\n  3. RIGHT JOIN (或 RIGHT OUTER JOIN):RIGHT JOIN 返回右表中的所有行，以及左表中符合连接条件的行。如果在左表中没有匹配的行，则结果集中左侧的列将包含 NULL 值。\n  4. FULL JOIN (或 FULL OUTER JOIN):FULL JOIN 返回左右两个表中的所有行，如果在其中一个表中没有匹配的行，则另一个表中对应的列将包含 NULL 值。\n\n在实际应用中，选择连接方式取决于你需要的结果。如果你只想获取两个表中匹配的行，可以使用 INNER\nJOIN。如果你想保留左表中的所有行，并且将右表中匹配的行加入，可以使用 LEFT JOIN。同样，RIGHT JOIN 是保留右表中的所有行，而 FULL\nJOIN 保留两个表中的所有行。\n\n连接操作可以根据数据之间的关系和业务需求来选择，因此了解不同连接方式的特点对于写出准确的 SQL 查询语句是很重要的。\n\n3、sql题，表A和表B，a.id = b.id ，保留两表的所有字段，用哪种连接方式？若没有共同的字段，用什么连接？union 和 union\nall的区别？\n\n在MySQL中，`FULL JOIN`语法是不支持的，但你可以通过使用`LEFT JOIN`和`RIGHT JOIN`的组合来模拟`FULL\nJOIN`的效果。`FULL\nJOIN`可以获取左表和右表中的所有行，并将它们组合在一起，缺失的值用NULL填充。这在MySQL中可以通过`UNION`和`LEFT\nJOIN`以及`RIGHT JOIN`来实现。以下是一个示例：\n\n    \n    \n    sqlCopy codeSELECT *\n    FROM tableA\n    LEFT JOIN tableB ON tableA.id = tableB.id\n    UNION\n    SELECT *\n    FROM tableA\n    RIGHT JOIN tableB ON tableA.id = tableB.id\n    \n    \n\n这个查询首先使用`LEFT JOIN`从`tableA`获取所有行，然后使用`UNION`操作符将结果与`RIGHT\nJOIN`从`tableB`获取的所有行组合在一起。这样就模拟了`FULL\nJOIN`的效果。需要注意的是，`UNION`会自动去除重复的行，如果需要保留所有行，则可以使用`UNION ALL`。\n\n如果没有共同的字段，你可以使用CROSS JOIN连接方式。CROSS JOIN会返回两个表的笛卡尔积，即两个表的所有可能组合。\n\n    \n    \n    sqlCopy codeSELECT *\n    FROM tableA\n    CROSS JOIN tableB;\n    \n\n但请注意，CROSS JOIN会返回非常大的结果集，特别是当两个表都很大时，它可能会导致性能问题。因此，在使用CROSS\nJOIN时，务必要仔细考虑数据量的大小和性能影响。\n\nunion与union all的区别在于，union 进行去重，而union all不去重\n\n4、sql去重方式有哪些？\n\n在SQL中，有几种不同的方法可以去重，具体取决于你的数据和需要。以下是一些常见的去重方式：\n\n  1. DISTINCT关键字：使用SELECT语句与DISTINCT关键字一起，可以从结果集中去除重复的行。\n  2. GROUP BY子句：使用GROUP BY子句，将相同的值聚合到一起，并且可以结合聚合函数如COUNT、SUM等使用。\n  3. 使用子查询：通过在SELECT语句中使用子查询，可以选择不重复的行。\n  4. 使用ROW_NUMBER()窗口函数：使用ROW_NUMBER()函数可以为每一行分配一个唯一的数字，然后可以根据这个数字过滤出不重复的行。\n  5. 使用UNION或UNION ALL操作符：如果你有两个或多个表，想要将它们的结果合并并去重，可以使用UNION或UNION ALL操作符。UNION会自动去除重复的行，而UNION ALL会保留所有行。\n\n这些是一些SQL中常见的去重方式，选择合适的方法取决于你的数据结构、需求和性能考虑。\n\n6、窗口函数有哪些\n\n窗口函数（Window Functions）是一种SQL中强大的工具，用于在查询结果集中执行聚合、分析和计算操作。下面是一些常见的窗口函数：\n\n  1. **ROW_NUMBER()** ：为结果集中的每一行分配一个唯一的数字。\n  2. **RANK()** ：为结果集中的每一行分配一个排名，相同的值将获得相同的排名，但是会跳过相同排名数量。\n  3. **DENSE_RANK()** ：与RANK()类似，但是不会跳过相同排名数量，排名是连续的。\n  4. **NTILE(n)** ：将结果集划分为n个相等大小的桶，并为每个桶中的行分配一个桶号。\n  5. **LEAD(column, offset, default)** ：获取当前行之后第offset个行的值。\n  6. **LAG(column, offset, default)** ：获取当前行之前第offset个行的值。\n  7. **FIRST_VALUE(column)** ：获取分组中第一行的指定列的值。\n  8. **LAST_VALUE(column)** ：获取分组中最后一行的指定列的值。\n  9. **SUM(), AVG(), COUNT(), MIN(), MAX()** ：这些聚合函数也可以用作窗口函数，用于在窗口内执行聚合操作而不是整个结果集。\n  10. **PERCENT_RANK()** ：为结果集中的每一行计算百分比排名。\n  11. **CUME_DIST()** ：计算当前行在整个分组中的累积分布百分比。\n  12. **PERCENTILE_CONT()** ：计算分组中指定百分位数的近似值。\n  13. **LAG() OVER (PARTITION BY ... ORDER BY ...)** ：在指定分区内根据指定顺序获取前一行的值。\n  14. **LEAD() OVER (PARTITION BY ... ORDER BY ...)** ：在指定分区内根据指定顺序获取后一行的值。\n\n这些窗口函数可以在SELECT语句的SELECT列表、ORDER BY子句和GROUP\nBY子句中使用，并且通常与OVER子句一起使用，以定义窗口的边界和排序规则。窗口函数提供了强大的功能，可以在查询结果中进行复杂的分析和处理。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591995735910932480?sourceSSR=users",
        "title": "实习校招笔面经汇总（1）中国农业银行研发中心",
        "content": "**无论你刷了多少题、看了多少八股，面对不同公司时还是要“对症下药”，**\n从过来人的笔面经中找到不同企业的特点，因此哨哥开始维护“[应届生实习校招面经汇总](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fcreation%2Fmanager%2FcolumnDetail%2FMdPLJM)”专栏，如果想要更求职信息、求职指导，欢迎联系哨哥，记得一键三连哈~[赞][赞]\n\n**★\n欢迎浏览哨哥置顶帖，了解更多内容：**[血泪经验贴：如何从零准备到收获offer（我是哨哥的置顶贴）](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fgw-c.nowcoder.com%2Fapi%2Fsparta%2Fjump%2Flink%3Flink%3Dhttps%253A%252F%252Fwww.nowcoder.com%252Fdiscuss%252F1250425)\n\n**★\n感兴趣银行等金融科技，可以浏览这：**[哨哥的金融科技学习笔记（哨哥可提供指导）](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fcreation%2Fmanager%2FcolumnDetail%2F0YBxOm)\n\n（本文含暑期实习、校招的笔、面经，看到文末有惊喜~）\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708502095207/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n## 一、关于校招笔试（暑期实习的放后面了）\n\n###\n1、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F543384316047327232%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708503826858/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n2、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F09f2c745c342428c92eea9229836402c%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708503944440/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n3、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F3203f479235b4561a88e510051ecd141%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708504017180/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n4、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F543189872224350208%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708504132303/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n5、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F320b8985b0c94e4e80fecaa10d1f54a3%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708504194164/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n6、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F668c06d18833486195d0d6899edcc7bf%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708504238480/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n7、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2Fda78c8f89cb34086894b9f6d598a50c3%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708504277448/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708509293872/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n## 二、关于校招面试：总行直属研发中心/数据中心\n\n要注意23届之前几年更多都是线上面试，而24届更多都是线下面试，形式上有差别，内容大体保持一致。[狗牛头][狗牛头]\n\n###\n1、农行北京研发中心面经：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F547460071173775360%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708503357562/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n2、农行北京数据中心面经：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F7542bbb66baa4d4b8301d43149c28b07%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708503291734/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n3、农行上海研发中心面经：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F2f35d6063986497fb563f1167920ba15%3FsourceSSR%3Denterprise)、\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708503678818/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n4、农行武汉研发中心面经：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F547034528385110016%3FsourceSSR%3Denterprise)、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F546383207885701120%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708503428532/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708503526232/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n5、农行西安研发中心面经：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F422098676648091648%3FsourceSSR%3Denterprise)、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2Fdec3ba3e4c77493da87817cc4562f3cc%3FsourceSSR%3Denterprise)、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F420300113631883264%3FsourceSSR%3Denterprise)、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F419898732776275968%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708507727864/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708508078682/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708508156493/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708508385416/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n6、农行天津研发中心面经：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F421987796715323392%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708507777646/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n7、农行广州研发中心面经：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F420243497841618944%3FsourceSSR%3Denterprise)、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F420174154249392128%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708508229592/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708508296131/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708509496829/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n## 三、关于校招面试：省分科技岗\n\n###\n1、农行贵州省分行信息科技岗面经：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F2c224d5f077a4e01adccb0cde2b9fe5a%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708503053411/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n2、农行深圳分行金融科技岗面经：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F7c8be3338f6045aba40cb0e1b8a5910c%3FsourceSSR%3Denterprise)、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F421906838621380608%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708503204743/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708507890589/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n3、农行浙江省分笔面经：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F649e3507da464c758dee160d2144ff49%3FsourceSSR%3Denterprise)、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F421753161419968512%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708504514248/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708507969791/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n4、农行四川省分行金融科技岗面经：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F427573561281220608%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708506990807/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n5、农行江苏省分科技岗面经：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F423210204646363136%3FsourceSSR%3Denterprise)、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2Fdb277f3e96b34fe683b5355c211ae32f%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708507401686/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708507653809/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n6、农行广东科技菁英岗面经：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F423137392304926720%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708507483316/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n7、中国农业银行广州分行一面：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F422876577580527616%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708507598749/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708509532192/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n## 四、关于暑期实习（笔、面经都在这了）\n\n###\n1、暑期实习笔试：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F86b7f80930bd4312bb82a1edffc841a6%3FsourceSSR%3Denterprise)、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F478144364934361088%3FsourceSSR%3Denterprise)\n\n笔试基本上和校招差不多。\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708505639808/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708506388467/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n2、农行北研暑期实习面试：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F0e6aa4aaf33d4127a17c412f87a88eb5%3FsourceSSR%3Denterprise)、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F424521337047166976%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708504815877/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708507174349/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n3、农行天研暑期实习面试：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F509057805978996736%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708504971475/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n4、农行成研暑期实习面试：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F501819064084332544%3FsourceSSR%3Denterprise)、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2Ff135f9ef57b646d4bc521175433751f2%3FsourceSSR%3Denterprise)、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F478144364934361088%3FsourceSSR%3Denterprise)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708505258146/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708505107717/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708506450031/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n###\n5、农行上研暑期实习面试：[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2F9e9279b52fe54032a89b87ba4ee24c95%3FsourceSSR%3Denterprise)、[链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fshare%2Fjump%2F56411521708506297603)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708505481175/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708506283542/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n**（看完笔面经，还不好把握的话，可以联系哨哥指导~）**\n\n![](https://uploadfiles.nowcoder.com/images/20240221/5641152_1708509978890/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n**求职 & 就业过程中有任何需要交流指导的，欢迎留言、或者私信哨哥哈~**[赞][赞]\n\n![](https://uploadfiles.nowcoder.com/images/20240121/5641152_1705833496636/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n### **★★★ 哨哥的公众号：吹哨人笔记 ★★★**\n\n### **★★★ 哨哥的公众号：吹哨人笔记 ★★★**\n\n****![](https://uploadfiles.nowcoder.com/images/20240121/5641152_1705834839843/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591965869039685632?sourceSSR=users",
        "title": "如何准备面试知识点？",
        "content": "# 基础版\n\n1、JAVA基础\n\n2、集合\n\n3、数据结构\n\n4、多线程\n\n5、JUC\n\n6、JVM\n\n7、网络\n\n8、Linux命令\n\n9、Mysql【索引机制，事务机制，锁机制】\n\n10、Redis【数据结构】\n\n11、扩展题【接口性能优化和SQL性能优化】\n\n# 提升版\n\n1、分布式相关：高可用，主从机制，负载均衡，缓存处理\n\n2、redis【事件调度机制】\n\n3、分布式会话\n\n4、RabbitMQ\n\n5、Kafka\n\n6、分布式锁\n\n7、分布式事务\n\n8、分布式接口幂等性\n\n9、应用监控和图表【Prometheus监控、Gr】\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591961966155948032?sourceSSR=users",
        "title": "微步运动一面2.27 已oc",
        "content": "30min\n\n1.自我介绍\n\n2.水平垂直居中\n\n3.两栏布局实现方法\n\n4.css选择器权重\n\n5.js数据类型\n\n6.symbol的作用和使用场景\n\n7.判断数据类型的方式\n\n8.把一个ajax请求用promise封装\n\n9.类组件和函数组件的区别\n\n10.js事件循环\n\n11.原型链\n\n12.写数组乱序方法\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591949854578880512?sourceSSR=users",
        "title": "子不语面经（30min）",
        "content": "  * 项目介绍\n  * 问：\n\n  1. 为什么使用SwinT不使用ViT。窗口间attention是如何实现的？为什么不直接使用ViT。如果你只使用Vi 模型，并且想要增加非局域相关性，应该如何操作？：1.增加多层或更多头的注意力头部2.金字塔结构特征融合3.Non-Local Attention4.\n  2. 有了解过其他Transformer在图像上的应用吗？：没有[牛泪]（**BERT，DeiT，T2T-ViT）**\n\n  * 代码题目：\n\n  1. 给你一个非负整数 x ，计算并返回 x 的 算术平方根 。由于返回类型是浮点数，精度0.00001。\n\n二分查找，复杂度：logn\n\n2\\. NMS（非极大抑制）代码：说了实现原理，代码不会[牛泪]。\n\n    \n    \n    def non_max_suppression(boxes, scores, threshold):\n    \n        if len(boxes) == 0:\n            return []\n    \n        # 按得分从高到低排序\n        order = scores.argsort()[::-1]\n    \n        selected_indices = []\n    \n        while len(order) > 0:\n            # 选择得分最高的边界框\n            i = order[0]\n            selected_indices.append(i)\n    \n            # 计算当前边界框与其余边界框的 IoU\n            iou = calculate_iou(boxes[i], boxes[order[1:]])\n    \n            # 保留IoU小于阈值的边界框\n            mask = iou <= threshold\n            order = order[1:][mask]\n    \n        return selected_indices\n    \n    def calculate_iou(box, boxes):\n        x_min = np.maximum(box[0], boxes[:, 0])\n        y_min = np.maximum(box[1], boxes[:, 1])\n        x_max = np.minimum(box[2], boxes[:, 2])\n        y_max = np.minimum(box[3], boxes[:, 3])\n    \n        intersection = np.maximum(0, x_max - x_min) * np.maximum(0, y_max - y_min)\n        area_box = (box[2] - box[0]) * (box[3] - box[1])\n        area_boxes = (boxes[:, 2] - boxes[:, 0]) * (boxes[:, 3] - boxes[:, 1])\n    \n        iou = intersection / (area_box + area_boxes - intersection)\n    \n        return iou\n    \n    \n\n反思:整体偏向于Transformer。我懂得不多...\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591928615818866688?sourceSSR=users",
        "title": "北京掌上先机Java后端日常实习面试（纯Java）",
        "content": "  1. 先自我介绍\n  2. 使用过Java什么框架\n  3. 使用Jdk8的什么特性\n  4. 使用过Stream流的哪些方法？过滤的方法是什么？去重的方法是什么？\n  5. 去重的原理是什么\n  6. 重写equals为什么一定需要重新他的hashcode的方法\n  7. Hash算法对应的Java中的什么类\n  8. 如果一个值相等，哈希值不相等的对象能否加入同一个容器中呢\n  9. 哈希冲突有了解吗？举一个哈希冲突的例子\n  10. Java中是用什么对哈希值取模的\n  11. 介绍一下hashmap中的红黑树？为什么要使用红黑树\n  12. hashmap是线程安全的吗？一般线程安全使用的是哪一个类？\n  13. currenthashmap实现线程安全的原理是什么\n  14. 有了解threadloacl，并介绍一下你的使用场景\n  15. 在线程池中使用threadloacl会出现什么问题\n  16. 如果实现threadloacl中开辟一个子线程池，如果共享threadloacl中的数据，有遇到过类似的场景吗\n  17. 多线程的实现方式\n  18. 介绍一下异步的理解？Sping中是如何实现异步的\n  19. 有使用过事务吗\n  20. mybtis中“#”和“$”的区别?如何实现crud操作的？实现一个简单的sql语句有哪几种实现方式\n  21. Java虚拟机有了解吗？介绍一下GC算法的原理\n  22. 自己是如何学习Java的\n  23. 自己的一个人生职业规划\n  24. 有什么想向我了解的吗\n\n虽然是很简单的八股，但是真的没有背啊！\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591752493814538240?sourceSSR=users",
        "title": "wxg 公众号&小程序 日常实习二面面经",
        "content": "# 项目 1小时\n\n问了播放器项目，问怎么用到ffmpeg的，问到整个代码的框架是什么，怎么进行音视频同步，怎么控制解码和读取文件速度。\n\n问了RTSP的内容，怎么对音视频数据进行封装，问了客户端连接的流程，怎么分包，怎么区别不同的音视频包，怎么进行重传。\n\n最后问了操作系统的内容，问mmap怎么做到共享内存，我答可以通过一个flag来进行共享，然后问不同的进程怎么共享内存，忘记了mmap是可以映射文件的，没答上来，后面才知道不映射文件的话是用的匿名文件。\n\n然后又问了虚函数表，虚函数表是怎么实现的，在对象的内存中会有一个指针指向这个虚函数表，我答成在每一个对象内部都有一个虚函数表，与之前看的内容搞混了。还是得多复习。\n\n# 算法 50分钟\n\n  1. 一个二叉树，其中两个节点的数据被交换了，问怎么找到这两个节点。（想了一下，找到了一点思路，然后面试官就叫做下一题了）\n  2. 有一个string数组，一个查询的search_word ，对于search_word每一个前缀，在这个strings数组中找到具有相同前缀字典序最小的三个string，这个三个string的数组，例：\n\n    \n    \n    strings = [\"money\", \"monday\", \"monkey\", \"mother\", \"map\", \"monkeys\"，\"mobile\", \"monetary\"], search_word=\"money\"。\n    ans = [\n        [\"map\", \"mobile\",\"monday\"],\n        [\"mobile\",\"monday\",  \"monetary\"],\n        [\"monday\",\"monetary\", \"money\"],\n        [\"money\", \"monetary\"],\n        [\"money\"]\n    ]\n    \n\n我写了一个前缀树，可惜时间不够，没写完，要是给多一点时间就写出来了，然后面试官说我想复杂了，巴拉巴拉一通写也没写出来，我想说，对于多个不同的search_word，这个前缀树是可以复用的，而且时间复杂度是最低的，遍历一次就可以得到答案，不需要遍历整颗前缀树，只需要O(n)的空间，但是当时有点沮丧了，没有和面试官说出来。\n\n  3. 简单题\n\n# 总结\n\n压力面，算法题写的不是很好，问到的两个问题答错了，我的cmu15445项目也没有问，估计是上一轮面试官问完了，这次就没有问，本来还是挺有信心的，不过面完之后心情有点失落，感觉寄了。算法刚开始写的时候，面试官见我刷了600题，就说我有挺多时间用来学习的，要不要给我上点难度，我其实不怕难题，我只是比较紧张，加上想的太多，想太多怎么优化空间复杂度和时间复杂度，导致最基本的实现也没写出来。其实不用管那么多时间复杂度和空间复杂度，因为可能面试官也不知道最佳的时间和空间复杂度，而且没有oj，先把正确答案写了再说，面试官问道怎么提升它就讲思路，时间不够他也不会让写代码的。还有我是不会改这一条的，刷到700题我也写上去。这场面试过了就好，不过也无所谓，题照样刷，习照样学。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591742738584875008?sourceSSR=users",
        "title": "依图日常实习二面 已oc",
        "content": "1.项目继续拷打\n\n2.解释一下数组的底层实现\n\n3.java有哪些集合，具体介绍一下\n\n4.为什么set可以去重\n\n5.索引什么时候失效\n\n6.算法题一道\n\n二面主要是在拷打项目和一道算法题，八股基本没问，问了我也没回答出来[牛泪]。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591740699846926336?sourceSSR=users",
        "title": "阿里云   实习面经   二面",
        "content": "## 写在前面\n\n这是本人去年找暑期实习时候的面经，java后端方向。之前面试的时候一直会做录音复盘，但是并未整理过面经，最近有uu私信想看一下，因此分享给大家，做个参考，希望可以帮助大家。以下是相关文章链接：[阿里云一面](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F590218714595721216)、[阿里云三面](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F593036111606198272)、[秋招总结](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F578953210505732096)。\n\n## 面试时长\n\n75min\n\n## 面试形式\n\n视频面试\n\n## 面试内容\n\n  1. 自我介绍；\n\n  2. 项目介绍：参与了哪些项目，自己挑一个项目详细展开，介绍项目的创新点和难点，针对其中存在的问题有没有一些思考；\n\n  3. 实习经历介绍：介绍下完成了哪些需求，业务流程，完成需求过程中遇到了哪些问题，如何解决的；\n\n  4. Mysql相关：MyISAM和InnoDB的区别？(行级锁、事务、外键、崩溃后的安全恢复、MVCC、性能等)\n\n  5. Mysql相关：索引的底层数据结构？为什么选择这样的结构？（B+树）\n\n  6. Mysql相关：自己选择维度划分介绍有哪些索引类型？（按照底层存储方式角度划分：聚簇索引和非聚簇索引）\n\n  7. Mysql相关：最左前缀匹配原则是什么？自己举例进行说明；\n\n  8. Mysql相关：索引下推是什么？（在遍历过程中，对联合索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数）\n\n  9. Mysql相关：事务隔离级别？InnoDB引擎的默认隔离级别？InnoDB引擎如何解决幻读？（读未提交、读已提交、**可重复读** 、串行化）\n\n  10. Mysql相关：你在项目中使用了哪些方式来对数据库查询进行优化？\n\n  11. Spring相关：介绍下IoC和AOP？在项目中哪些地方有使用？（Mybatis）\n\n  12. Spring相关：介绍下项目中和数据库有关的操作？在Spring中连接数据库进行数据插入操作时有哪些需要注意的地方？Spring中\n\n事务传播行为有哪些？你在项目中基于什么考虑使用的？（`TransactionDefinition.PROPAGATION_REQUIRED`、`TransactionDefinition.PROPAGATION_REQUIRES_NEW`、`TransactionDefinition.PROPAGATION_NESTED`）；\n\n  13. Spring相关：bean的生命周期？有哪些注入方式？（构造器、setter和属性注入）\n\n  14. Spring相关：线程池有哪些核心参数？各自的作用？项目中如何使用的？（核心三参数：`corePoolSize`、`maximumPoolSize`和`workQueue`）\n\n  15. 并发相关：进程、线程和协程的区别和作用？\n\n  16. 并发相关：`volatile`关键字的作用？在保证线程安全的情况下实现单例对象的获取？（双重校验锁）\n\n  17. 并发相关：`synchronized`关键字的作用？底层实现原理？和`ReentrantLock`的区别？锁升级及实现原理？（偏向锁->轻量级锁->重量级锁）\n\n  18. Redis相关：有哪些持久化方式？AOF和RDB的底层实现原理？在项目中用的是哪种？基于什么考虑使用的？\n\n  19. Redis相关：引入哨兵集之后，主从故障的转移过程？\n\n  20. Redis相关：Redis是单线程吗？采用单线程为什么速度快？\n\n  21. Redis相关：Redis阻塞的原因有哪些？出现阻塞后的排查以及解决方式？\n\n  22. 算法题：Leetcode53 最大子数组和；\n\n  23. 算法题：Leetcode146 LRU缓存。\n\n## 总结\n\n二面开始针对项目和实习经历的追问开始变得多了起来，而且会在听你介绍的时候针对其中的一些点展开追问，这个过程中会涉及到八股文的提问。所以，在准备项目的过程中，一定要好好想想项目用到了哪些技术，相关的知识点最好都多看看，这些在面试中都是极有可能会问到的。二面开始，面试官会更加看重你在做项目过程中的一些思考，比如遇到问题的解决方式和一些反思总结。因此，除了八股文外，还应该多思考下自己项目的亮点，最好有一些别人没有的创新点，这样会很有优势。在介绍项目的时候也可以简单说说你通过项目学到了什么，有哪些总结思考，以此来展示自己的学习能力。\n\nPS：本来是给的一道算法题，估计看我写的很快，问我是不是做过，回答是之后又给了一道Orz。也许做题速度也需要稍微控制控制hhhhh。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591719245940002816?sourceSSR=users",
        "title": "【经验分享】面试小插曲-35岁求职",
        "content": "**背景：**\n之前面试的时候碰到了一位35+的求职者，这位姐姐履历非常丰富，且本人乐观积极，在场只有她一位35+的求职者。这种情况下面试官询问的问题和应届生的问题完全不一样，这也可以**\n_参考就业市场对35+女性的实际招聘情况_** 。\n\n**1.工作与家庭怎么平衡**\n\n-面试官首先问的是家庭情况，配偶及子女情况。主要的是工作地点是否和配偶日常工作和居住地距离较远。是否会影响工作？\n\n-这位姐姐的配偶和子女的工作及居住地和她求职公司的工作地是一样的，并没有这方面的隐患，面试官说了一句：“那还可以。”\n\n**2.此前经历**\n\n-之后面试官对这位姐姐此前的经历开始询问了，由于这个岗位需要会小语种，这个姐姐是会3、4种外语，并且还有过在外国实地的工作经历，面试官就问了对这个岗位的相关了解。\n\n**结果：** 下午二面的时候这个姐姐就不在了。很优秀依然被淘汰了。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591702540652163072?sourceSSR=users",
        "title": "掌上先机（慧策）二面 面经",
        "content": "base北京\n\n2.24（元宵节）\n\n（上来面试官跟我说节日快乐，呜呜呜，感动）\n\n1.拷打项目，项目中的难点\n\n2.redis为什么快\n\n3.缓存雪崩怎么解决\n\n4.说一下SpringMVC的工作原理，具体说一下类\n\n4.一道手撕，随机数组中取最大的几个数\n\n（起初暴力解决，后面面试官问有没有优化方案，回答的快速排序）\n\n5.兴趣爱好，比如平时有没有阅读源码的习惯\n\n（然后就着重说了一下之前做过的一个mongodbtool-spring-boot-starter，没上传到maven仓库）\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591683403678769152?sourceSSR=users",
        "title": "字节后端一面 gg",
        "content": "  * 一个int多少字节 一个字节多少位\n  * 一个四位二进制能表达的最大范围 如果加上符号位呢\n  * 了解的数据结构？\n  * 说一下list和hashmap去put一个键值对的具体原理过程\n  * 哈希冲突除了链表法的解决方案\n  * n个进程 每个进程需要m个资源 问最少多少个资源不会死锁\n  * 如何判断链表相交？链表有环呢？\n  * 在单核cpu中 执行多线程有提高效率吗？讲了IO阻塞 假设不IO阻塞 就单核运行如何？\n  * 讲讲快排 时间复杂度分析 有具体复杂度递推式吗\n  * 稳定nlogn？答了最坏n方\n  * 什么情况n方？\n  * 讲一下垃圾回收的算法 复制算法的改进？\n  * 讲一下mvcc\n  * 事务四种隔离级别\n  * 代码题：给一个二叉树和链表 判断链表是否是二叉树的子链 \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591718956688322560?sourceSSR=users",
        "title": "【经验分享】面试时遇到不会的题目该怎么处理？",
        "content": "****\n\n**1.思考题目是否和自己的经历中有相似之处**\n\n-当面试官给出一个问题时，这个问题你之前从未遇到过，但是你认为**和自己过去经历中有相似的场景** ，或者**解决这个问题可以从这种经历中借鉴部分方式和思路** 的话，那么可以这样回答：\n\n-这类问题我认为和我之前遇到过的XXX场景非常像/和我此前遇到过的XXX问题可以用同一种方式去解决，可以通过XXX把XXX这个XXX给打通。\n\n-如果有和面试官所举问题有区别，但面试官对你提出的解决方式或觉得你有处理这种问题的基本问题，他会对再讲的更细致一些，再问你该如何解决。\n\n**2.问面试官更为具体的内容**\n\n-如果实在是没有什么共通之地，你可以尝试反问领导以获取更多信息，并**表示自己在这方面的缺失，但可以尝试。** 可以这样回答：\n\n-虽然此前我在这方面的经验比较少，但是我也想尝试去回答这个问题，所以我也想问一下面试官，是否是类似一个XXX的场景呢？回答完之后要讲：“以上是我的回答，感谢面试官的聆听。之后我会继续在这方面进行补足的！”\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591698317717909504?sourceSSR=users",
        "title": "掌上先机（慧策）一面 面经",
        "content": "base北京\n\n2.20\n\n1.JVM虚拟机相关内容，元空间，创建的对象存在哪里\n\n（项目的问题，大概就是功能的实现，还有对应的考量）\n\n2.你认为一个产品需求的开发和对应技术有什么联系，说一下你的想法，还有要考虑的问题（看到简历上的项目问的）\n\n3.Spring事务失效的场景\n\n4.怎么解决Spring事务失效\n\n5.说一下mysql的索引\n\n6.说一下遇到回表过多的话怎么解决\n\n7.在mysql中存了一个NULL，并且建立了一个联合索引，那么查这个NULL会走索引吗\n\n8.mysql默认的事务隔离级别\n\n9.在读已提交的隔离级别下会不会发生幻读\n\n10.有了解过协议开发吗\n\n（协议开发聊的比较多，给我举了些例子，然后我能想到的就是http协议的拥塞控制、滑动窗口这些）\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591645285642670080?sourceSSR=users",
        "title": "趋动科技二面 2.22  已挂",
        "content": "1.上一家实习的主要工作是做什么\n\n2.如果给你一个需求，可能有很多的页面，你该怎么去快速开发，讲一下工作流程\n\n3.vue3中的ref定义响应式数据是怎么实现的\n\n4.如何把父组件中的响应式的值传到子组件中\n\n5.如何跨组件通信\n\n6.如何让一个值失去响应式\n\n7.vue3对比vue2生命周期上有哪些改进\n\n8.异步组件优化是怎么做的，分包策略一般是什么。有没有尝试把一些大的第三方组件抽离出来\n\n反问：学习建议\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591644038910971904?sourceSSR=users",
        "title": "字节 日常实习 一面凉经",
        "content": "总时长50分钟，面试官很和善我太菜了\n\n1.研究生项目相关\n\n项目计算流程\n\n项目加速效果\n\nnccl相关\n\n2.cmu15445项目相关\n\nbuffer pool\n\nhash table\n\n3.c++八股 optional function vector和list\n\n4.算法 只给了思路，没手撕出来\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591627980716118016?sourceSSR=users",
        "title": "春招字节飞书一面面经｜讲解｜0226",
        "content": "继续挑选了一篇牛客上的热门面经给大家做**讲解分析，参考回答和学习资料指引** ，期望对大家有所帮助～\n\n本文也是 **《热门面经讲解》** 系列文章之一，大家可以**点个赞关注** ，我会持续更新\n\n**面经主要考察点总结：** ：操作系统+计算机网络+redis\n\n>\n> [原贴链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Ffeed%2Fmain%2Fdetail%2Ffa99eea70dbf4e16a31db0809a32ca3e)\n>\n>\n> ![alt](https://uploadfiles.nowcoder.com/images/20240226/7538287_1708926201773/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n## 1\\. OS的虚拟内存\n\n**解析:** 如果只是让简单介绍一下虚拟内存，那面试官可能是想引入话题之后再细问，我们可以从虚拟内存是啥，解决什么问题，如何工作等来简单介绍下。\n\n**参考回答：**\n\n> 操作系统的虚拟内存是一种重要的内存管理技术，它的核心思想是利用硬盘空间来扩展物理内存的容量，从而让计算机能够运行更大或更多的程序。\n>\n>\n> 具体来说，虚拟内存技术通过将物理内存中的一部分数据与硬盘上的交换文件进行交换，实现了内存的“扩充”。当程序需要访问的数据不在物理内存中时，操作系统会将这部分数据从硬盘的交换文件中读取到物理内存中，以供程序使用。同样地，当物理内存空间不足时，操作系统也会将一部分较少使用或暂时不需要使用的数据交换到硬盘的交换文件中，以释放物理内存空间给需要使用它的程序。\n\n**学习指引：**\n\n虚拟内存属于操作系统的重要知识点，属于内存管理的一部分。建议大家整体掌握内存管理。\n\n1.博客：[小林\ncoding|图解系统｜虚拟内存](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fxiaolincoding.com%2Fos%2F3_memory%2Fvmem.html)\n\n2.书籍：**《现代操作系统原理与实现》｜第四章 内存管理 ｜ 虚拟内存**\n\n## 2\\. 直播用udp还是tcp，为什么？udp和tcp的区别：\n\n**解析:** 计算机网络属于校招重要专项之一，tcp和udp属于面试重点，需要掌握。\n\n**参考回答:**\n\n>\n> 直播：通常使用UDP（用户数据报协议）而非TCP（传输控制协议），因为UDP具有更低的延迟和更高的实时性，适合流媒体传输。UDP不保证数据包的顺序和可靠性，但减少了因重传和确认导致的延迟。TCP则提供可靠的数据传输服务，确保数据包的顺序和完整性，但可能增加传输延迟。UDP和TCP的主要区别在于可靠性、顺序性和连接性：UDP是无连接的、不可靠的协议，适用于对实时性要求较高的场景；TCP是面向连接的、可靠的协议，适用于需要确保数据完整性的场景。\n\n> UDP和TCP的区别：\n>\n>\n> 1.连接方式：TCP是面向连接的协议，意味着在发送数据之前，需要在发送方和接收方之间建立一条连接。而UDP则是无连接的协议，发送数据之前不需要建立连接，因此可以减少一些额外的开销。\n>\n>\n> 2.可靠性：TCP是可靠的协议，通过校验和、序列号、确认应答、重发控制、连接管理以及窗口控制等机制实现可靠性传输。而UDP则尽最大努力交付，不保证可靠交付，因此可能会出现数据丢失或重复的情况。\n>\n>\n> 3.传输效率：由于TCP需要建立连接、保证数据可靠性和顺序性，所以相对于UDP来说，其传输效率较低。而UDP则由于其简单、无连接的特性，传输效率较高，适用于对高速传输和实时性有较高要求的场景。\n>\n>\n> 4.应用场景：TCP协议适用于需要可靠传输的场景，如文件传输、网页浏览等。而UDP协议则更适用于对实时性要求较高的场景，如在线直播、视频会议、实时游戏等。\n>\n> 等等....\n\n**学习指引：**\n\n  1. 博客：[小林 coding｜图解网络｜UDP 和 TCP 有什么区别呢？分别的应用场景是？](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fxiaolincoding.com%2Fnetwork%2F3_tcp%2Ftcp_interview.html%23udp-%25E5%2592%258C-tcp-%25E6%259C%2589%25E4%25BB%2580%25E4%25B9%2588%25E5%258C%25BA%25E5%2588%25AB%25E5%2591%25A2-%25E5%2588%2586%25E5%2588%25AB%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8%25E5%259C%25BA%25E6%2599%25AF%25E6%2598%25AF)\n\n  2. 系统学习：**推荐书籍《图解TCP/IP 第5版》｜第六章 TCP与UDP；** （我有电子版｜赠）\n\n## 3\\. 说出你知道的所有保证线程安全/同步的方法\n\n**解析:**\n\n这问题有点突兀，需要结合面试场景来看，或者跟面试官确认好是从语言层面，还是从操作系统层面来回答。这里因为没有提语言，那我们就从操作系统层面来说说。\n\n**参考回答**\n\n> 1.互斥锁（Mutex）：\n> 互斥锁是最基本的线程同步机制之一。当一个线程需要访问共享资源时，它会先尝试获取互斥锁。如果锁已经被其他线程占用，则该线程会被阻塞，直到锁被释放。只有持有锁的线程才能访问共享资源，从而保证了线程安全。\n>\n> 2.信号量（Semaphore）：\n> 信号量是一个用于控制多个线程对共享资源访问的计数器。与互斥锁不同，信号量允许一定数量的线程同时访问共享资源。当线程需要访问资源时，它会尝试获取信号量；如果信号量的值大于0，则允许访问并将信号量减1；如果信号量的值为0，则线程会被阻塞。\n>\n> 3.条件变量（Condition Variable）： 条件变量常常与互斥锁一起使用，用于实现线程之间的等待-\n> 通知机制。线程可以在条件变量上等待，直到满足某个条件；其他线程可以在条件满足时通知等待的线程。条件变量用于解决生产者-消费者问题等多线程同步问题。\n>\n> 4.读写锁（Read-Write Lock）：\n> 读写锁是一种特殊的锁，它允许多个线程同时读取共享资源，但只允许一个线程写入共享资源。这提高了并发性能，因为读取操作通常不会修改数据，所以多个线程可以同时进行读取而不会相互干扰。\n>\n> 5.屏障（Barrier）：\n> 屏障是一种同步机制，用于让一组线程在继续执行之前等待彼此。它确保所有线程都达到某个点后，再一起继续执行。这常用于并行计算中，将任务划分为多个阶段，并确保每个阶段的所有线程都完成后才能进入下一个阶段。\n>\n> 6.事件（Event）：\n> 事件是一种同步机制，用于通知一个或多个线程某个事件已经发生。线程可以等待某个事件发生后再继续执行。事件通常用于实现跨线程的通信和协调。\n>\n> 等等\n\n**学习指引：**\n\n1.书籍：**《现代操作系统原理与实现》｜第8章 同步原语**\n\n## 4\\. Tcp为什么挥手是4次？\n\n**解析：**\n\n**参考回答：**\n\n**学习指引：**\n\n## 4\\. Tcp为什么挥手是4次？\n\n**解析：** TCP三次握手四次挥手系列问题之一，简单且重点掌握。\n\n**参考回答：**\n\n> 需要先描述下：四次挥手双方发 FIN 包的过程，就能理解为什么需要四次了。\n>\n> 1.关闭连接时，客户端向服务端发送 FIN 时，仅仅表示客户端不再发送数据了但是还能接收数据。\n>\n> 2.服务端收到客户端的 FIN 报文时，先回一个 ACK 应答报文，而服务端可能还有数据需要处理和发送，等服务端不再发送数据时，才发送 FIN\n> 报文给客户端来表示同意现在关闭连接。\n>\n> 从上面过程可知，服务端通常需要等待完成数据的发送和处理，所以服务端的 ACK 和 FIN 一般都会分开发送，因此是需要四次挥手。\n\n**学习指引：** 先理解三握四挥的过程，然后推荐资料里的系列面试题全部掌握。\n\n1.博客：[小林coding｜图解网络｜TCP为什么挥手需要四次](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fxiaolincoding.com%2Fnetwork%2F3_tcp%2Ftcp_interview.html%23%25E4%25B8%25BA%25E4%25BB%2580%25E4%25B9%2588%25E6%258C%25A5%25E6%2589%258B%25E9%259C%2580%25E8%25A6%2581%25E5%259B%259B%25E6%25AC%25A1)\n\n## 5\\. Https对称加密还是非对称？\n\n**解析：** 校招计算机网络又一重要考察点：http相关问题，必须掌握。回到问题本身：采用混合加密,两者相结合\n\n**参考回答：**\n\n> _HTTPS 采用的是对称加密和非对称加密结合的_ *「混合加密」*_方式：_\n>\n>   1. 在通信建立前采用非对称加密的方式交换「会话秘钥」，后续就不再使用非对称加密。\n>   2. 在通信过程中全部使用对称加密的「会话秘钥」的方式加密明文数据。\n>\n\n> _采用「混合加密」的方式的原因：_\n>\n> 1.对称加密只使用一个密钥，运算速度快，密 钥必须保密，无法做到安全的密钥交换。\n>\n> 2.非对称加密使用两个密钥：公钥和私钥，公钥可以任意分发而私钥保密，解决了密钥交换问题但速度慢。\n\n**学习指引：**\n\n1.博客：[小林coding｜HTTPS 解决了 HTTP\n的哪些问题？](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fxiaolincoding.com%2Fnetwork%2F2_http%2Fhttp_interview.html%23https-%25E8%25A7%25A3%25E5%2586%25B3%25E4%25BA%2586-http-%25E7%259A%2584%25E5%2593%25AA%25E4%25BA%259B%25E9%2597%25AE%25E9%25A2%2598)\n中的第1点有讲解混合加密\n\n## 6\\. Https的证书讲一下？为什么要有证书？没有证书会怎么样？\n\n**解析：** 正常流程：继续上面的Https的问题相关实现细节提问\n\n**参考回答：**\n\n> _数字证书是什么？_ : 一个数字证书通常包含了:公钥；持有者信息；证书认证机构（CA）的信息；CA\n> 对这份文件的数字签名及使用的算法；证书有效期；还有一些其他额外信息；\n>\n> _数字证书的作用_ :\n> 是用来认证公钥持有者的身份，以防止第三方进行冒充。说简单些，证书就是用来告诉客户端，该服务端是否是合法的，因为只有证书合法，才代表服务端身份是可信的。\n>\n> _没有证书会怎么样？_ ：当然就是没办法认证公钥持有者的身份，容易第三方进行冒充。\n\n**学习指引：** 更多细节包括：数字证书签发和验证流程等，看这篇够了\n\n1。博客: [Https\nRSA握手解析｜客户端验证证书](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fxiaolincoding.com%2Fnetwork%2F2_http%2Fhttps_rsa.html%23%25E5%25AE%25A2%25E6%2588%25B7%25E7%25AB%25AF%25E9%25AA%258C%25E8%25AF%2581%25E8%25AF%2581%25E4%25B9%25A6)\n\n## 7\\. redis的zset讲一下？\n\n**解析：**\nredis的对象考察中，zset是一个设计上比较有特点的数据结。尤其是底层用到的跳表，是面试官喜欢考察的点。回答这个问题可以简单讲一下zset的特点，应用场景，底层数据结构就行。引入这个话题，其他的等面试官细问后再回答。\n\n**参考回答：**\n\n> zset（有序集合）是一种特殊的数据结构，它将元素与分数相关联，并根据分数对元素进行排序.\n> 具有：元素唯一，有序性，分数与元素关联，高效的成员查找，高效的范围查询等特点。\n\n> 典型应用场景：\n>\n>   1. 排行榜：zset常用于构建排行榜，其中分数可以表示用户的得分或其他权重值。\n>   2. 实时热门数据统计：可以将数据的热度、点击量等作为有序集合的分数，通过不断更新分数来实时统计热门数据。\n>   3. 带权重的任务调度：可以将任务的执行时间戳作为有序集合的分数，以实现带权重的任务调度。\n>   4. 数据过期策略：可以将数据的过期时间作为有序集合的分数，根据过期时间自动清理数据。\n>\n\n> 底层数据结构：\n> Redis的zset底层通过（压缩列表）或者（hash表+跳跃列表）实现。跳跃列表是一种可以进行对数级别查找的数据结构，通过在每个节点上维护多个指向其他节点的指针，可以快速访问到其他节点。\n\n**学习指引：** 除了ZSet本省，其他还需要重点掌握跳表的增删改查流程。包括获取某个元素排行等过程和复杂度分析；\n\n  1. 博客：[zset+跳表：详细分析](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fxiaolincoding.com%2Fredis%2Fdata_struct%2Fdata_struct.html%23%25E8%25B7%25B3%25E8%25A1%25A8) 该系列教程也推荐作为redis面试的学习资料。\n\n  2. 系统学习：书籍 **《redis设计与实现》｜第5章 跳跃表**\n\n本文也是 **《热门面经讲解》** 系列文章之一，大家可以**点个赞和关注** ，我会持续更新。\n\n如有其他问题，也可咨询我！\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591645103320469504?sourceSSR=users",
        "title": "趋动科技一面2.22",
        "content": "1.为什么喜欢做前端\n\n2.js有哪些数据类型\n\n3.weakmap有哪些特性\n\n4.js如何进行垃圾回收\n\n5.模块化有哪些规范和标准\n\n6.平时用过哪些处理异步的方法\n\n7.如果实现一个简易的promise，有哪些核心的关键点\n\n使用async await实现异步时如何捕获异常\n\n8.说一下有哪些使用ts的场景\n\n9.css平时经常用什么布局\n\n10.有没有用到过伪元素和伪类\n\n11.一个div元素宽度是20，让他变到40时有过度效果，用什么属性做\n\n12.vue中响应式是怎么实现的\n\n13.讲一下diff算法\n\n14.聊项目\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591600676396883968?sourceSSR=users",
        "title": "小厂java一面",
        "content": "1.group by 和聚合函数的一道sql题\n\n2.括号匹配 栈的应用\n\n3.最长连续序列 hashmap的使用\n\n4.spring event （不会）\n\n5.倒排索引原理\n\n6.es的使用流程\n\n7.docker怎么部署java项目\n\n8.docker部署微服务项目的时候怎么部署到同一个network下\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591595583526166528?sourceSSR=users",
        "title": "【6.面试准备和注意事项】",
        "content": "作者简介和专栏内容见专栏介绍：[https://www.nowcoder.com/creation/manager/columnDetail/0eL5bM](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fgw-c.nowcoder.com%2Fapi%2Fsparta%2Fjump%2Flink%3Flink%3Dhttps%253A%252F%252Fwww.nowcoder.com%252Fcreation%252Fmanager%252FcolumnDetail%252F0eL5bM)\n\n麻烦看到贴子的伙伴点点赞大家点赞订阅支持下。提前祝各位offer多多，有问题评论区见~~\n\n## 面试轮次\n\n一般为2~3轮面试+hr面，其中1~2轮技术面，1轮综合面，1轮hr面\n\n## 面试前半小时\n\n  * 面试前先去公司官网看看，或者问问gpt，了解下公司的主要业务，自己岗位的要求，该公司在行业的地位，竞品，合作商等，在面试前的自我介绍可以在最后加入进去。例如：我也了解到贵公司在XXX行业耕耘很久，对XX非常感兴趣。\n  * 准备反问的问题：一般面试最后都会问你有什么问题，这也是很重要的环节，尤其在综合面，面试官一般是部分leader，会看你的问题是否真的是对这个岗位感兴趣，具体什么面试问什么在下边专门介绍。\n  * 调试好设备，测试好声音视频和你的本地编译器。\n\n## 自我介绍\n\n这里不是读你的简历，也不是讲你的兴趣爱好这些（除国企研究所），是介绍你的特点、能力和岗位匹配的地方。在介绍中提到你的项目作为有力说明，后续面试官也会继续问下去。尽量用数据和实际的内容去证明你的特点，别用空话。以下用自己的简历简单举个例子：\n\n![](https://uploadfiles.nowcoder.com/files/20240226/845797552_1708919214970/1706012663426-e4a883a9-c840-4fc5-91a6-ba29bb2c96b2.jpeg)\n\n所以可以看到并没有流水线的读简历的内容，这些面试官看得见，你要帮他从简历中提炼出你和岗位匹配的特点。着重介绍自己和岗位匹配的能力，用简历中亮眼的地方作为说明你能力的证明，最后再介绍自己的能力靠什么保证。这个技巧能让你的第一印象就和其他人不一样，同时把你简历中擅长的地方暴露给面试官，引导他问你着重提到的项目，之后就是用你准备好的各种问题来应对。所以一开始的自我介绍就是掌握主动权最好的时机。\n\n## 面试中\n\n  * 有条件进行录音，有些软件不允许录屏录音可用手机记录\n  * 保持眼神交流，眼神不躲闪，当然前提是你准备的充分，自然有这样的自信。\n  * 讲的话要有条理，用一些首先、第一点等技巧，分点叙述来体现。\n  * 面试官问的问题要搞清楚问的是什么，不清楚及时反问，上来就背八股还回答错了就比较尴尬。\n  * 开始回答面试官问题时就不会紧张了，如果准备充分整个面试会越来越顺利。\n  * 面试当做聊天，主题是你熟悉的简历，所以不要紧张，大部分面试官都很温柔，不会的问题也会引导你或帮你解释。\n\n## 面试后\n\n根据回忆、录音回顾自己各个问题的回答，对没答上或没答好的地方再熟悉下，修改好对应的八股笔记。更新自己的秋招记录表，搜一下其他人的面经。\n\n# 各类型面试介绍\n\n## 技术面\n\n考察：技术匹配程度，也是面试重头戏\n\n常问问题：项目实习八股相关，参考面经\n\n反问：技术一面一般是同事或组长，所以除了问一些技术问题，有些实际的工作问题也可以问，但要委婉一些\n\n  * 面试中您提到XXX方法，\n  * 上下班时间\n  * 工作氛围\n\n别打听自己的面试结果，是不自信和浮躁的表现，你能做的就是好好准备这场面试，然后接受所有结果。\n\n## 综合面（主管面）\n\n考察：你的稳定性，技术以外的其他能力，潜力等\n\n常问问题：\n\n  * 怎么看待这个岗位？\n  * 了解我们公司吗？\n  * 为什么能胜任这个工作（对应自我介绍完美回答）？\n  * 项目深入，问一些实际场景如何解决（用已有知识尝试说）？\n  * 一些开放性的问题\n\n反问：（给自己加分+了解公司）\n\n  * 对校招生最看重什么？\n  * 晋升机制\n  * 新人培养机制\n  * 入职后的岗位根据情况分配还是可选？\n  * 能有机会和您聊天非常难得，所以对初入职场的学生有什么建议?\n\n## hr面\n\n考察：抗压能力，选择公司岗位的意愿是否强烈\n\n常问问题：\n\n  * 缺点和优点？\n  * 最有挑战/印象深刻/的一件事，最大的挫折？\n  * 为什么选择我们公司（匹配度，赛道，兴趣，技术氛围，女朋友，城市）？\n  * 职业发展规划？\n  * 怎么考虑城市的？\n  * 期望薪资？\n  * 加班怎么看？\n  * 排解压力方法？\n  * 有对象吗？（有，就在公司base）\n  * 目前offer情况？\n\n反问：\n\n  * 后续流程时间安排\n  * 是否可加微信方便后续咨询\n\n这里基本不聊薪资待遇，工作时长氛围这些hr这里没真话，问一面面试官\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591577823110782976?sourceSSR=users",
        "title": "百度golang一二三面，求oc",
        "content": "  \n\n****\n\n**timeline：**\n\n一面 1.29\n\n二面 2.1\n\n三面 2.23\n\n测评 2.27\n\n**一面 时间7pm（57min）**\n\n自我介绍\n\n介绍一下最近一段实习做的项目\n\n实习项目的架构\n\n你主要负责哪部分\n\n你对程序会关注哪些指标（cpu使用率，内存使用率，pod重启次数，oom）\n\n你刚才说的某个服务的cpu使用率突刺是什么原因\n\n怎么排查的cpu使用率突刺，怎么解决的（用pprof排查，最后定位到某行sql查询的代码，字段非常多，结构体反射消耗的时间多，解决办法：查询之间增加几十毫秒的时间间隔或者减少单次查询的条数）\n\n这个sql可以优化吗，怎么优化的（减少无用字段获取，使用联合索引符合最左前缀原则，用了limit+id>偏移量）\n\n为什么不用limit+offset，用limiter+id>偏移量\n\n内存使用率持续上升什么原因，你遇到的造成oom的情况和原因有哪些\n\n你刚才说的遇到的线上故障的原因是什么\n\n如何避免出现线上故障（从运维角度和后端角度分别阐述了一下）\n\n在实习中做了很多优化，说说都做了哪些优化\n\n讲一讲你实习实现的这个分布式限流器，优化需求的背景是什么，为什么做这个优化（redis+lua+滑动窗口）\n\n还讲了为什么使用滑动窗口不用其他令牌桶等算法\n\n限流器效果如何，有没有遇到什么问题\n\n为什么要使用lua脚本（保证原子性）\n\nredis中的滑动窗口你是怎么实现的\n\nzset中存的元素是什么（时间戳）\n\nredis 的zset的数据结构（答的压缩列表和跳表，不过redis7.0之后压缩列表被废弃了改为使用listpack）\n\nzset什么时候用压缩列表什么时候用跳表\n\n为什么压缩列表被废弃了，有什么缺点\n\n跳表底层是怎么实现的，有什么特点\n\n对微服务的看法，有什么缺点\n\n手撕算法：\n\n最长连续序列，要求不只是简单ac，时间复杂度越小越好，如果用排序要自己写排序算法\n\n反问：\n\n部门主要是什么业务\n\n面试结果大概多久出（过了的话最快明晚前hr会联系）\n\n后续：第二天早上约二面\n\n**二面 时间11am（56min）**\n\n自我介绍\n\n实习项目介绍\n\n实习项目架构\n\n为什么选这个base地\n\n两道算法：\n\n给40亿个整数，不知道是否有重复的数，如何快速判断某个数是否存在?要求时间复杂度和空间复杂度越小越好\n\n给定一个数组，随后数组整体右移k个位置（超过数组长度的部分回到数组最左侧），给出一个数m，返回移动后的数组中值为m的下标值，要求时间复杂度越小越好\n\n打算在base地发展多久\n\n反问：\n\n对应届生的培养方案\n\n部门规模\n\n面试结果大概多久出（看hr）\n\n后续：下午约三面，年前面试官日程比较紧张，年后再约\n\n**三面 时间2pm（34min）**\n\n自我介绍\n\nbase地的选择\n\n和实习mentor关系怎样，密切吗\n\nmentor对你有什么影响\n\n你mentor对你说的印象中最深刻的一句话是什么\n\n看你是非科班，为什么不选择计算机专业\n\n看你最早的实习在大二，为什么大二就选择去实习\n\n看你一开始就选择互联网厂实习，为什么大二就选择了互联网企业\n\n为什么现在的java程序员都转go了\n\n功能或接口上线后怎么把控程序的健康情况\n\n了解aigc和一些企业情况么\n\n反问：\n\n部门负责哪些应用的开发\n\n属于什么事业群\n\nbase地是还要再选一次吗（了解一下意向，base可不可选具体看hr沟通）\n\n目前暂无后续，求oc\n\n\\-----------------------------------------------------------------------------------------------\n\n2.27更新：收到测评\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591572946099900416?sourceSSR=users",
        "title": "华为OD-21届考研-Java面经",
        "content": "  * **背景：** 21届非科班211目标院校，无经验转行有编程基础，gap1年多一点\n  * **1.19 机考 250（准备一周左右技术面试，才开始投递部门的）**\n\n第一题 平衡字符串\n\n第二题 剩余银饰重量\n\n第三题不太记得，只过了一点用例\n\n**机试前两题是原题，有在栗栗姐给的题库刷到过**\n\n  * **1.26 原先投递部门因为空挡拒绝了 马上换部门**\n\n一个小时后新部门hr面\n\nhr面 确认背景\n\n家庭情况\n\n过往工作经历 gap期间在干什么\n\n项目中怎么解决并发问题\n\n对od了解多少 为什么来\n\n职业规划\n\n兴趣爱好\n\n反问\n\n当天告知通过\n\n  * **1.31 上午**\n  * **技术一面**\n\n常规八股 +手撕代码\n\n面向对象的特征\n\nhashmap扩容原理\n\njava锁有哪些 锁升级过程\n\njvm怎么调优\n\n设计模式了解哪些\n\n单例模式讲一下\n\n项目用到redis 讲一下\n\nredis缓存更新策略\n\n手撕代码\n\n给定一个公式\n\n求1到n中满足条件的最大值 简单的模拟保存最大值\n\n面试官发题过来 用例全部通过\n\n  * **1.31 下午**\n  * **技术二面**\n\n常规八股 +手撕代码\n\nJava序列化\n\nStringBuffer 和StringBuilder\n\nhashmap 和hashtable区别 怎么保证安全\n\nhashmap为什么不安全举例说明\n\nlinux用过那些命令\n\nmysql索引有哪些\n\n手写两张表的查询 面试官发题\n\n手撕代码 lc037原题 行星碰撞 用了栈模拟 面试官发题（做完才说是leetcode原题）\n\n隔天告知通过\n\n  * **2.3主管面**\n\n过往工作经历\n\njava学习途径\n\n介绍自己部门\n\n反问\n\n主管面很快就结束了十几分钟\n\n  * **2.23 收到offer**\n  * **总结：**\n  * 从机试开始整个过程还蛮快的，中间隔了个过年，耽误了一点审批的时间\n  * 非常感谢栗栗姐整个过程期间的帮助（从开始的机考题库，后期的监督刷题，再到技术面试、综面HR面试的攻略辅导都很积极），我也是在牛客上找到的姐\n  * 机试就刷栗姐提供的题库，通过基本没啥问题\n  * hr面压力面试正常说就可以了\n  * 技术面代码做出来问题不大，没写完可以说下思路，不会可以申请换题\n  * 主管面，主管太忙了一边开会一边面，时间很短问的比较简单（这点仅供参考，主管面还是看他们个人风格的）\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591552137260281856?sourceSSR=users",
        "title": "24届互联网秋招分享-快手一面面经（23.08.02）",
        "content": "  1. 项目部分 \n     * 讲一下项目的整体架构\n     * 项目的qps大概是多少\n     * 推荐系统对时延有要求吗\n     * 讲一下简历里写到的如何应对突发情况\n     * Redis大Key大概是多少\n     * 有sre预警吗\n  2. 八股部分 \n     * Mysql部分： \n       * Mysql中的一行数据是怎么存储的？\n       * Mysql是如何进行掉电恢复的\n       * 讲一下Mysql索引的数据结构\n       * 讲一下Mysql的各个日志\n       * 给了一张表结构和四个查询语句，判断是否走索引，是否回表查询\n     * JUC部分 \n       * 讲一下线程池的核心参数\n       * 什么时候线程数会变为最大线程数\n       * 讲一下任务队列有哪些，以及他们的应用场景\n       * 讲一下拒绝策略\n       * 了解AQS吗\n  3. 场景题 此题为该组的实际需求，多线程相关\n  4. 算法题 leetcode415.字符串相加\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591346149823393792?sourceSSR=users",
        "title": "京东春招笔试",
        "content": "1.判断回文子串的数量， 双指针。\n\n2.给出个顶点，你可以将这个顶点构成一棵树，若这棵树恰好只有三个分叉，那么我们称这种树为树。现在给出个顶点，请你求出可以由这个顶点构建的树有多少种？回溯，去重没写出来\n\n3.某块矩形墙壁由块瓷砖构成，每块瓷砖都是的矩形。现在想要从左上角向右下角，\n从右上角向左下角划两条直线，请问直线与每块瓷砖的边界线产生的交点共有多少个？没思路。\n\n就a了一道，难受。[发火]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591331164879630336?sourceSSR=users",
        "title": "太扎心 | 春招面试必问题：秋招参加了吗？",
        "content": "最近春招逐步启动，一些同学陆续接到面试通知，面试中面试官经常会问秋招参加了没，大概什么情况。问的感觉是废话，真的好扎心，秋招如果理想，谁还参加春招。\n\n**这么问的目的**\n\n面试中面试官每个问题都不是随口一问，都会给候选人下钩子，想了解到相关信息。\n\n如果候选人完整参加了秋招，已经拿到了offer，比目前面试的还好，大概率不会给你发offer，明摆着浪费机会。\n\n如果完整参加秋招，没拿到offer，那说明该同学无论何种原因，还是有问题的，需要重点考察。\n\n如果没有参加秋招，比如考研等，这类同学面试官会比较感兴趣，毕竟考研同学基础整体不错，学习好的同学居多。\n\n整体面试官会根据候选同学回答了解这位同学目前现状，秋招情况，基本能判断候选同学的能力和深入面试必要性。\n\n**考研的同学怎么回答**\n\n考研同学回答思路，告诉面试官报考了哪个名校，考研结果差一点惜败，可以调剂到某某还不错的学校，但综合考虑决定工作。\n\n此模板回答的目的是告诉面试官，自己考研惜败，成绩和能力是不错的，同时综合考虑放弃考研，安心工作，对于底子优秀首次正式找工作，面试官要重点考虑我。\n\n同时告诉面试官自己实战方面在大学期间积累，以及自己优秀点，逐步引导面试官到简历。是好的面试的开始。\n\n**秋招不理想同学怎么回答**\n\n秋招不理想同学，完整参加了秋招，不少同学暂时没有offer，回答此问题思路，告诉面试官自己有了不太好的offer，比如某某公司。\n\n此offer一定是比正在面试的公司差。自己总结的哪些方面不足，比如面试语言组织，容易紧张等，或者比如JAVA基础，在寒假完整提升训练，希望可以有更好的机会。\n\n按照此模板思路回答，目的告诉面试官，自己针对性一直在努力，感受到同学对面试机会的珍惜。比如基础知识针对性增强，面试官大概率会考察此方面，同学们要注意。\n\n**海归毕业同学怎么回答**\n\n不少海归同学都是毕业后回国才开始找工作，很多春招第一次开始找工作，回答思路参考考研同学模板即可。\n\n**参加春招并不是不优秀**\n\n参加春招同学一定要自信，并不是秋招没拿到offer就多丢人，或不够优秀。最优秀那批人秋招提前拿到offer了，轮也该轮到我们了，自信心很重要，有了自信心才有更有气场。\n\n**寒假的努力只为春招破茧**\n\n很多同学寒假都在夜以继日的努力准备，只为春招破茧而出，拿到结果。春招背水一战，把自己状态燃起来，奋斗三个月，顺利毕业，走出象牙塔，实现人生顺利转变。\n\n我是涛哥，曾任某互联网大厂技术总监，十年面试过500人，培养新人超百人。专注技术培训/简历辅导/面试辅导/求职咨询等，24年目标帮助1000人求职和成长。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591328877683675136?sourceSSR=users",
        "title": "美狮集团Java开发工程师(社招)",
        "content": "1.你是做什么的？\n\n2.mybatis中$跟#有什么区别？\n\n3.你们公司是什么框架？\n\n4.mybatisplus怎么写\n\n5.了解哪些spring注解\n\n6.能不能说说spring事务\n\n7.导入导出怎么实现的\n\n7.离职原因\n\n8.反问\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591309271418036224?sourceSSR=users",
        "title": "360笔试-2024.2.25",
        "content": "技术综合J卷\n\n60分选择题\n\n2道编程题\n\n题目一好像是：\n\n```java\n\n/**\n\n* @author xin麒\n\n* @date 2024/2/25 16:38\n\n* 第一行输入n\n\n* 第二行输入一串数字，之间用空格隔开\n\n* 每次操作将一些相同的数字和v相加（v可以为负数），计算最小操作次数\n\n*/\n\npublic class Main {\n\npublic static void main(String[] args) {\n\nScanner scanner = new Scanner(System.in);\n\nint n = Integer.parseInt(scanner.nextLine());\n\nString[] split = scanner.nextLine().split(\" \");\n\nMap<String, Integer> map = new HashMap<>();\n\nfor(String s : split){\n\nInteger count = map.get(s);\n\nif (count == null){\n\nmap.put(s,1);\n\n}else{\n\nmap.put(s,count + 1);\n\n}\n\n}\n\nSystem.out.println(map.size() - 1);\n\n}\n\n}\n\n```\n\n题目2好像是：\n\n```java\n\n/**\n\n* @author xin麒\n\n* @date 2024/2/25 16:39\n\n* 第一行输入n\n\n* 第二行输入len=n的字符串s,每个字符在['1','9']\n\n* 1可以用a,表示，2可以用b表示 ...... 26可用z表示\n\n* 计算s的所有表示方式\n\n* 例如：\n\n* 2\n\n* 11\n\n* 输出：\n\n* 2\n\n* 解析：\n\n* 11可以用aa来表示，也可以用k来表示，共2中表示方式\n\n*/\n\nimport java.util.*;\n\npublic class Main{\n\npublic static void main(String[] args){\n\nScanner scanner = new Scanner(System.in);\n\nint n = Integer.parseInt(scanner.nextLine());\n\nString s = scanner.nextLine();\n\n//判空\n\nif(n == 0) {\n\nSystem.out.println();\n\nreturn ;\n\n}\n\nif(n == 1){\n\nSystem.out.println(1);\n\nreturn ;\n\n}//long\n\nlong[] nums = new long[n];\n\nnums[0] = 1;\n\nchar[] chs = s.toCharArray();\n\nString str = \"\";\n\nstr += chs[0];\n\nstr += chs[1];\n\nnums[1] = 1;\n\nif(Integer.parseInt(str) <= 26) nums[1] = 2;\n\nfor(int i = 2;i < n;i++){\n\nnums[i] = nums[i - 1] % 1000000007;\n\nstr = \"\";\n\nstr += chs[i - 1];\n\nstr += chs[i];\n\nif(Integer.parseInt(str) <= 26) {\n\nlong tmp = nums[i - 2] % 1000000007;\n\nnums[i] += tmp;\n\nnums[i] %= 1000000007;\n\n}\n\n}\n\nSystem.out.println(nums[n - 1] %1000000007);\n\n}\n\n}\n\n```\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591244375665958912?sourceSSR=users",
        "title": "字节一面实习岗",
        "content": "2024-02-23 （本人双非大三，第一次面试（日常实习），还是字节，有点胡言乱语）\n\n有太大感受了要先说一下：最后投的字节，没想到效率那么快第二天就给了我面试邀请，一开始没有邮箱只打了电话问了能实习多久什么的，我还以为是骗子，后来挂了电话发了邮箱，又激动又无能狂怒，本来看大家说的想放弃面试了，但是hr小姐姐人特别好还在鼓励我尝试一次，不尝试第一次就永远是第一次（内心os：有点不敢拿字节尝试，因为真的挺喜欢字节的），八股文没背完的我，算法也没刷几道题的我踏上了愣头青之路，22号六点接到的面试消息，准备到凌晨1点，早上六点就行了准备到下午三点（真的紧张），然后我提前十分钟进去等的，面试官准时进来的，人很好很有亲和力的，自我介绍之后就不太紧张了。\n\n接下来是面试过程：1h（希望给各位想去字节实习的朋友一个参考）\n\n1.自我介绍\n\n2.项目30min左右（有个项目好久之前做的，太快了面试没来得及梳理一下，有些地方没有说清楚）\n\n3.hashmap怎么实现的，哪几种数据结构，怎么添加，底层怎么实现（当时只说出了数据结构，然后就不了解了，昨天复盘看了4h底层源码，现在大彻大悟）\n\n4.三次握手，四次挥手（有些术语没说清，2msl说成2s了（我是傻的））\n\n5.http和https协议的区别\n\n6.数据库隔离级别（只说了个默认的隔离）\n\n7\\. 栈和队列的区别（捅4自己的心都有了）\n\n8.有对比过kafka和其他消息中间件的区别吗（因为我项目用的kafka，答了个高可用性，又问了怎么实现的高可用性，熟悉kafka所以答得还是比较可以的（自我觉得））\n\n9.怎么能保证kafka消费顺序\n\n10.一道算法（最小跳跃问题）（没答上）\n\n最后面试官问有什么问题，我问了两个\n\n1.贵公司对于实习生的要求\n\n2.您能给我一些建议吗\n\n总结：复盘之后很懊悔，可能因为是实习吧，所以面试官问的问题都不难，而且人也很有亲和力，是我自己太紧张了答得一塌糊涂，而且我算法也没什么基础，然后就是一定要刷算法，哪怕不是那么完全记住，面试官会给提示，对于我的问题也给了解答，总之是一次比较好的经验吧，现在还没有出结果，但是算法没答上我估计要寄，虽然但是，收益颇多，下次一定不会紧张\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591327510206394368?sourceSSR=users",
        "title": "深中环境监测总站技术创新研究院福田Java开发工程师(社招)",
        "content": "笔试：\n\n1.请实现简单算法，并说明实现思路；\n\n2.实现简单接口编写sql查询数据库并将结果使用json返回；\n\n3.离职原因\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/590992023324241920?sourceSSR=users",
        "title": "依图日常实习一面",
        "content": "1,项目相关\n\n2.Linux常用指令\n\n2.git常用指令\n\n3.介绍一下TCP协议和UDP协议\n\n4.jvm内存模型\n\n5.aop\n\n6.两道算法题\n\n  \n\n太菜了网络相关刚开始背还没熟就被问到了。听面试官说更看重代码能力，所以两道算法题很重要。面了一个多小时起码40分钟在做题\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/591326449559166976?sourceSSR=users",
        "title": "深圳华阳创信java开发工程师面经(社招)",
        "content": "1.英文自我介绍\n\n2.英语问我有什么好爱\n\n3.粤语描述项目\n\n4.团队业务，团队角色，团队架构\n\n5.能不能说说你在项目中是怎么使用spring的？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/590851316805644288?sourceSSR=users",
        "title": "阿里云 Java后端实习面经",
        "content": "电话面的\n\n# 常规\n\n自我介绍\n\n了解个人情况\n\n# 八股\n\n性能与安全兼顾的存储方法（没懂面试官想问什么）\n\n选择 ssm 框架原因\n\nLinux 端口被占用了用什么命令查看（linux一点不懂，没接着问）\n\nTCP/IP 四层模型\n\n传输层的功能\n\n传输层常见协议\n\nTCP、UDP 区别\n\nTCP、UDP 各自应用场景\n\n拥塞控制\n\nHashMap 是否线程安全\n\n为什么ConcureentHashMap 是线程安全的\n\n==和 equals 的区别\n\n为什么重写 equals 要重写 hashcode\n\naop\n\n缓存雪崩解决方案\n\nredis 如何限流\n\n# 手撕\n\n最后邮箱发链接手撕\n\nLC53. 最大子数组和\n\n反问\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/590697274699681792?sourceSSR=users",
        "title": "腾讯WXG前端面经",
        "content": "早就听说WXG大名，哥们第一次面，果然名不虚传，真他妈变态啊，目前为止面过最难的大厂\n\n# 一面 时长：1h30min\n\n没有自我介绍，一上来写了四道题（草，认真的吗）面试官没开始摄像头，体验不太好\n\n## 算法 50min\n\n  * 实现一个muilty.result方法，有点类似于柯里化求积\n  * hardman（经典wxg题，但是我之前没看过，后来面完才知道这题这么经典）\n  * 一个二叉树的题，具体是啥忘了，有点像路径和\n  * 一个迷宫题，也没见过\n\n> ps: 写出了三道半\n\n## 八股\n\n  * http和https\n  * xss攻击\n  * csrf攻击\n  * 跨域\n  * 进程和线程\n  * 通信方式\n  * 僵尸进程和孤儿进程\n  * 死锁以及怎么解决死锁问题\n  * Service Worker\n  * 浏览器缓存\n  * 状态码\n  * 对称加密和非对称加密\n  * 四次挥手\n\n## 项目\n\n  * 说说websocket\n  * 前端怎么埋点的\n  * 项目难点\n\n##### 面完秒过\n\n# 二面 时长：1h30min\n\n还是没开摄像头\n\n## 八股\n\n  * 一面提到的csrf攻击，详细说说\n  * cookie和session\n  * 详细说说https\n  * url到页面渲染\n  * 简单请求和复杂请求\n  * http1 2 3\n  * 详细说说缓存\n  * cdn\n  * 详细说说dns\n  * node\n  * node事件循环\n  * mysql和mongodb\n  * 后端表怎么设计的\n  * HashSet 和 HashMap 在使用场景上有什么区别？\n  * hashmap的key在查找时的工作流程\n  * 用过redis吗？\n  * c++了解多少（看过一点流媒体相关，到这里已经汗流浃背了，别tm问我c++啊）\n  * 生成token的时候，会设置一个过期时间，如果有一次访问的时候发现快过期了要怎么办\n\n## 项目\n\n  * 详细介绍一下项目\n  * 项目性能指标\n  * 项目难点\n  * 断点续传\n\n## 算法\n\n  * lc 路径和 （回溯直接秒，写完之后问我怎么优化，剪枝）\n\n## 反问\n\n  * 为什么WXG这么喜欢问网络（答：这是大家都会的东西，你难道不该掌握吗？）\n  * 对我评价（还行吧）\n  * 结束（草，真他妈难啊）\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/590652834434015232?sourceSSR=users",
        "title": "快别回消息了哥，快手测试开发工程师三面",
        "content": "**大家好，我是chowley，回顾一下之前参加的技术面试**\n\n部门：商业化\n\n时间：50min\n\n平台：轻雀，这平台纯nt，用Mac面试，麦克风老连我iPhone\n\n## 过程\n\n  1. 自我介绍\n  2. 实习经历一\n  3. 实习经历二\n  4. 有用到覆盖率之类的工具吗？\n  5. 上线之后问题多吗？\n  6. 收费是咋做的？\n  7. 计费流程测过吗？\n  8. 黑户bug见过吗？\n  9. 资损类的问题呢？\n  10. 如何给用户补充奖励？别人可以领吗？\n  11. 实习三\n  12. 压力测试咋做的？\n  13. 测试覆盖率如何保障？\n  14. 测试一下微信支付功能\n  15. 手撕：匹配栈\n  16. 为啥选择测试\n\n## 总结\n\n难度：3.5/5\n\n面试官专业程度：还行，但他一直在那回消息，还频繁莫名其妙的笑\n\n体验打分：3/5，体验一般，反问他说我表现的还行，不知真假\n\n**好了，以上就是本文的全部内容，如有问题可留言讨论。**\n\n**本人正在组建校招测试开发方向的交流社区，如果您对测试求职方面感兴趣，欢迎加入了解。**\n\n**我是chowley，一个专注互联网技术和产品质量保障领域的博主，我们下次再见！**\n\n**欢迎点赞、评论、收藏，it's important for me.**\n\n**Searching for QALog.**\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/590639300203536384?sourceSSR=users",
        "title": "0223【滴滴】Java实习一面",
        "content": "国际金融部（credit tech）全程35分钟，面试官反馈说回答情况不错所以问得比较少\n\n【项目相关】\n\n  1. 介绍项目\n  2. 说一下项目里面遇到的难点和挑战，怎么解决的\n  3. 分布式锁是怎么做的\n  4. 限流的算法是自己实现的吗？还有其他什么算法\n  5. 为什么采用令牌桶算法而不用漏桶算法？\n\n【八股】\n\n  1. 聊聊bean的生命周期\n  2. 还用了spring的什么框架，除了mybatis之外还知道什么框架吗？\n  3. 了解过分库分表吗？项目里有使用吗？用的什么是键分表\n  4. 分库分表后怎么做全量订单统计？\n  5. 聊聊binlog\n  6. 聊聊数据库的隔离级别\n  7. 如果前端有一个请求发送到后端，后端如果想不通过变量的方式传递请求中的某个信息怎么做（ThreadLoacal）\n  8. 使用ThreadLocal会遇到什么问题（内存泄漏、线程池复用时获取到上一个数据，所以要手动remove）\n\n【算法题】\n\n找到字符串中最长的单词长度， 很简单，双指针遍历或者split之后找即可。腾讯会议屏幕分享本地ide做的\n\n更新 2.26约二面\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/590685768784306176?sourceSSR=users",
        "title": "快手前端面经（已offer）",
        "content": "# 一面 time：1.23 时长：1h\n\n  * 自我介绍\n  * 展开说一下大小文件上传和下载你是怎么实现的（吟唱开始）\n  * 你现在是大三，那你下学期没课吗，可以实习这么久吗（开始忽悠）\n  * HTML行块元素以及它们之间有什么区别\n  * position属性有哪些\n  * 水平垂直居中方法\n  * 隐藏元素的方法\n  * map和forEach的区别\n  * 同步执行和异步执行有什么区别\n  * promise有哪几种状态\n  * promise all 和 promise race的区别\n  * 手写promise all\n  * 如果传进去的不是一个promise该怎么办\n  * http状态码\n  * http和https\n  * 输入url到页面渲染\n  * tcp为什么要进行三次握手\n  * tcp和udp的区别\n  * tcp和udp分别的应用场景有哪些\n  * 手撕快排\n  * 反问：主要业务，对我评价（基础很不错）\n  * 面完秒过，约了第二天二面\n\n# 二面 time：1.24 时长：1h\n\n自我介绍+闲聊\n\n## 项目一 20min\n\n  * 介绍一下你这个项目\n  * 如何做的技术选型\n  * 平时在团队里担任的角色\n  * 技术难点以及怎么攻克的\n\n## 项目二 20min\n\n  * 介绍项目\n  * 后端的表是怎么设计的\n  * 为什么要用mongodp数据库，mysql用过吗\n  * 一道sql题，具体忘了\n  * 介绍一下心跳机制\n\n## 算法 15min\n\n  * 螺旋矩阵\n\n## 反问 5min\n\n  * 这边还有几个候选人，要综合评估一下，hc只有一个\n  * 能多快到岗\n\n##### 等了2天hr打电话说面试通过了\n\n# hr面 30min\n\n随便聊聊，第二天oc，隔天发offer，整个流程下来一周速通\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/590596644245123072?sourceSSR=users",
        "title": "【第1章】面试流程",
        "content": "本章主要介绍如今需要具备SQL 应用能力的岗位有哪些，\n以及在这些岗位求职过程中，简历的准备、笔试环节、面试环节的基本流程与注意事项。帮助读者从全景视角了解相对完整的面试流程。\n\n### 1.1 哪些职位需要用职位需要用 SQL\n\n在传统印象里，SQL 是一串串的代码字符，很多人错误地以为：只有研发岗位的程序员才需要跟这些看不懂的字符打交道。\n\n然而，随着数字化时代的到来， SQL 这个词变得耳熟能详，为什么这么说呢？\n\n如图1.1 所示，回顾近10 年百度指数的数据，关键字“SQL”的搜索热度总体趋势逐年增长。到这里，你可能会问了：为什么现在 SQL 变得这么热门？\n\n![](https://uploadfiles.nowcoder.com/images/20240223/177415880_1708680402470/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n熟练应用 SQL，从一项只需要少数研发岗位（如数据库管理员）掌握的能力，逐渐地“飞入寻常百姓家”，向通用的职业基础能力演变。\n\n如果你打开各大求职平台就会发现，从研发工程师到数据分析师，从用户研究到商业分析，从产品经理到产品运营，在这些热门职位的介绍中，都能看到“精通\nSQL”“熟练使用SQL”等要求，如图 1.2 所示。\n\n![](https://uploadfiles.nowcoder.com/images/20240223/177415880_1708680387831/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n现在，SQL 已经像 Office 办公软件一样，成为职场的通用技能要求。为什么各个岗位都在要求应用 SQL 呢？\n\n因为在大数据时代，企业的数据是存放在数据库里的，而从数据库里获取和分析数据的工具正是 SQL。所以，只要你需要进行数据分析，就离不开SQL。\n\n熟练掌握 SQL，能够在你的能力工具箱里增加一种工具，用来解决更多、更复杂的问题。例如，我的同学现在是一名中学教师，擅长使用 SQL\n分析班级学生的考试成绩和得分情况， 以数据的分析结果为依据制定教学方案，无论是学生家长还是学校领导都对他刮目相看，正是凭着这一项能力，近几年的职位上升很快。\n\n所以，通过积累自身的非对称优势，让自己在职场中获得比同龄人更多“被看见”的机会， 提升职场竞争力，升职加薪也就是水到渠成的事情了。\n\n### 1.2 简历的准备\n\n获得面试机会的关键前提是一份能吸引面试官注意力的简历。假设你是面试官，什么样的简历会更吸引你？\n\n至少应该具备以下两个特征。\n\n（1）简历中的项目经验或工作经历与岗位要求的相关度高。\n\n（2）简历描述体现面试者思维缜密、逻辑清晰，一眼就能找到重点内容。\n\n在投递简历时不要犯懒，切忌“一张简历闯天下”，这样做不仅会极大地降低简历通过筛选的概率，也是在浪费自己的机会和时间。\n\n你需要仔细阅读职位说明中的公司行业、业务场景和对求职者的要求等信息后，有针对性地调整简历中的内容，尤其是 SQL 项目经历应与投递职位相关。\n\n写好的简历需要以 PDF 格式保存，避免因为 HR 或者面试官在不同电脑中打开出现错乱。建议以“姓名 + 岗位名称”的方式对简历命名，如“张三 +\n运营”。如果需要通过邮件的方式投递，那么一定要把简历直接附在邮件的正文中，方便面试官打开邮件时就能阅读到你的简历， 无论当时他使用的是电脑还是移动设备。\n\n#### 1.2.1什么样的项目经验才真正有用\n\n俗话说，“到什么山头唱什么歌”，花一些时间打开意向公司的官网，了解一下这个公司的细分行业是什么，主要产品有哪些，开展了哪些核心业务，等等，这样不仅能让你的简历更加亮眼，面试时也能知己知彼，与面试官交流时才能更加从容不迫。\n\n简历中的项目经验要与应聘公司的主营业务相关。比如，如果投递的是电商行业的相关岗位，那么项目经验就要与商品统计、购买行为分析等相关；如果投递的是金融行业的相关岗位，\n那么项目经验就要与风险管理、风控策略的分析相关。\n\n下面我们以一个具体的招聘岗位为例来说明如何让简历中的项目经验贴合岗位需要。\n\n图 1.3 所示为一则数据产品经理的招聘信息，通过查看公司的官网介绍，可以知道该公司的核心业务是电商。\n\n![](https://uploadfiles.nowcoder.com/images/20240223/177415880_1708680574089/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n仔细看这个职位的描述。\n\ny 参与规划公司前端应用数据埋点及数据规范。\n\ny 结合公司产品及用户特性，对电商数据埋点产品线进行产品规划、设计及开发跟进。\n\n通过以上的职位描述，你可以确定，在简历的项目经验描述中，需要重点突出你在电商行业的经验，以及在产品埋点、指标体系搭建、用户购买行为等方面的经验。\n\n在职位要求里有：\n\ny 具备 SQL 编写经验者优先；具备较丰富的项目管理经验。\n\n通过这个职位要求，你可以确定，在项目经验描述中不仅要体现 SQL\n的应用能力，也要强调如何协调项目参与人员，如何进行跨部门的对接与沟通，如何有效管理任务进度、项目里程碑，等等。\n\n#### 1.2.2如何写好项目描述\n\n每一个公司招聘的目的都是希望找到合适的、能够解决实际问题的人才，简历中的 SQL 项目描述要突出你的思维逻辑，避免进行工作内容描述的堆叠与冗余。\n\n错误示范\n\n项目名称：线上店铺用户行为分析\n\n项目描述：\n\n参与线上店铺用户行为分析，用 SQL 对数据进行清洗和分析，得到用户流失率、复购率等数据，并分析其中的原因，形成详细的分析报告和建议。\n\n上述的项目描述更多地展示了“我做过什么”，是工作内容描述的堆叠，并\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/590594768355221504?sourceSSR=users",
        "title": "即时设计Java1面",
        "content": "> 面试时间50min 实习可转正岗\n\n  1. TCP和UDP的基本特点\n  2. TCP四次挥手可以取消掉吗\n  3. 找到字符串的第一个重复字母下标\n  4. 索引\n  5. 索引失效的场景\n  6. AOF和执行命令哪个先执行 为什么\n  7. 缓存数据一致性问题\n  8. jwt在登录场景的使用\n\n后续-约2面-二面面试官喜欢吹牛逼、刁难 自己瞎jb问\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/590580220164333568?sourceSSR=users",
        "title": "java 实习面经",
        "content": "线上实习，前面做了一个笔试测试，就是拉取他们gitee上面的项目然后实现几个几口。整个面试十几分钟，简单问了几个问题就没了，等通知。\n\n  1. 线程实现的方式 ？\n  2. 逻辑删除跟物理删除有什么区别？\n  3. 多个springboot项目如何进行系统之间的数据通信？\n  4. 用户注册是否要考虑并发操作问题？\n  5. 项目是从哪里来的，都是你自己做的吗？\n  6. 学校老师有没有给过你们一些企业级的开发让你们去做，就比如说整体的一个开发流程，从需求分析，到前后端开发，再到前后端协调，最后测试上线，有没有过这种方面的经历啊？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/590576768491216896?sourceSSR=users",
        "title": "阿里云 实习面经（已OC） 一面面经｜讲解",
        "content": "挑选了一篇牛客上的面经给大家做**讲解分析和学习指引** ，期望对大家有所帮助～\n\n>\n> [原贴链接](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F590218714595721216)\n>\n>\n> ![alt](https://uploadfiles.nowcoder.com/images/20240223/7538287_1708676039728/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n## 1\\. Java相关：String为什么是不可变的？\n\n**解析：** ： 注意：很多资料直接说\"String 类中使用 final 关键字修饰字符数组来保存字符串，所以String 对象是不可变的\"\n这是不准确的，因为 final修饰的Array数组 value\n是不可变，也只是value这个“引用地址”不可变。挡不住Array数组是可变的事实，其实“私有 pribvate”可能也是不可变的重要原因之一\n\n**参考回答：**\n\n> 1.保存字符串的数组被 **final** 修饰且为**私有** 的，并且String 类没有提供/暴露修改这个字符串的方法。\n>\n> 2.String 类被 final 修饰导致其不能被继承，进而避免了子类破坏 String 不可变。\n\n**学习指引：** [面试题解析：String\n为什么不可变？](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fjavaguide.cn%2Fjava%2Fbasis%2Fjava-\nbasic-\nquestions-02.html%23string-%25E4%25B8%25BA%25E4%25BB%2580%25E4%25B9%2588%25E6%2598%25AF%25E4%25B8%258D%25E5%258F%25AF%25E5%258F%2598%25E7%259A%2584)\n\n## 2\\. Java相关：String、StringBuffer和StringBuilder的区别？\n\n**解析：** ： 可以从：可变性，线程安全，性能三个方面来进行说明\n\n**参考回答：**\n\n> **可变性** ：String 是不可变的（后面会详细分析原因）。StringBuilder 与 StringBuffer 都继承自\n> AbstractStringBuilder 类，在 AbstractStringBuilder 中也是使用字符数组保存字符串，不过没有使用 final\n> 和 private 关键字修饰，最关键的是这个 AbstractStringBuilder 类还提供了很多修改字符串的方法比如 append 方法。\n>\n> **线程安全性** :String中的对象是不可变的，也就可以理解为常量，线程安全。AbstractStringBuilder 是\n> StringBuilder 与 StringBuffer 的公共父类，定义了一些字符串的基本操作，如\n> expandCapacity、append、insert、indexOf 等公共方法。StringBuffer\n> 对方法加了同步锁或者对调用的方法加了同步锁，所以是线程安全的。StringBuilder 并没有对方法进行加同步锁，所以是非线程安全的。\n>\n> **性能差异** :每次对 String 类型进行改变的时候，都会生成一个新的 String 对象，然后将指针指向新的 String\n> 对象。StringBuffer 每次都会对 StringBuffer 对象本身进行操作，而不是生成新的对象并改变对象引用。相同情况下使用\n> StringBuilder 相比使用 StringBuffer 仅能获得 10%~15% 左右的性能提升，但却要冒多线程不安全的风险。\n\n**学习指引：**\n[面试题解析：String、StringBuffer和StringBuilder的区别？](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fjavaguide.cn%2Fjava%2Fbasis%2Fjava-\nbasic-\nquestions-02.html%23string%25E3%2580%2581stringbuffer%25E3%2580%2581stringbuilder-%25E7%259A%2584%25E5%258C%25BA%25E5%2588%25AB)\n\n## 3.Java相关：在循环内使用“+”进行字符串拼接的话会有什么问题？\n\n**解析：** ： 属于Java String相关常考面试题之一，需要掌握\n\n**参考回答：**\n\n> 字符串对象通过“+”的字符串拼接方式，实际上是通过 StringBuilder 调用 append() 方法实现的，拼接完成之后调用\n> toString() 得到一个 String 对象 。不过，在循环内使用“+”进行字符串的拼接的话，存在比较明显的缺陷：编译器不会创建单个\n> StringBuilder 以复用，会导致创建过多的 StringBuilder 对象。\n>\n> 扩展：不过，使用 “+” 进行字符串拼接会产生大量的临时对象的问题在 JDK9 中得到了解决。在 JDK9 当中，字符串相加 “+” 改为了用动态方法\n> makeConcatWithConstants() 来实现，而不是大量的 StringBuilder 了.\n\n**学习指引：** [面试题解析：字符串拼接用“+” 还是\nStringBuilder?](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fjavaguide.cn%2Fjava%2Fbasis%2Fjava-\nbasic-\nquestions-02.html%23%25E5%25AD%2597%25E7%25AC%25A6%25E4%25B8%25B2%25E6%258B%25BC%25E6%258E%25A5%25E7%2594%25A8-%25E8%25BF%2598%25E6%2598%25AF-\nstringbuilder)\n\n## 4.JVM相关：堆空间的结构？分配策略有哪些？\n\n**解析：** ：\nJVM面试4重点+1了解：内存区域划分，垃圾回收机制，内存分配策略，类加载机制；类文件结构（了解）。建议大家理解记忆相关内容后，按照自己的话来输出。因为涉及内容挺多，我们可以按照自己的理解笼统回答下，等面试官来细问。\n**参考回答：**\n\n> 堆空间是JVM中用于存储对象实例的区域，它通常被划分为新生代和老年代两个主要部分，其中新生代又包括Eden区和两个Survivor区。\n>\n> 分配策略:1.对象优先在Eden区分配 2.大对象直接进入老年代 3.长期存活的对象将进入老年代 4.动态对象年龄判定 5.空间分配担保等\n\n**学习指引：** [经典书籍《深入理解Java虚拟机 第三版》｜2.2.4 java堆｜3.8 内存分配与回收策略]()\n\n## 5.JVM相关：Minor GC和Full GC的区别？\n\n**解析：** ： JVM 重要概念和知识点，需要整体掌握。\n\n**参考回答：**\n\n> Minor GC主要发生在新生代（Young Generation）中，负责清理不再存活的对象，通常采用复制算法，速度较快且频繁。而Full\n> GC则发生在整个堆空间中，包括新生代和老年代（Old\n> Generation），用于清理整个堆中的垃圾对象，速度较慢且可能导致较大的应用停顿。因此，Minor GC和Full\n> GC的主要区别在于它们发生的区域和影响范围。\n\n**学习指引：** [Java Minor GC、Major GC和Full\nGC之间的区别](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.cnblogs.com%2Ffuyuanming%2Fp%2F16177310.html)\n\n## 6\\. Linux相关：文件的概念？文件有哪些类型？各自的作用是什么？\n\n**解析：** ： 文件类型很多，能回答几种常见的就行，例如普通文件，目录文件，块设备文件，套接字文件。 **参考回答：**\n\n>\n> 1.普通文件（-）：这是最常见的文件类型，包括纯文本文件、二进制文件、数据文件等。它们不包含文件系统的结构信息，只是用户所接触到的文件。例如，.c文件、可执行的二进制文件等都是普通文件。\n>\n>\n> 2.目录文件（d）：目录文件是用于存放文件名及其相关信息的文件。它们可以包含下一级文件目录或普通文件，是内核组织文件系统的基本节点。通过目录文件，用户可以轻松地浏览和管理文件系统。\n>\n> 3.字符设备文件（c）：这类文件提供了对设备不带缓冲区的访问，每次访问长度可变。它们通常用于表示系统中的字符设备，如控制台、串口等。\n>\n> 4.块设备文件（b）：块设备文件提供对设备（如磁盘）带缓冲的访问，每次访问以固定的长度单位进行。它们用于表示系统中的块设备，如硬盘、U盘等。\n>\n> 5.FIFO（p）：FIFO文件也称为命名管道，用于进程间的通信。它们允许一个进程向另一个进程发送数据，而不需要通过中间的文件或网络连接。\n>\n> 6.套接字（s）：套接字文件用于进程间的网络通信。它们提供了一种在不同进程之间传输数据的方式，通常用于实现网络服务和客户端之间的通信。\n>\n>\n> 7.链接文件（l）：链接文件是指向另一个文件的指针。它们可以分为硬链接和符号链接两种。硬链接指向文件的inode节点，而符号链接则指向另一个文件的路径名。通过链接文件，用户可以方便地访问其他文件或目录。\n>\n> 除了以上七种常见的文件类型外，Linux系统中还有其他一些特殊的文件类型，如特殊文件、门文件等，但这些类型在日常使用中相对较少见。\n\n**学习指引：** [推荐学习：小林\ncoding|图解系统｜文件系统](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fxiaolincoding.com%2Fos%2F6_file_system%2Ffile_system.html%23%25E6%2596%2587%25E4%25BB%25B6%25E7%25B3%25BB%25E7%25BB%259F%25E7%259A%2584%25E5%259F%25BA%25E6%259C%25AC%25E7%25BB%2584%25E6%2588%2590)\n\n## 7\\.\nLinux相关：inode的作用？inode包含哪些内容？给出一个文件名，Linux是如何根据该文件名打开文件的？（文件名->inode->block）文件的访问时间是如何记录的？\n\n**解析：** ： 考察linux文件系统相关问题，比较细，推荐大家系统学习后理解掌握 **参考回答：**\n\n> **1.inode的作用？：**\n> inode，即索引节点，在Linux文件系统中用于存储文件或目录的元数据信息。它是文件系统的一个基本组成部分，允许系统通过inode号而非完整的文件路径快速访问到文件数据。\n>\n> **2.inode包含哪些内容？：**\n> inode包含文件的元数据信息，如文件大小、文件所有者、文件权限、文件类型、文件的创建/访问/修改时间等。此外，inode还包含指向文件数据块的指针，这些指针指示了文件内容在磁盘上的实际存储位置。\n>\n> **3.给出一个文件名，Linux是如何根据该文件名打开文件的？** **（文件名- >inode->block）**：\n> 当给出一个文件名时，Linux首先会根据文件路径在目录结构中查找该文件对应的目录项。目录项中包含了文件的inode号。然后，系统会使用这个inode号在文件系统中找到对应的inode结构。一旦找到inode，系统就可以通过inode中的指针找到文件数据所在的磁盘块（block）。最后，系统将这些磁盘块加载到内存中，从而打开并访问文件。\n>\n> **4.文件的访问时间是如何记录的** ？：\n> 文件的访问时间是通过inode中的访问时间戳（atime）来记录的。每当文件被读取时，其inode中的atime就会被更新为当前时间。这个机制允许系统跟踪文件的访问历史，以便进行各种管理和维护操作。需要注意的是，为了优化性能，某些文件系统可能会延迟更新atime或仅在文件内容实际被读取时更新它。\n\n**学习指引：** [推荐学习：小林\ncoding|图解系统｜文件系统](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fxiaolincoding.com%2Fos%2F6_file_system%2Ffile_system.html%23%25E6%2596%2587%25E4%25BB%25B6%25E7%25B3%25BB%25E7%25BB%259F%25E7%259A%2584%25E5%259F%25BA%25E6%259C%25AC%25E7%25BB%2584%25E6%2588%2590)\n\n## 8\\. 零拷贝是什么？用来解决什么问题？有哪些应用场景？实现方式有哪些？\n\n**解析：** ：\n\n**参考回答：**\n\n> **1.是什么？**\n> ：零拷贝是一种IO操作优化技术，旨在减少数据在内核空间和用户空间之间的冗余拷贝，从而解放CPU、减少上下文切换并降低系统资源消耗。它主要用来解决传统IO操作中不必要的数据拷贝问题，提高数据传输效率。\n>\n> **2.应用场景**\n> ：零拷贝技术广泛应用于需要高性能数据传输的场景，如网络传输、文件传输、数据库操作等。在这些场景中，大量的数据需要在内核空间和用户空间之间传输，传统的IO操作会导致不必要的数据拷贝和性能损失。\n>\n> **3.实现方式有哪些？**\n> ：实现零拷贝的方式主要有mmap、sendfile、splice和tee等。其中，mmap通过内存映射将内核缓冲区与用户空间共享，避免了数据拷贝；sendfile直接将数据从内核缓冲区发送到网络缓冲区，减少了CPU拷贝；splice和tee则在内核空间内实现数据的传输和复制，避免了用户空间的参与。这些技术根据具体的应用场景和需求选择使用，可以有效地提高数据传输效率和系统性能。\n\n**学习指引：**\n[图解系统：什么是零拷贝？如何实现零拷贝？](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fxiaolincoding.com%2Fos%2F8_network_system%2Fzero_copy.html)\n\n## 9.Linux相关：压缩和解压使用的命令？相关参数的作用？\n\n**解析：** ： 考察Linux常用命令，大家需要掌握一些； **参考回答：**\n\n    \n    \n    压缩命令\n    tar：该命令用于将多个文件或目录打包成一个文件，也可以同时对其进行压缩。常用的参数有：\n    -c：创建新的压缩文件。\n    -v：显示详细的压缩过程。\n    -f：指定压缩文件的名称。\n    -z：使用gzip压缩算法进行压缩。\n    -j：使用bzip2压缩算法进行压缩。\n    -J：使用xz压缩算法进行压缩。\n    \n    解压命令：\n    tar：该命令不仅可以用于压缩，也可以用于解压。解压时常用的参数有：\n    -x：从压缩文件中提取文件或目录。\n    -v：显示详细的解压过程。\n    -f：指定要解压的压缩文件名称。\n    -z：解压使用gzip压缩算法的文件。\n    -j：解压使用bzip2压缩算法的文件。\n    -J：解压使用xz压缩算法的文件。\n    例如，要解压doc.tar.gz到当前目录，可以使用命令tar -xzvf doc.tar.gz。\n    \n\n**学习指引：**\n\n[面试常考21条Linux命令](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.jianshu.com%2Fp%2F4bca8fe8a878)\n\n[一周学会Linux](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Sv411r7vd%2F%3Fvd_source%3D7671cf3fe9ab7359cf92eaa34075e23d)\n\n## 10\\. 网络相关：TCP 和 UDP 可以使用同一个端口吗？\n\n**解析：** 考察计算机网络基础知识，TCP 和 UDP都是重点。大家需要系统学习并掌握。\n\n**参考回答：**\n\n>\n> TCP和UDP可以使用相同的端口号。TCP和UDP的协议相互独立，所以他们的端口号也相互独立，即使相同也不会相互冲突。这主要是因为，当一个主机收到数据包后，系统可以根据IP包头的协议号字段判断该数据包是TCP还是UDP，然后将其送到相应的模块进行处理。而在同一个协议内部，端口号必须是唯一的，以区分不同的应用程序。但在不同的协议之间，如TCP和UDP，由于它们各自维护自己的端口号和连接状态，所以相同的端口号可以同时被TCP和UDP使用，而不会引发冲突。\n\n**学习指引：** [面试题解析：TCP 和 UDP\n可以使用同一个端口吗？](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fxiaolincoding.com%2Fnetwork%2F3_tcp%2Fport.html%23_4-18-tcp-%25E5%2592%258C-udp-%25E5%258F%25AF%25E4%25BB%25A5%25E4%25BD%25BF%25E7%2594%25A8%25E5%2590%258C%25E4%25B8%2580%25E4%25B8%25AA%25E7%25AB%25AF%25E5%258F%25A3%25E5%2590%2597)\n\n## 11\\. 网络相关：三次握手与四次挥手流程？TIME_WAIT出现在什么时候？要等待多久？（2MSL）为什么要等待这么久？\n\n**解析：** ： 计算机网络重点面试题，每个同学都该首要掌握。\n\n**参考回答：**\n\n> **三次握手流程：**\n>\n> 1.SYN：客户端向服务器发送连接请求报文段。该报文段中包含自身的数据通信初始序号。请求发送后，客户端便进入SYN-SENT状态。\n>\n> 2.SYN+ACK：服务器收到连接请求报文段后，如果同意连接，则会发送一个应答，该应答中也会包含自身的数据通信初始序号，发送完毕后，服务器进入SYN-\n> RECEIVED状态。\n>\n>\n> 3.ACK：客户端收到服务器的SYN+ACK应答后，还要发送一个应答，发送完数据后，客户端和服务器都进入ESTABLISHED状态，完成TCP三次握手。当连接建立后，就可以开始进行数据传输了。\n\n> **四次挥手流程：**\n>\n> 1.FIN：当数据传输完成后，客户端向服务器发送连接释放报文段，并停止发送数据。此时客户端进入FIN-WAIT-1状态。\n>\n> 2.ACK：服务器收到客户端的连接释放报文段后，会发送确认报文段，此时服务器进入CLOSE-WAIT状态，客户端接收到服务器的确认后，进入FIN-\n> WAIT-2状态。\n>\n> 3.FIN：服务器完成数据发送后，会向客户端发送连接释放报文段，此时服务器进入LAST-ACK状态。\n> 4.ACK：客户端收到服务器的连接释放报文段后，会发送确认报文段，并进入TIME-\n> WAIT状态。服务器收到确认后，就关闭了连接，而如果客户端在一段时间内没有收到服务器的任何数据，也会关闭连接。\n> TIME_WAIT出现在四次挥手的最后一个阶段，也就是客户端发送了最后的确认报文段后，会进入TIME-\n> WAIT状态。这个状态会持续一段时间，通常是**2MSL** （Maximum Segment Lifetime），也就是两倍的最大报文段生存时间。\n\n> **为什么要等待这么久？**\n>\n>\n> 1.确保最后一个ACK报文段能够到达服务器：客户端发送了最后的ACK报文段后，这个报文段可能因为网络原因在网络中滞留一段时间才能到达服务器。如果客户端立刻关闭连接，那么服务器可能无法收到这个ACK报文段，这会导致服务器无法正确关闭连接。因此，客户端需要等待一段时间，确保服务器能够收到这个ACK报文段。\n>\n>\n> 2.防止“已失效的连接请求报文段”出现在本连接中：客户端在发送完最后一个ACK报文段后，会等待一段时间，这段时间足以让本连接持续的时间内所产生的所有报文段都从网络中消失。这样就可以避免在新的连接中出现旧的连接请求报文段，从而保证了TCP连接的可靠性。\n\n**学习指引：** 推荐重点掌握\n[三次握手，四次挥手相关面试题｜系列](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fxiaolincoding.com%2Fnetwork%2F3_tcp%2Ftcp_interview.html%23tcp-%25E5%259F%25BA%25E6%259C%25AC%25E8%25AE%25A4%25E8%25AF%2586)\n\n**往期相关文章推荐阅读**\n\n>\n> [某跨境电商独角兽Java实习面经｜讲解](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fdiscuss%2F590502004967976960)\n\n后面还会持续产出**热门面经讲解** 系列文章，**点个关注，来个赞呗** 。\n\n> 文中**学习指引** 提到的提到的经典书籍，师兄我也有**电子版** ，需要的同学可以私信我，可免费提供。其他学习指引相关问题也可以咨询我。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/590562274071392256?sourceSSR=users",
        "title": "字节飞书前端实习总结",
        "content": "    属于是被字节狠狠地拷打了[笑cry][笑cry][笑cry]。面试官人很好，让人感觉有很沉稳的感觉。问了一大堆关于底层的问题，属于是把我整麻了。  \n    项目部分问的不多，主要问的都是一些前端涉及的底层知识，层层递进。  \n   1.vue3的响应式是如何实现的  \n   2.computed和watch是什么，有什么应用场景  \n   3.盒子模型  \n   4.BFC是什么，如何产生  \n   5.浏览器的事件循环  \n   6.浏览器输入url之后发生了什么  \n （上面的问题多多少少还回答了一点，感谢面经[笑cry]，下面的直接把我问麻了）  \n   7.浏览器是如何渲染网页的？  \n   8.V8的垃圾回收机制？（第一次知道js引擎）  \n   9.知不知道宏任务与微任务  \n   10.有没有了解过编译原理  \n   一问三不知[牛泪][牛泪][牛泪]，感受得到面试官的尴尬。  \n    接下来是代码考核（最搞笑的一集[废了]），在面试网站编写代码实现前缀树。崩溃了，什么是前缀树都没听说过。看到没共享屏幕我转手就去问AI老师，写完代码贴到面试网站上，然后就删gpt的注释，以为要提交了面试官才看到的。结果！！面试官全程能看到我写代码的过程，问我是不是去用chatgpt辅助了看到我还在删注释。。。。一下子尴尬得想钻进洞哩[懵][懵][懵]红温到说不出话来。好在面试官说没事，改了一下题目让我用chatgpt辅助看看能不能实现，还好gpt够给力，也是勉强实现了[牛泪][牛泪]  \n    考核完代码就结束了，听说别的字节都要面一个多小时，我一共44分钟就结束了，面试官问我有没有想问的，我就问问他觉得我今天的表现有没有机会[笑cry]。他很尴尬地笑，说我项目比较有特色但是基础不太扎实，需要加强基础知识的学习。果然，今天就收到了没通过的邮件。  \n    总结：首先面经是真的很有用，一半的题目在字节面经看到，不然我根本一句话都说不出来，感谢面经！其次还得多关注一下js和浏览器的底层逻辑，在开发项目的过程中关注基础知识而不是为了开发而开发。真的要怒学了[惊讶][惊讶]  \n![](https://uploadfiles.nowcoder.com/message_images/20240223/537743010_1708672993354/discuss_1708672992771.jpeg)  \n\n"
    }
]