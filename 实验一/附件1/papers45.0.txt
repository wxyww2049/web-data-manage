[
    {
        "url": "https://www.nowcoder.com/discuss/526347320560975872?sourceSSR=users",
        "title": "美团一面凉",
        "content": "这就是不写 Java 的下场，cpp 选手只能投基础研发平台，本以为会被搜索捞，最后被 Java 后端捞了。面试完全没有可聊的，问点 MySQL\n八股还是我主动找的话题，半个小时草草结束，六天后进入人才库。所以不合适，为什么要捞我。![](https://uploadfiles.nowcoder.com/message_images/20230830/908639282_1693365067497/discuss_1693365067226.jpeg)  \n![](https://uploadfiles.nowcoder.com/message_images/20230830/908639282_1693362976229/discuss_1693362975763.jpeg)  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/526179660200165376?sourceSSR=users",
        "title": "海康威视嵌入式软件开发笔试 8-28",
        "content": "**《嵌入式软件开发笔试与面试手册》**\n：[https://blog.nowcoder.net/zhuanlan/jvN8gj](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.nowcoder.net%2Fzhuanlan%2FjvN8gj)\n\n**《软件开发笔试汇总》**\n：[https://blog.nowcoder.net/zhuanlan/0oDWVm](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fcreation%2Fmanager%2FcolumnDetail%2F0oDWVm)\n\nARM架构平台使用的指令集是\n\nRISC\n\nSPARC\n\nAlpha\n\nCISC\n\n\n\n用户态使用哪个函数可以申请出连续的物理内存\n\nwmailoc()\n\nrmmap()\n\nmemalign()\n\nmalloc()\n\n\n\n以下目录中,用于保存内核运行状态的是\n\netc\n\nproc\n\ndev\n\nsys\n\n\n\n调度算法中不需要考虑的是\n\n负载均衡\n\n公平性\n\n接口友好\n\n性能\n\n\n\n在32位操作系统中的C语言程序中，\n\n\"char str[]= \"hikvision\";\n\nint sizeStr = sizeof(str);\n\nprintf(\" %d\\n\", sizeStr);\"\n\n的输出结果为\n\n4\n\n11\n\n10\n\n9\n\n\n\n存储一个32位数0×1389287到8004H~8007H四个字节单元中，若以大端模式存储，则8004H单元存储的内容为\n\n0x13\n\n0x01\n\n0x92\n\n0x87\n\n\n\n以下属于字符设备的有\n\n终端设备驱动\n\n网络设备驱动\n\n磁盘\n\nSD设备驱动\n\n\n\n下列关于TCP工作原理，错误的是\n\nTCP将保持它首部和数据检验和，这是一个端到端的检验\n\n应用数据被分割成TCP任务最合适发送的数据块。\n\nTCP报文段作为IP数据报来传输,而IP数据报的到达可能会失序,因此TCP报文段的到达也回能会失序，这种截况下应用层收到的数据也是失序的\n\nTCP能提供流量控制\n\n\n\n以下关于线程中的PID和TID的描述正确的为\n\n线程PID和线程TID意义相同\n\n线程TID在系统内是唯一的\n\n线程PID在系统内不是唯一的\n\n其余一项都不对\n\n\n\n以下关于线程同步的错误描述为\n\n信号量和互斥锁是两种常用的线程同步控制方式\n\n就算每个线程使用的资源是其他线程不会读取或修改的,仍必须做线程同步\n\n只有在多线程下才需要考虑线程同步\n\n线程同步是指多个线程需要访问并修改某资源时,采用一系列的相制以保证同时最多只能有一个线程访问并修改该资源\n\n\n\n32位系统中C程序有符号短整型变量的最大值为（）\n\n65535\n\n32768\n\n65536\n\n32767\n\n\n\n在C语言程序中，\"int n = 3; int f = 17;\"，则执行\"n += 2*f%6+3;\"后，n的值是多少()\n\n3\n\n10\n\n7\n\n16\n\n\n\n在64位系统中如下结构中s.x、s.y 和next的相对偏移量各自多少?\n\nstruct foo{\n\nint*p;\n\nstruct {\n\nlong y;\n\nint x;\n\n} s;\n\nstruct foo *next;\n\n}\n\n12，8，16\n\n12，4，16\n\n16，8，20\n\n8，4，12\n\n\n\n在32位系统中有如下结构体:\n\ntypedef struct\n\n{\n\nint a;\n\nfloat b;\n\nchar c[253];\n\ndouble d;\n\nchar f[35];\n\nlong int e;\n\nshort g;\n\nshort\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/526166443075829760?sourceSSR=users",
        "title": "校招美团测开二面",
        "content": "# 校招美团测开二面\n\n​\n时间线——一面8月28日上午10点，当天下午2点约8月29日晚上7点二面。一面面试官说美团测开偏开发多一些，二面面试官说美团测开偏业务交互、质量保障多一些，给我整不会了。。。\n\n## 1.算法题：还原IP地址\n\n​ 只给15分钟，时间到就截止。我哼次哼次地抓紧时间写，最后时间快到了，发现有个细节调不出来，面试官说就这样吧，说一下思路就好。\n\n## 2.读研期间有发过高水平的论文吗？学校对论文有要求吗？\n\n## 3.自动化测试了解吗？说一说\n\n​ 说了selenium\n\n## 4.自动化测试和手工测试的优缺点说一下\n\n## 5.移动端测试和Web端测试有什么区别？需要考虑什么？\n\n​ 很开放，面试官说什么方面的都可以。\n\n## 6.你做过开发，有部署过项目吗？\n\n​ react -> nginx,SpringBoot打成jar包->放到服务器上跑\n\n## 7.场景题：淘宝购物车，怎么测\n\n## 8.在过去人生经历中最有成就感的事件？\n\n## 9.读研期间，同学和导师对你的印象如何？\n\n## 10.优缺点有哪些？\n\n## 11.自己的职业规划？\n\n## 12.反问：\n\n​ 对我的建议？建议谈不上，在刚刚毕业的这个阶段可以先把自己的职业规划想清楚，如果想做开发的话，你其实可以坚持自己的想法，不一定要退而求其次地转为测开。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/526178827152654336?sourceSSR=users",
        "title": "联想嵌入式软件开发笔试 8-26",
        "content": "**《嵌入式软件开发笔试与面试手册》**\n：[https://blog.nowcoder.net/zhuanlan/jvN8gj](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fblog.nowcoder.net%2Fzhuanlan%2FjvN8gj)\n\n**《软件开发笔试汇总》**\n：[https://blog.nowcoder.net/zhuanlan/0oDWVm](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fcreation%2Fmanager%2FcolumnDetail%2F0oDWVm)\n\n2\n\nvoid fun(char * *p){\n\nint i;\n\nfor (i= 0; i<4;i++)\n\nprintf(\" %s\", p[i]);\n\n}\n\nmain(){\n\nchar *s[6]= {\"ABCD\",\"EFGH\"，\"IJKL\"，\"MNOP\"，\"QRST\", \"UVWX\"}\n\nfun(s);\n\nprintf(\"\\n\");\n\n}\n\n程序运行后的输出结果是?\n\nD  ABCD EFGH IJKL MNOP\n\n\n\n\n\n3\n\n在Python3中,下列程序运行结果为:\n\nstrs = ['a', 'ab', 'abc','python']\n\ny = filter(lambda s: len(s) > 2, strs)\n\ntmp = list(map(lambda s: s.upper(), y))\n\nprint(tmp)\n\n\n\nA ['abc', 'python']\n\nB ['a','ab']\n\nC ['ABC', 'PYTHON']\n\nD ['abe',PYTHON']\n\n\n\n4在C++中，对引用和指针的区别说法错误的是()\n\nB 引用总是指向一个对象，指针可能不指向对象\n\nC sizeof 引用得到的是所指向的变量(对象)的大小,而 sizeof指针得到的是指针变量本身的大小\n\nD引用创建时必须初始化,而指针则可以在任何时候被初始化\n\n\n\n5\n\n以下叙述中正确的是()\n\nB 函数的形参类型不能是指针类型\n\nC 函数的类型不能是指针类型\n\nD设有指针变量为double *p,则在32位机器上p+1是将指p的指向向后移动8个字节\n\n\n\n6\n\n对如下c++程序\n\nint main(){\n\n int a= 1,b = 3,c=2;\n\n while (a < b<c)\n\n {\n\n      ++a;\n\n       \\--b;\n\n       \\--c;\n\n }\n\ncout<<a<<\" \"<<b<<\" \"<<c<< \"\\n\";\n\nreturn 0;\n\n}\n\n\n\n请问输出结果是()\n\nC 3 1 0\n\n\n\n7\n\n关于Python内存管理,下列说法错误的是\n\nA可以使用del释放资源\n\nB变量无须指定类型\n\nC变量无须先创建和赋值而直接使用\n\nD变量不必事先声明\n\n\n\n私网地址用于配置公司内部网络，下面选项中，()属于私网地址\n\nA 192.168.10.1\n\nB 172.15.0.1\n\nC 127.10.0.1\n\nD 128.168.10.1\n\n\n\n下列关于总线的说法中正确的是()\n\nA 计算机总线中只包含CPU总线\n\nB I/O总线是用于连接CPU和内存的总线\n\nC CPU总线是连接内存和1/O设备(包括外存)的总线\n\nD 总线是用于连接CPU、内存、外有和各种/O设备并在它们之间传输信息的一组共享的传输线及其控制电路\n\n\n\n下列哪个对象只能用于进程内的多线程同步\n\nA、 Mutex\n\nB、 Event\n\nC、 CriticalSection\n\nD、Semaphore\n\n\n\n进程具有三个基本状态:就绪状态、执行状态和阻塞状态。进程在执行过程中其状态总是不停地发生变化下面关于进程状态变化的说法中正确的是（）\n\nA进程一旦形成,首先进入的是运行状态\n\nB三种进程状态是进程运行过程中的基本状态,进程可能同时处于某几种状态中\n\nC一个进程必须经过进程的3种\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/353158953230082048?sourceSSR=users",
        "title": "太平洋寿险科技赋能中心终面-前端 base(上海)",
        "content": "5个人集体面试  \n  \n1.自我介绍 半分钟  \n2.大学里最有成就感的一件事  \n3.大学里相处关系最不好的人  \n4.用俩个词形容你最敬佩的老师  \n5.你的未来规划 (稳定 深度)  \n6.用一句话概括你对公司的认识\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/551461694732570624?sourceSSR=users",
        "title": "11.6金山一面面经",
        "content": "问的都是网络和MySQL，还有操作系统，项目和实习一个都没问到\n\n1\\. 说说TCP的拥塞控制\n\n2\\. TCP怎么保证可靠\n\n3\\. 为什么握手只要三次而挥手要四次\n\n4\\. http的发展历史\n\n5\\. post和get本质区别 post几次 get最长url\n\n6\\. ARP怎么做的\n\n7\\. Hashmap为啥用红黑树不用其他二叉树\n\n8\\. MySQL为啥用b+做缓存\n\n9\\. Mysql解决不可重复读\n\n10\\. Mvcc怎么做的\n\n11\\. MySQL存储过程\n\n12\\. 数据库与缓存一致\n\n13\\. 设计模式\n\n14\\. 修饰器模式与代理模式的区别\n\n15\\. 索引失效原因\n\n16\\. 数据区分度多大时用索引？要具体数字 30%没答出来\n\n17\\. Binlog类型\n\n18\\. 16kb的页 一行1kb 可以存多少数据\n\n19\\. 场景题：在大文件中找关键字->长字符串中找子串\n\n20\\. 线程与进程\n\n21\\. 线程间通信\n\n22\\. Java如何实现多线程\n\n[摸鱼中][摸鱼中]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/386168895684583424?sourceSSR=users",
        "title": "2023届_TCL华星_提前批_技术研发岗_笔试&专业面试",
        "content": "##  **#2023届****#TCL华星光电#提前批#技术研发岗#笔试 &专业面试**\n\n###  笔试部分：\n\n时间：2022.07.31  \n\n内容：全部选择题（多选和单选），考察内容涉及材料类、光学、半导体、显示器件常识等。  \n\n评价：虽说机械工程是万金油，没准备的情况下也只能自求多福了。  \n\n###  专面部分：\n\n时间：2022.08.01  \n面试官：1位业务主管(A)+1位HR(B)  \n面试平台: 使用腾讯会议进入面试室，进入后在等候间耐心等待，一般提前15分钟进入。\n\n  \n\n面试流程：  \nB：做个自我介绍吧（没时间限制,不用英文）  \nA：请问你这次应聘的使我们的技术岗还是研发岗？  \nA：你硕士做的是控制吗？可以应用到工业哪些方面。  \nA：你可以找一个最具代表性的项目给我们说一下开发的流程，解决的问题吗？  \nA：项目的结构设计和控制系统都是你做的吗？  \nA：我的问题问完了。  \nB：你机械工程为什么想投研发岗？  \nB：你有了解我们华星研发岗吗？  \nB：你觉得自己相对他人有什么优势吗？有什么具体例子？  \nB：有已经发表的论文或专利吗？  \nB：绩点排名怎么样？  \nB：我的问题问完了，你有什么要问我们的吗？  \nB：宣布结束  \nAB：谢谢，拜拜  \n你已经被踢出会议！\n\n  \n\n评价：面试官态度友好，问的问题都挺中肯的。因为自己没准备好，目前已做好接收感谢信的准备😂😂😂  \n  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/542454192464556032?sourceSSR=users",
        "title": "10.13 金山二面凉经 （30min）",
        "content": "1 自我介绍，项目介绍；\n\n2 项目中用了Iframe，讲一下CSP（Content-Security-Policy）；\n\n3 项目中为什么要用Pinia不用Vuex；\n\n4 场景题：一个页面点击任何一个按钮，触发请求。这里考察事件捕获。\n\n追问：如果我想取消掉呢？（这里一方面面试官那边信号不好没听清，也没理解是取消请求还是取消点击事件还是取消别的[牛泪]）\n\n5 说一下事件循环，什么是宏任务，什么是微任务；\n\n6 Echarts怎么设置图例，怎么将折线图变为曲线图，怎么修改图的位置；\n\n7 怎么把装饰器转为ES5的写法（之前只了解Python有装饰器，JS这块第一次听到[牛泪]）；\n\n8 场景题：一个组件被很多组件复用，怎么设置父子组件、或者祖孙组件通讯？用Vuex会有什么问题？\n\n反问：技术栈？有什么需要提升的地方？多久有结果？\n\n总结：邮件上写了1个小时面试时间，结果只面了半个小时。很多问题都没回答上来，大概率是凉了[牛泪]。收拾下心情，准备其他公司的笔试面试了。\n\n**更新：**\n\n11.9 接到电话面试的邀请，应该是HR面。但是已经在走小米的签约流程了，所以选择放弃面试。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/549520615477166080?sourceSSR=users",
        "title": "联通数科初面11.2",
        "content": "比较早，感觉自己是第一个，9点钟就面，总共6分钟，也是卡点结束的\n\n1、自我介绍\n\n2、Java使用的编程工具（不知道问这个啥意思，我说是用IDEA），还问我这个好处\n\n3、SpringBoot和SpringMVC的区别，MVC是啥？\n\n4、Java面向对象是啥？\n\n...\n\n反正就是很急，没问几个问题结束了。\n\n希望uu们一切顺利！！！\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/552107336618229760?sourceSSR=users",
        "title": "新华三C++面经",
        "content": "10.16 9:00-11:00 南京线下三面速通\n\n#### 一面\n\n  * 项目\n\n○ 项目挑一个讲讲？项目性质 团队规模 负责内容 成果\n\n○ 系统中的通信怎么实现的？中间件提供的接口，底层还是基于以太网 TCP/IP\n\n○ xx怎么实现的？不是我负责的，据我了解他们采用xx方案。\n\n  * C++\n  * 字节序知道吗？描述一下。CPU读取粒度巴拉巴拉...\n\n面试官总结：提升CPU的读取效率\n\n  * 内存泄漏？\n  * 用什么创建的对象是动态内存分配的？\n  * 动态内存位置？\n  * 栈上的数据会发生内存泄漏吗？\n  * 讲讲多线程互斥同步？ \n  * 多进程 某个进程内存泄漏会影响其他进程吗？\n  * 怎么看待加班？\n  * 反问\n  * 各base地岗位业务？杭州总部嵌入式，郑州PC？南京苏州不了解\n  * 技术方面的一些问题...\n\n#### HR面\n\n  * 确认学校，你这个本科学校我怎么没听过？我 沉默\n  * 电子信息工程 电子信息 科班是吧？\n  * 看你的项目做的软件应该挺简单的，没有互联网专业技术型公司做的复杂。我嗯嗯 应该是的\n  * 确认家庭情况\n  * 考研还是保研？考研为什么不考xx？为什么不考xxx？\n  * 六级过了是吧？\n  * offer情况？评价：这些公司做的软件应该也挺简单的。我：嗯嗯 可能吧\n  * 意向地？为什么北京不行？北京机会多啊\n\n#### 主管综合面\n\n  * 你认为从学校向职场过渡的过程中发生剧烈变化的是什么？\n  * 个人职业发展规划？\n  * 实习等项目中感觉比较困难/重要的事？ \n\n面试官评价：通过简历上的项目可以看出有技术积累，通过前面几个问题也可以看出思维比较成熟。口头告知通过。\n\n现场负责组织的HR告知一到两周出结果，结果快一个月了也没消息。\n\n总结：难度适中，HR面体验较差，笔试-面试效率很高，面试完后续流程失联，听说现在还在面试，等所有人面试完了统一开？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/422474995995090944?sourceSSR=users",
        "title": "华星光电提前批-工程技术岗-面经",
        "content": "比较早投递简历，当时没啥事准备了自己，一个月开始提前批的面试，知道这个岗位要倒班，在武汉，家在那边，想先弄一个offer，保底这样，倒班也无所谓了，反正男生。\n\n就一面，大概15分钟的面试：\n\n需要1分钟自我介绍，时间不要超时，我刚刚好，就讲了讲自己的实习内容，项目内容，时间就差不多了。\n\n然后就是根据你自己介绍的内容，对你项目进行详细讲解，就说说你的项目，职业规划，你对岗位的理解，你能接受倒班吗？，我很高兴的说可以啊，然后就结束了。\n\n月底就收到了offer了，开心，并且很快谈好满意的薪资谈。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/551421249914736640?sourceSSR=users",
        "title": "税友集团 前端一面",
        "content": "拷打项目，人有点麻。\n\n问题：\n\n  1. 整体介绍一下项目\n  2. 项目遇到哪些挑战，讲一下\n  3. 怎么发现问题的\n  4. 为什么需要这么做\n  5. 怎么解决\n  6. JSON.stringify() 做深克隆可能有什么问题\n  7. Vuex 和 Pinia 的区别\n  8. 组件通信问题\n  9. 表单是怎么收集信息的\n  10. hash 模式 和 history 模式\n  11. nginx\n  12. 模块化开发的历史和为什么需要模块化开发\n  13. 浮动和清除浮动的作用\n\n反问：\n\n  1. 部门技术栈 —— React\n  2. 部门规模 —— 前端 10人+\n  3. 部门业务 —— 基建\n\n感受：\n\n大概率挂了，项目没答好。想起来秋招还没写过面经，就写了一篇。。。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/473164040823406592?sourceSSR=users",
        "title": "趣加（funplus）前端一面凉经",
        "content": "自我介绍\n\n1.你实习做了什么项目，你在项目中做了什么？\n\n2.vue中有用过ts吗？有什么作用？\n\n3.ts的类型写在哪里?\n\n4.vuex是什么?\n\n5.你对前端的理解?\n\n6.你js最容易出的Bug是什么?\n\n7.element 和 ant design的区别是什么?\n\n8.v2和v3的区别？\n\n9.css预处理器有哪些？\n\n春招经历的面试比较少，不太自信，害,像vuex什么的好像没有说到点,\n\n基本20分钟左右一个人，面试官也比较疲劳的样子。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/353159527635820544?sourceSSR=users",
        "title": "字节-智能创作-测试开发二面",
        "content": "二面面试官比较严肃，整个过程中面无表情。\n\n开始的时候就规划好了时间，等会先问项目，然后基础，算法题。\n\n自我介绍\n\n讲下你的项目\n\n讲下你遇到的困难，怎么解决的\n\n面试官觉得我的项目没有什么难度和挑战性，就没继续问了\n\n怎么测试一个播放器\n\n播放器播放到一半黑屏了可能原因去排查\n\nJava怎么判断一个对象是垃圾\n\nJava有哪些垃圾清理算法\n\n乐观锁和悲观锁\n\nLinux会哪些指令？详细问了rm -rf rf是什么意思\n\nRedis会吗？不会\n\nMysql innodb里索引的数据结构\n\n为什么用b+树，不用红黑树，b树\n\n讲一下TCP握手过程\n\n操作系统页面置换的过程\n\n不会我只知道页面置换算法\n\nPython用过吗？只会语法，然后后面三个问题全部答错了\n\nPython字典怎么删除\n\nPython is ==的区别\n\nPython 字典怎么合并\n\n你为什么想做测开，或者你怎么理解这个职位\n\n算法题\n\n1.两数之和LC1\n\n2.有效的括号LC20\n\n算法题都很简单，ACM模式然后要自己想好测试样例，注意栈要先判空，我因为比较紧张变量名写错了然后调了半天。\n\n智力题10个乒乓球，有一个坏的，不知道是轻是重，最少要多少次能找出来\n\n时间不够了就给了五分钟，猜到答案是3但是没想出来怎么去称\n\n反问\n\n我这次回答有哪些地方不好，被拒绝回答了，让我等HR通知。\n\n可以给我一些作为测开方面该学习的东西吗\n\n有些问题不会，项目面试官也看不上。本来以为凉凉了\n\n三个小时后收到三面邀请\n\n许愿三面通过[摸摸头]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/379658441252474880?sourceSSR=users",
        "title": "万集科技 提前批嵌入式 一面二面 凉",
        "content": "一面 20分钟\n\n1.自我介绍\n\n2.项目\n\n3.进程间通信\n\n4.多进程工作原理\n\n5.iic/spi\n\n反问 技术栈\n\n感觉注重项目一点\n\n二面 HR面\n\n1.自我介绍\n\n2.为什么来武汉\n\n3.实习表现\n\n4.开发流程 每个部分占比多少\n\n5.对自己的技术栈评分\n\n  \n\n  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/381239830250901504?sourceSSR=users",
        "title": "万集科技嵌入式面经 已oc",
        "content": "base武汉  \n1.自我介绍  \n2.让我介绍一下和嵌入式相关的一个项目，另一个是Webserver  \n3.串口 iic spi  \n4.通信协议怎么设置的  \n5.蓝牙有遇到过丢包吗？  \n6.嵌入式项目做的电池管理 问我电池soc怎么验证的 估计只是好奇问问  \n7.tcp udp区别  \n8.线程同步  \n9.互斥锁原理  \n10.如果有一个线程长时间占用资源怎么办？  \n11.上位机数据怎么接收的 多久刷新一次  \n12.最后评价做的项目是一些低速的  \n感觉可能不太满意，最后反问问了部门的技术栈  \n  \n  \n二面  \n一面完一周了还没消息，问了hr说一面过了，然后约了一周后的二面。hr面聊了意向工作地点，有没有offer，意向薪资之类的。  \n  \n已oc\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/353159143320133632?sourceSSR=users",
        "title": "天津大众变速器有限公司物流助理面经",
        "content": "在校园招聘是投递了自己的简历后收到面试电话，先是人力资源部门进行面试，让做自我介绍，在本科期间有没有一些该专业的实习经历，自己期望的薪资，你对公司组的织架构有什么大概的了解等。之后是应聘部门经理，有什么职业规划等等。整体面试还是有一定难度的，但是对于问题的提问，大多数面试过程都差不多，所以对于基本的问题我们在面试前都可以做好准备，在面试过程中也不会表现得太差。这次面试应聘者很多，还有好多研究生，相对于他们来说，我的学历有点低，在面试过程中听面试官的语气像是比较注重学历，所以感觉自己机会也不大了，但还是要总结一下这次面试的一些经验。\n\n在做自我介绍时可以对面试官说:此时我非常紧张，还请见谅。其实大家一般都会理解你的心情，更不会嘲笑你。把内心压抑的紧张情绪说出来，然后再开始介绍自己，会发现已经轻松了好多。回答问题时，目光可以对准提问者的额头。有的人在回答问题时眼睛不知道往那儿看。如果面试时把目光集中在对方的额头上，既可以给对方以诚恳、自信的印象，也可以鼓起自己的勇气，消除自己的紧张情绪。还有就是在面试过程中要注意控制谈话节奏，先不要急于讲话，而应集中精力听完提问，在从容应答，一般讲话的时候可以有意识的放慢讲话速度，等自己进入状态后再适当的增加语气和语速。这样既可以稳定自己的紧张情绪，又可以扭转面试的沉闷气氛。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/532213722635415552?sourceSSR=users",
        "title": "星网锐捷面试",
        "content": "面试很愉快，问的东西比较多，但简单。  \n包括：  \n1、进程与线程  \n2、进程调度算法  \n3、事务  \n4、链表和数组  \n5、二分查找，分块查找，顺序查找  \n6、排序，堆排序  \n7、TCP和UDP的区别  \n8、3次握手，4次挥手  \n等等  \n期待好运，哈哈哈\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/548619646283321344?sourceSSR=users",
        "title": "4.1.1 银行技术面---编程语言类（Java基础）",
        "content": ">\n> 本文章将收录在**专栏**[**《手把手带你破解银行科技岗面试》**](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fcreation%2Fmanager%2FcolumnDetail%2F1j84kj)**，如果你**\n> 对**银行科技岗（研发中心、数据中心、软开中心、金融科技岗、科技人才岗）**\n> 感兴趣，欢迎[点击此处](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fwww.nowcoder.com%2Fcreation%2Fmanager%2FcolumnDetail%2F1j84kj)订阅本专栏。本专栏将手把手带你破解银行科技岗面试，学习本专栏至少可以让你知道：\n>\n>   * 我到底能报考**哪些银行** 里的**哪些机构** ？\n>   * 我到底是否能达到这些岗位的**招聘要求** ？\n>   * 我到底如何**提前准备** 这些岗位的**招聘面试** ？\n>\n\n根据我的经验，目前国内大多数银行的后端研发岗的技术栈都是Java那一套，一般上提问也是围绕着Java后端研发那一套展开（也会根据你的简历调整问题），这篇文章主要记录了我收集的银行技术面中问到的Java相关的问题，有问题也有我自己总结的答案，请大家参考。\n\n为了便于分类记忆，我将这些问题分了如下几个目录：\n\n  * **Java 基础**\n  * Java 集合\n  * Java 并发\n  * Java JVM\n\n限于篇幅，分多篇文章更新，本文更新**Java语言基础** 相关的内容。\n\n# 一、问题列表（持续更新）\n\n我将面试收集到的高频Java基础相关的问题给放在了这里，大家可以查漏补缺\n\n  1. jdk、jre、jvm的区别\n  2. 讲一讲 hashcode 和 equals\n  3. 讲讲 final 关键字的作用，抽象类可以被final修饰么\n  4. 讲下Java有哪几种基础类型\n  5. 说一说String、StringBuilder、StringBuffer的区别\n  6. 接口和抽象类有什么区别？\n  7. 描述一下面向对象的三大特性（常问！）\n  8. 自动装箱和自动拆箱是什么意思？\n  9. 如何理解反射机制？\n\n# 二、答案参考\n\n## 2.1 jdk、jre、jvm的区别\n\n我在初学Java的时候，一直对这三个概念模糊不清，这里就一次性把这个问题讲明白。\n\n  * jdk：是java开发工具包，是Sun公司针对java开发人员的产品，jdk中包含jre，在jdk的安装目录下有一个jre的目录，里面有两个文件夹bin和lib，在这里可以认为bin里面就是jvm，lib中是java工作需要的类库，而java和lib合起来就称为jre。是java开发工具包，是Sun公司针对java开发人员的产品，jdk中包含jre，在jdk的安装目录下有一个jre的目录，里面有两个文件夹bin和lib，在这里可以认为bin里面就是jvm，lib中是java工作需要的类库，而java和lib合起来就称为jre。JDK(Java Development Kit) 是整个JAVA的核心，包括了Java运行环境（Java Runtime Envirnment），一堆Java工具（javac/java/jdb等）和Java基础的类库（即Java API 包括rt.jar）。\n  * jre：是运行基于java语言编写的程序所不可缺少的运行环境，也是通过它，java的开发者才可以将自己开发的程序发布到用户手中，让用户使用，与大家熟悉的jdk不同，jre是运行环境，并不是一个开发环境，所以没有包含任何开发工具（如编译器，调试器）等，知识针对使用java程序的用户JRE（Java Runtime Environment，Java运行环境），包含JVM标准实现及Java核心类库。JRE是Java运行环境，并不是一个开发环境，所以没有包含任何开发工具（如编译器和调试器）JRE是指java运行环境。光有JVM还不能成class的 执行，因为在解释class的时候JVM需要调用解释所需要的类库lib。 （jre里有运行.class的java.exe）\n  * jvm：就是我们常说的java虚拟机，它是整个java实现跨平台的最核心的部分，所有的java程序首先被编译为.class文件，这种类文件可以在虚拟机上运行，也就是说class并不直接与机器的操作系统相对应。而是经过虚拟机间接的与操作系统交互，由虚拟机将程序解释给本地系统执行，只有jvm还不能将class执行，因为在解释class的时候jvm需要调用解释所需要的类库lib，而jre包含lib类库，jvm屏蔽了具体操作系统平台的相关信息，使得java程序只需要生成在java虚拟机上运行的目标代码。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/402878543921795072?sourceSSR=users",
        "title": "浩鲸科技 java一面（已offer） base福州",
        "content": "30min左右，面试官迟到了几分钟  \n  \n1\\. 自我介绍  \n2\\. 反射  \n3\\. 多线程，线程的生命周期，线程池参数有哪些  \n4\\. 集合，说一下list, map, set  \n5\\. mysql优化  \n6\\. spring有哪些注解，@Autowired和@Resource 的区别  \n7\\. mybatis #{}和 ${}的区别  \n8\\. springcloud有哪些组件  \n9\\. a=a+b 和 a+=b 的区别（没答上来）  \n10\\. == 和 equals 的区别  \n11\\. SpringSecurity的过滤器  \n12\\. 冒泡排序的应用场景  \n13\\. synchronized怎么实现可重入  \n14\\. left join, inner join, outer join区别  \n15\\. 反问  \n  \n有想到的之后再补充。面试官说公司主要用的是dubbo，但是我还没学。本来面试官提了提我的项目，我说我是在网上边学边做的面试官就没问很多了。  \n  \n——————————  \n9.26更新 收到二面通知了\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/410739668066603008?sourceSSR=users",
        "title": "天翼云面经一面",
        "content": "1 自我介绍\n\n2 介绍一个自己的项目，面试官可能不是Java开发，有的地方需要仔细介绍一下\n\n3 了解云计算的哪些东西？做过openstack相关开发吗？\n\n4 Java集合，哪些是线程安全的？\n\n5 怎么自己去实现hashmap？答了底层结构 查询的时间复杂度？\n\n6 线程间的同步和互斥方法？不限于Java\n\n7 数据库乐观锁\n\n8 Linux了解哪些常用指令，怎么看一个端口有没有被占用？（netstat -anp | grep 端口号）\n\n9 浏览器输入域名回车之后发生了什么？答了DNS TCP HTTP HTTPS\n\n10 做过容器开发吗？\n\n11 另一个面试官问的，没太听清，只听到了操作系统，页面算法，就答了几种页面置换算法\n\n12 进程状态\n\n13 什么是完全二叉树，结构特点，节点和叶子关系等等，什么是平衡二叉树，满二叉树节点总数？\n\n面试官态度很好，一直在说您XXX？但是好像不是做java的\n\n10/12号一面，第二天约了14号二面\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/549225051040514048?sourceSSR=users",
        "title": "4.1.2 银行技术面---编程语言类（Java集合）",
        "content": ">\n> 本文章将收录在**专栏**[**《手把手带你破解银行科技岗面试》**](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fgw-c.nowcoder.com%2Fapi%2Fsparta%2Fjump%2Flink%3Flink%3Dhttps%253A%252F%252Fwww.nowcoder.com%252Fcreation%252Fmanager%252FcolumnDetail%252F1j84kj)**，如果你**\n> 对**银行科技岗（研发中心、数据中心、软开中心、金融科技岗、科技人才岗）**\n> 感兴趣，欢迎[点击此处](https://gw-c.nowcoder.com/api/sparta/jump/link?link=https%3A%2F%2Fgw-c.nowcoder.com%2Fapi%2Fsparta%2Fjump%2Flink%3Flink%3Dhttps%253A%252F%252Fwww.nowcoder.com%252Fcreation%252Fmanager%252FcolumnDetail%252F1j84kj)订阅本专栏。本专栏将手把手带你破解银行科技岗面试，学习本专栏至少可以让你知道：\n>\n>   * 我到底能报考**哪些银行** 里的**哪些机构** ？\n>   * 我到底是否能达到这些岗位的**招聘要求** ？\n>   * 我到底如何**提前准备** 这些岗位的**招聘面试** ？\n>\n\n根据我的经验，目前国内大多数银行的后端研发岗的技术栈都是Java那一套，一般上提问也是围绕着Java后端研发那一套展开（也会根据你的简历调整问题），这篇文章主要记录了我收集的银行技术面中问到的Java相关的问题，有问题也有我自己总结的答案，请大家参考。\n\n为了便于分类记忆，我将这些问题分了如下几个目录：\n\n  * Java 语言\n  * **Java 集合**\n  * Java 并发\n  * Java JVM\n\n限于篇幅，将分多篇文章更新，本文将更新**Java 集合相关** 内容。\n\n# 一、问题列表\n\n我将面试收集到的高频问题给放在了这里，大家可以查漏补缺\n\n  1. 请你讲讲对 Java 集合的了解？\n  2. HashMap 源码分析（超级经典，源码可挖掘的东西很多）\n  3. 其他几种Map的对比\n  4. 讲一下jdk7和jdk8中map的区别\n  5. 讲下CopyOnWriteArrayList\n\n# 二、答案参考\n\n## 2.1 请你讲讲对 Java 集合的了解？\n\n**1\\. List,Set,Map 三者的区别？**\n\nList(对付顺序的好帮手)： 存储的元素是有序的、可重复的。\n\nSet(注重独一无二的性质): 存储的元素是无序的、不可重复的。\n\nMap(用 Key 来搜索的专家): 使用键值对（key-value）存储，类似于数学上的函数 y=f(x)，“x”代表 key，\"y\"代表\nvalue，Key 是无序的、不可重复的，value 是无序的、可重复的，每个键最多映射到一个值。\n\n**2\\. List 主要实现类？**\n\nArrayList 常用的，数组实现的\n\nLinkedList 底层双向链表实现\n\nVector 和 ArrayList 基本一样，但是线程安全的\n\n**3\\. Set 主要实现类**\n\nHashSet 无序不可重复\n\nLinkedHashSet 插入有序\n\nTreeSet 大小有序\n\n**4\\. Map 的主要实现类**\n\nHashMap jdk1.7 之前用数组 + 链表 之后用 数组 + 红黑树。\n\nLinkedHashMap 底层维护了一个链表，让插入变的有序。\n\nTreeMap 还是可以按一定规则进行排列有序。\n\n## 2.2 HashMap 源码分析（超级经典，源码可挖掘的东西很多）\n\n八股文非常重要的一问：HashMap，经典面试题。今天把我看的一篇源码解析给大家分享一下。\n\n> 一个比较不错的源码理解，可以看看：\n>\n> https://zhuanlan.zhihu.com/p/79219960\n\n**HashMap 主要讲清楚三个点就可以了：**\n\n  * **数据结构是如何实现的，为什么这么做？**\n  * **根据数据结构讲，详细讲一下增 put 是如何实现的？**\n  * **根据数据结构讲，扩容机制是如何实现的？**\n\n### 1\\. 数据结构\n\njdk1.7 的数据结构是数组 + 链表实现的\n\njdk1.8 的数据结构是数组 + 链表/红黑树实现的\n\n  * **数组**\n\n    \n    \n    transient Node<K,V>[] table;    \n    \n    \n\n记住这个 table，这属于常识性的东西！\n\n  * **Node 的源码**\n\n    \n    \n    static class Node<K,V> implements Map.Entry<K,V> \n    {    \n        final int hash;    \n        final K key;    \n        V value;    \n        Node<K,V> next;    \n        ………… \n    }        \n    \n    \n\n可见 Node 里除了 K 和 V 还有一个 next，表示链表\n\n### 2\\. 存储元素 put\n\n**以 jdk 1.8 为例！！！**\n\n上述 put 的步骤描述如下\n\n（1）第一步：调用 put 方法传入键值对\n\n（2）第二步：使用 hash 算法计算 hash 值\n\n（3）第三步：根据 hash 值确定存放的位置，判断是否和其他键发生了哈希冲突\n\n（4）第四步：若没有发生冲突，直接存放在数组中即可\n\n（5）第五步：若发生了冲突，还要判断此时的数据结构是什么？\n\n（6）第六步：若此时的数据结构是红黑树，那就直接插入红黑树中\n\n（7）第七步：若此时的数据结构是链表，判断插入之后是否大于等于8\n\n（8）第八步：插入之后大于 8 了，就要先调整为红黑树，在插入\n\n（9）第九步：插入之后不大于 8，那么就直接插入到链表尾部即可。\n\n  * **put 源码**\n\n    \n    \n    public V put(K key, V value) {\n        return putVal(hash(key), key, value, false, true);\n    }\n    \n    \n\nputVal 的五个参数的意思分别是\n\n**（1）第一个参数 hash：调用了 hash() 方法计算 hash 值，把 key 的 hash 值与与其自身的高十六位进行异或得到。**\n\n![](https://uploadfiles.nowcoder.com/images/20231101/820488794_1698817259113/D2B5CA33BD970F64A6301FA75AE2EB22)\n\n**（2）第二个参数 key：就是我们传入的key值，也就是例子中的张三**\n\n**（3）第三个参数 value：就是我们传入的value值，也就是例子中的20**\n\n（4）第四个参数 onlyIfAbsent：也就是当键相同时，不修改已存在的值\n\n（5）第五个参数 evict ：如果为false，那么数组就处于创建模式中，所以一般为true。\n\n  * **putVal 源码**\n\n    \n    \n    final V putVal(int hash, K key, V value, boolean onlyIfAbsent,\n                   boolean evict) {\n        Node<K,V>[] tab; Node<K,V> p; int n, i;\n        //第一部分\n        if ((tab = table) == null || (n = tab.length) == 0)\n            n = (tab = resize()).length;\n        //第二部分\n        if ((p = tab[i = (n - 1) & hash]) == null)\n            tab[i] = newNode(hash, key, value, null);\n        //第三部分\n        else {\n            Node<K,V> e; K k;\n            //第三部分第一小节\n            if (p.hash == hash &&\n                ((k = p.key) == key || (key != null && key.equals(k))))\n                e = p;\n            //第三部分第二小节\n            else if (p instanceof TreeNode)\n                e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value);\n            //第三部分第三小节\n            else {\n                for (int binCount = 0; ; ++binCount) {\n                    //第三小节第一段\n                    if ((e = p.next) == null) {\n                        p.next = newNode(hash, key, value, null);\n                        if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st\n                            treeifyBin(tab, hash);\n                        break;\n                    }\n                    //第三小节第一段\n                    if (e.hash == hash &&\n                        ((k = e.key) == key || (key != null && key.equals(k))))\n                        break;\n                    //第三小节第三段\n                    p = e;\n                }\n            }\n            //第三部分第四小节\n            if (e != null) { // existing mapping for key\n                V oldValue = e.value;\n                if (!onlyIfAbsent || oldValue == null)\n                    e.value = value;\n                afterNodeAccess(e);\n                return oldValue;\n            }\n        }\n        ++modCount;\n        //第四部分\n        if (++size > threshold)\n            resize();\n        afterNodeInsertion(evict);\n        return null;\n    }\n    \n    \n\n看着非常恶心，一行一行来，对着那个流程图来看！\n\n**（1）首先是数据结构**\n\n    \n    \n    Node<K,V>[] tab; Node<K,V> p; int n, i;\n    \n    \n\n前面这个 tab 就是数组，所谓的桶；后面这个 p 与当前插入节点在同一个桶内的节点，或者说就是冲突节点n 代表 tab 的 capacityi\n代表要插入的位置\n\n**（2）第一部分**\n\n    \n    \n    //第一部分\n    if ((tab = table) == null || (n = tab.length) == 0)\n        n = (tab = resize()).length;\n    \n    \n\n这部分就是说，如果当前 map 的数组 table 为 null，或者 tab 的长度为 0 的话，就重新 resize 一个 table 数组，在\nresize 函数内部又新建了一个 table 数组，并赋给 putVal 方法里的 tab。这部分你只需要知道这个就行了，不用知道 resize\n是干什么的，之后扩容会说，这俩一定分开讨论，不要瞎几把弄。\n\n**（3）第二部分**\n\n    \n    \n    //第二部分\n    if ((p = tab[i = (n - 1) & hash]) == null)\n        tab[i] = newNode(hash, key, value, null);\n    \n\n此处就是框图的第二步，表示计算 hash 冲突，通过 (n - 1) & hash 算出位置，为什么要用这种方法算出桶下标的位置？因为 n\n在第一部分已经赋值为容量，其容量是 2 的次幂，所以桶下标不允许超过这个下标，因此需要把 hash\n的高位直接屏蔽掉，相当于求了个余。第二部分就是在说，如果没有发现 hash 冲突，桶内啥都没有，就直接放进去就 ok 了，但是如果存在 hash\n冲突，就转入第三部分。\n\n    \n    \n    // 补充知识：计算机对 2 的次幂求余可用位运算，只对 2 次幂有效！如下例子\n    X & (2^N - 1) // 表示 X 对 2^N 求余\n    // 举一反三：计算机对 2 的次幂求除可用位运算，只对 2 次幂有效，如下例子\n    X >> N // 表示 X 除以 2^N \n    \n    \n\n**（4）第三部分**\n\n    \n    \n    Node<K,V> e; K k; \n    \n\ne 表示已经存在节点，如果 e 不为空说明有旧节点，直接改新值就可以了。\n\n​ **(a) 第三部分第一小节** 第三部分和第二部分是 if else 关系，是判断 hash 冲突的分支，二部分表示无 hash 冲突，三部分表示有\nhash 冲突一 二 三小节是处理 hash 冲突的并列的三个 if-else！\n\n    \n    \n    //第二部分\n    if ((p = tab[i = (n - 1) & hash]) == null)\n        tab[i] = newNode(hash, key, value, null);\n    //第三部分 承上\n    else {\n        Node<K,V> e; K k;\n        //第三部分第一小节\n        if (p.hash == hash &&\n            ((k = p.key) == key || (key != null && key.equals(k))))\n            e = p;\n    \n    \n\n第 8 ~ 9 行，第一小节，判断 p（与当前节点在一个桶内的节点）的和要插入的节点的 hash 和 key 是否一致，如果一致则直接替换掉存在的 key\n对应的旧值 e\n\n​ **(b) 第三部分第二小节**\n\n    \n    \n    // 第三部分第二小节\n    else if (p instanceof TreeNode)\n           e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value);\n    \n\n判断插入的数据结构是红黑树还是链表\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/551891984286306304?sourceSSR=users",
        "title": "广联达 笔试 经验贴",
        "content": "# 一、背景简介\n\n公司：广联达 笔试\n\n投递岗位: c++开发工程师\n\n投递时间线: 11.1投递简历，11.8笔试。\n\n# 二、笔试内容\n\n一共2个部分\n\n## 1.选择题\n\n分值：20题*3分=60分\n\n时间：40分钟\n\n基础的八股文：\n\n数据结构\n\n操作系统\n\n计算机网络\n\n  1. 线性规划的对偶规划模型的目标函数\n  2. 并查集的操作\n  3. 基金投资\n  4. 哈夫曼树\n  5. 二叉树：4个叶子节点，{2,3,4,7}，求最小wpl\n  6. 死锁：Process, Wait, Signal\n  7. 高响应比调度算法\n  8. IO多路复用模型中，负责注册文件读、写、异常等事件的函数是\n  9. HTTP服务器响应消息\n  10. 类的定义：friend\n  11. 阅读程序\n  12. 阅读程序：构造函数，析构函数，new, delete, static，继承\n  13. 阅读程序：递归\n  14. 阅读程序：存储在栈上的变量\n  15. 阅读程序：构造函数，析构函数，继承\n  16. 阅读程序：构造函数，析构函数，继承\n  17. 引用\n  18. 阅读程序：类：继承：public, protected, private\n  19. 阅读程序：重载\n  20. 阅读程序：static\n\n## 2.编程题\n\n分值：2题*20分=40分\n\n时间：60分值\n\n### 1.小明送外卖\n\n输入：\n\nn(1<=n<=50000): 订单数量\n\ns[i]：订单派送时间。\n\nt[i]：订单往返时间。\n\na[i]：订单收益\n\n输出：\n\n求最大收益。\n\n### 2.展示所有英雄外观\n\n输入：\n\n先输入一个整数 '''n'''\n\n接着，输入n个整数。\n\n输出：\n\n使所有英雄外观相同的最小步数\n\n# 三、总结反思\n\n1.多注重基础的八股文\n\n2.注重常见算法\n\n3.注重将题目建模的能力\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/545973734230831104?sourceSSR=users",
        "title": "小米面经",
        "content": "小米整个流程还是相当快的，虽然等的也会着急。\n\n9.18投简历\n\n9.20笔试\n\n9.25简历评估，打电话问愿意考虑安卓吗。自己从今年二月份才开始接触java，从hello\nword开始，这半年疫情好转，出差压力很大，一半时间在出差。java其实学的真一般，springboot到头了，没实习没项目，瑞吉外卖充门面，经历过一些大厂一面，也知道自己水平离要求有差距，所以安卓也好，web也好我觉得都挺好。\n\n9.28一面。1小时40分，面试官人很好，给我讲了好多在小米学习的展望。\n\n10.12二面。1小时20分，感觉自己答得其实很一般，面试官还是很好，详细讲述了可以在小米可以学到做的什么，以及新人如何培养。\n\n10.17三面（还是交叉面呢）。40多分钟吧，其实面前压力很大，因为我问过小米是只有二面的，三面是不是因为自己前面表现得不够好呢，面的时候也是问了一些基础问题，后面又是一些性格问题之类的吧，原来不是纯业务面试。\n\n10.23 打电话了。base南京，希望认识更多好homie。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/525451151773270016?sourceSSR=users",
        "title": "华为OD机试 欢乐的周末",
        "content": "题目描述\n\n小华和小为是很要好的朋友，他们约定周末一起吃饭\n\n通过手机交流，他们在地图上选择了多个聚餐地点(由于自然地形等原因，部分聚餐地点不可达)求小华和小为都能到达的聚餐地点有多少个?\n\n输入描述\n\n第一行输入m和n，m代表地图的长度，n代表地图的宽度第二行开始具体输入地图信息，地图信息包含:\n\n0 为通畅的道路\n\n1 为障碍物 (且仅1为障碍物)\n\n2 为小华或者小为，地图中必定有且仅有2个(非障碍物)\n\n3 为被选中的聚餐地点 (非障碍物)\n\n输出描述\n\n可以被两方都到达的聚餐地点数量，行未无空格\n\n用例1\n\n输入\n\n4 4\n\n2 1 0 3\n\n0 1 2 1\n\n0 3 0 0\n\n0 0 0 0\n\n输出\n\n2\n\n说明\n\n第一行输入地图的长宽为4，4，接下来4行是地图2表示华为的位置，3是聚餐地点，图中的两个3，小华和小为都可到达，所以输出2\n\n用例2\n\n输入\n\n4 4\n\n2 1 2 3\n\n0 1 0 0\n\n0 1 0 0\n\n0 1 0 0\n\n输出\n\n0\n\n    \n    \n    #include <bits/stdc++.h>\n    using namespace std;\n    int m, n;\n    #include <bits/stdc++.h>\n    using namespace std;\n    int m, n;\n    void dfs(vector<vector<int>> v,int x,int y, vector<vector<int>>&point, vector<vector<int>> &point2) {\n    \tif (x<0||y<0||x>=m||y>=n||v[x][y]==1||point2[x][y]==1) {\n    \t\treturn;\n    \t}\n    \tif (v[x][y] == 3&&point2[x][y]==0) {\n    \t\tpoint[x][y]++;//访问次数加一\n    \t\t\n    \t}\n    \tpoint2[x][y] = 1;//该点已访问过\n    \tdfs(v, x+1, y,point,point2);\n    \tdfs(v, x, y+1, point, point2);\n    \tdfs(v,x-1, y,point, point2);\n    \tdfs(v, x, y-1, point, point2);\n    }\n    int main() {\n    \tcin >> m >> n;\n    \tint sum=0;\n    \tvector<vector<int>> hw;\n    \tvector<vector<int>> v(m, vector<int>(n, 0));\n    \tvector<vector<int>> point(m,vector<int>(n,0));//记录值为3的位置被访问次数，如果大于等于二说明两人均可以到达\n    \tvector<vector<int>> point1(m, vector<int>(n, 0));//记录当前点是否被访问过的二维数组（小华用）\n    \tvector<vector<int>> point2(m, vector<int>(n, 0));//记录当前点是否被访问过的二维数组（小为用）\n    \tfor (int i = 0; i < m; i++) {\n    \t\tfor (int j = 0; j < n; j++) {\n    \t\t\tcin >> v[i][j];\n    \t\t\tif (v[i][j] == 2) {\n    \t\t\t\thw.push_back({ i,j });//记录值为3的点的位置\n    \t\t\t}\n    \t\t}\n    \t}\n    \tdfs(v,hw[0][0], hw[0][1],point,point1);\n    \tdfs(v, hw[1][0], hw[1][1], point,point2);\n    \tfor (int i = 0; i < m; i++) {\n    \t\tfor (int j = 0; j < n; j++) {\n    \t\t\tif (point[i][j] >=2)\n    \t\t\t\tsum++;\n    \t\t}\n    \t}\n    \tcout << sum;\n    }\n    \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/525427965816029184?sourceSSR=users",
        "title": "腾讯光子后台二面",
        "content": "全程纯聊天50min\n\n1\\. 问我对未来的职业规划，为什么暑期实习不转正\n\n我说喜欢搞技术，不喜欢搞业务等等。然后面试官耐心的讲了这种情况的现实考虑的因素以及实习生基本上没有能力在很短的时间里去改造原先的技术。\n\n2.问了一个简历上的项目\n\n我啰里吧嗦的讲了三分钟，面试官两句话就给我总结清楚了[赞]。觉得自己的表达能力属实堪忧，但是觉得概况的很简单的话，会让面试官觉得工作量很少，做的很简单，这个好难取舍[牛泪]。\n\n3\\. 问导师对我赞赏的三个地方，以及不足的地方。\n\n不知道这环节为什么让面试官觉得我工作没做好[笑cry]\n\n4\\. 因为前面几次面试写过题了，所以这次连题都没写。\n\n总结：面试官很不错，逻辑很清晰，帮我总结回答，但是我估计是凉了[掉小珍珠了]。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/525057873135534080?sourceSSR=users",
        "title": "京东笔试",
        "content": "京东笔试 就A了一道\n\n第二道就是简单的模拟啊 不知道为什么一个测试用例都不能通过\n\n我的思路是\n\n首先看两个物种是否相同 相同回合直接结束\n\n两个都没有暴露 回合结束\n\n不同的话 第一种情况是人的暴露了 直接开始战斗\n\n第二种情况 人没有暴露 兽暴露了 决策后战斗 兽就死\n\n靠 正准备写第三种情况 有一方已经死了也直接回合结束 才想起来代码里面没写\n\n接着是第三题 背包问题 带有条件的背包问题 自己写的用例都过了 测试用例只有百分之五\n\n    \n    \n    import java.util.Scanner;\n    \n    // 注意类名必须为 Main, 不要有任何 package xxx 信息\n    public class Main {\n        public static void main(String[] args) {\n            Scanner in = new Scanner(System.in);\n            // 注意 hasNext 和 hasNextLine 的区别\n            int N = in.nextInt();\n            int T = in.nextInt();\n            int[] t1 = new int[N];\n            int[] t2 = new int[N];\n            int[] s1 = new int[N];\n            int[] s2 = new int[N];\n            for(int i = 0; i < N; i ++){\n                t1[i] = in.nextInt();\n                s1[i] = in.nextInt();\n                t2[i] = in.nextInt();\n                s2[i] = in.nextInt();\n            }\n            int[] ans = solute(N, T, t1, t2, s1, s2);\n            for(int i = 0; i < N; i ++){\n                if(ans[i] == -1){\n                    System.out.print(\"F\");\n                }else if(ans[i] == 1){\n                    System.out.print(\"B\");\n                }else{\n                    System.out.print(\"A\");\n                }\n            }\n        }\n    \n        public static int[] solute(int N, int T, int[] t1, int[] t2, int[] s1, int[] s2){\n            int[] ans = new int[N];\n            int[][][] res = new int[T + 1][N][N];\n            // 还是背包问题\n            int[][] dp = new int[T + 1][N];\n            // dp[i][j] i时间内代表前几门课中可以拿到的最高分\n            for(int i = 1; i <= T; i ++){\n                for(int j = 0; j < N; j ++){\n                    //两种情况装第一个或者装第二个 或者都不装\n                    int price1 = 0;\n                    int price2 = 0;\n                    int price3 = 0;\n                    if(j == 0){\n                        if(i - t1[j] >= 0){\n                            price1 = s1[j];\n                        }\n                        if(i - t2[j] >= 0){\n                            price2 = s2[j];\n                        }\n                    }else{\n                        if(i - t1[j] >= 0){\n                            price1 = dp[i - t1[j]][j - 1] + s1[j];\n                        }\n                        if(i - t2[j] >= 0){\n                            price2 = dp[i - t2[j]][j - 1] + s2[j];\n                        }\n                        price3 = dp[i][j - 1];\n                    }\n                    int max = Math.max(price1, price2);\n                    max = Math.max(max, price3);\n                    if(max == price3){\n                        if(j > 0){\n                            res[i][j] = res[i][j - 1];\n                        }\n                        res[i][j][j] = -1;\n                    }else if(max == price2){\n                        ans[j] = 1;\n                        if(j > 0){\n                            res[i][j] = res[i - t2[j]][j - 1];\n                        }\n                        res[i][j][j] = 1;\n                    }else{\n                        ans[j] = 2;\n                        if(j > 0)\n                            res[i][j] = res[i - t1[j]][j - 1];\n                        res[i][j][j] = 2;\n                    }\n                    dp[i][j] = max;\n                }\n            }\n            return res[T][N - 1];\n        }\n    }\n    \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/524986697252155392?sourceSSR=users",
        "title": "柠檬微趣客户端一面 2023.08.18",
        "content": "项目：\n\n  1. 简单说一下，你对于它的接口的设计以及初始化这边的一个思路吗？\n  2. 传统的标准库里的 Malloc 为什么没有去做多线程下性能优化的设计呢？\n\n基础知识：\n\n  1. 介绍stl容器（从底层实现划分，从功能上划分）\n  2. map 的话，我希望随机访问其中某一个元素，我该怎么操作呢？有没有方法去对这种就是我要求的这样一个真正的随机访问操作进行一个设计，就是在允许一定的随机失败的角度考虑。就是我允许你有一定的几率随机是失败的，这样的前提下，有没有方法去设计一个对于 map 的，就是真正意义上不需要走 key 的一个随机访问的需求？\n  3. 从迭代器的角度想的话， map 可以去实现吗？\n  4. map VS u_map，简单阐述一下它的优劣，或者说适用场景的区别\n  5. 哈希表的实现在空间开销上与红黑数可以进行一个简单对比\n  6. 计算一下 hash 表的对于空间开销方面的一个量级？或者说实际的一个具体的量级，就是哈希表的空间开销的一个整体的复杂度，与插入元素 n 成正比，是吗？还有其他因素吗？\n  7. 极端场景下链表变为搜索树结构，优化查找性能\n  8. 红黑树插入节点的复杂度是多少，即树的调整复杂度是多少\n  9. 从0个节点开始向红黑树插入n个节点，总复杂度是多少\n  10. 快排平均时间复杂度的nlogn是怎么得来的\n  11. 栈的大小限制\n  12. 栈的递归次数取决于什么\n\n算法题： 拓扑排序升级版：\n给多个依赖关系，如要编译A需先编译B，最后问编译x文件，整个编译链条是什么，注意是否有环，无关的文件无需编译。面试官说最简单的可以bfs进行处理\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/524962175459266560?sourceSSR=users",
        "title": "2023 小红书笔试题 0806",
        "content": "笔试时间：2023年8月6日 秋招\n\n# 第一题\n\n### 题目：小红书推荐系统\n\n小红书有一个推荐系统，可以根据用户搜索的关键词推荐用户希望获取的内容。现在给定小孩的搜索记录（记录是分词后的结果），我们认为当一个单词出现的次数不少于3次时。该单词为“用户期望搜索的单词“，即为关键词。请你根据小红的记录，输出小红的用户画像对应得所有关键词。\n\n### 输入描述\n\n一行字符串。仅由小写字母和空格组成。代表小红的搜索记录。\n\n字符串长度不超过100000.\n\n### 输出描述\n\n小红所有的关键词。每行输出一个。你需要按照搜索频次从高到低输出。频次相同的，你需要按字典序升序输出。\n\n### 样例输入\n\n> kou red game red ok who game red karaoke yukari kou red red nani kou can\n> koukou ongakugame game\n\n### 样例输出\n\n> red\n>\n> game\n>\n> kou\n\n### 参考题解\n\n哈希表判断每一个字符串的出现次数，判断即可。\n\nC++：\n\n    \n    \n    #include <iostream>\n    #include <unordered_map>\n    #include <vector>\n    #include <sstream>\n    \n    int main() {\n        std::string input;\n        std::getline(std::cin, input);\n        std::istringstream iss(input);\n        std::string word;\n        \n        std::unordered_map<std::string, int> cnts;\n        \n        while (iss >> word) {\n            cnts[word]++;\n        }\n    \n        for (const auto& pair : cnts) {\n            if (pair.second >= 3) {\n                std::cout << pair.first << std::endl;\n            }\n        }\n    \n        return 0;\n    }\n    \n    \n\nJava：\n\n    \n    \n    import java.util.HashMap;\n    import java.util.Scanner;\n    \n    public class Main {\n    \n        public static void main(String[] args) {\n            Scanner in = new Scanner(System.in);\n            String[] lines = in.nextLine().split(\" \");\n            HashMap<String, Integer> cnts = new HashMap<>();\n            for (String line : lines) {\n                cnts.put(line, cnts.getOrDefault(line, 0)  + 1);\n            }\n    \n            for (String s : cnts.keySet()) {\n                if (cnts.get(s) >= 3) {\n                    System.out.println(s);\n                }\n            }\n    \n        }\n    \n    }\n    \n\nPython：\n\n    \n    \n    from collections import Counter\n    \n    line = input()\n    words = line.split()\n    cnts = Counter(words)\n    \n    for word, count in cnts.items():\n        if count >= 3:\n            print(word)\n    \n    \n\n# 第二题\n\n### 题目：小红的分享日常\n\n小红书很喜欢前往小红书分享她的日常生活。已知她生活中有n个事件，分享第i个事件需要她花费ti的时间和hi的精力来编辑文章，并能获得ai的快乐值。\n\n小红想知道，在总花费时间不超过T且总花费精力不超过H的前提下，小红最多可以获得多少快乐值？\n\n### 输入描述\n\n第一行输入一个正整数n，代表事件的数量。\n\n第二行输入两个正整数T和H，代表时间限制和精力限制。\n\n接下来的n行，每行输入三个正整数ti,hi，ai，代表分享第i个事件需要花费ti的时间、hi的精力，收获ai的快乐值。\n\n### 输出描述\n\n一个整数，代表小红最多的快乐值\n\n### 样例输入\n\n> 2\n>\n> 2 2\n>\n> 1 3 3\n>\n> 3 1 4\n\n### 样例输出\n\n> 0\n\n显然，小红无法分享任何事件\n\n### 参考题解\n\n动态规划。\n\n经典的01背包问题\n\nC++：\n\n    \n    \n    #include <iostream>\n    #include <vector>\n    \n    int main() {\n        int n, T, H;\n        std::cin >> n >> T >> H;\n    \n        std::vector<int> t(n + 1);\n        std::vector<int> h(n + 1);\n        std::vector<int\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/524952351581528064?sourceSSR=users",
        "title": "CVTE视源股份 技术支持  技术初面面经",
        "content": "更新，二面已更新  \n  \n我的面试大概二十分钟，目前还不知道能不能进二面呜呜呜[来个offer]  \n  \n流程：  \n自我介绍  \n有何优势  \n经历介绍  \n岗位了解  \n技术问题  \n其他问题  \n  \n技术问题：  \n1.如果客户很难缠、很刁钻你会怎么办？  \n2.设备如果人工损坏是不保修的，但是有个客户来维修，你发现他的屏幕有撞击点，而他坚持说自己没有摔过，你该如何应对？  \n3.如果你发现客户设备某硬件需要更换，但只能更换某特定型号且该型号价格比用户预期价格高出不少，你会怎么跟客户说明？  \n  \n其他问题：  \n1.你经历中有没有遇到什么重大决策，你又是怎么处理的呢？  \n2.你有什么优势比其他人更胜任这个岗位吗？  \n3.你对这个岗位会经常出差有怎样的看法呢？  \n4.你有什么对岗位对公司等要问的问题吗？  \n  \n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/524863699388018688?sourceSSR=users",
        "title": "2024规控算法/嵌入式秋招面经（持续更新）",
        "content": "背景：985机械本加计算机工程海硕，一段机械设计实习+一段车企软开实习，投自动驾驶算法/嵌入式岗\n\n项目：毕设的树莓派机器人，一个规划算法的C++实现，自己写的网页数据库+前后端app，还有stm32和物联网小项目\n\n主要放面试经历，碰到的笔试题就不放了\n\n只投上海的\n\n===================================================================================\n\n2024.8.25更新\n\n一个月投了30来家，有互联网大厂、新能源车企、科技外企、自动驾驶公司\n\n旷视小米未来星、极氪和特斯拉直接拒了简历呃呃，可能有的算法岗还是要求科研经历的\n\n西门子：\n\nai面，问了很多行为面试的问题，参考其他人的差不多，等结果中\n\n合合：\n\n一面hr面，问了点基本情况，职业规划，对岗位期望\n\n文远weride：一面\n\n自我介绍，为什么搞自动驾驶，具体哪个方向（规控）\n\n全程问项目，讲一下a*，为什么后面用hybrid a* 优化，比经典a*多了啥，h函数的设计，h如何影响算法表现。可能看我没研究很深就问了hybrid\na基础、原理之类的。\n\n手撕求四次方根，用了分类讨论加二分查找试根法，没继续追问，反问，结束。\n\n================================================================================\n\n2024.9.8更新\n\n合合后端技术一面挂：\n\n线上群面，纯问八股，计网、操作系统、没用过GO就问了C++、git、linux场景题、数据结构算法知识、ajax、nosql数据库用过没、redis用过没，了解哪些设计模式，一些业务场景题，只能说技术栈这块确实不熟\n\n速腾规划算法一面：\n\n直接做题，二维版的跳跃游戏那道，用类似动规的方法递推了一下，有一部分tc超时了。。因为没时间了就说了下可能用贪心优化（？）后来想了想用图搜索好像就能做\n\n联想机器人开发一面：\n\n问了项目，感觉是想招电机控制算法这块的，玩过一点但基本不懂，两周后回复（大概率寄）\n\n希望下周有外企的更新。。。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/524680735471558656?sourceSSR=users",
        "title": "2024秋招腾讯wxg前端一面面经（只招实习转正）",
        "content": "## 前言\n\n总用时：1h 55min **注意事项：wxg只收实习转正，需要至少先实习60天，地点在广州部门，所以需要确定好时间事宜**\n\n被拷打，被问一个问题想至少一分钟多，本来紧张组织语言就很灾难，又特别难特别煎熬，绞尽脑汁，完全没问html和css，时长很久所以有一些不记得了，但是因为完全顺着逻辑就问下去了，所以能想起来大部分。\n\n问了很多底层、操作系统等等的（真的快忘完了，复习也没复习到那些部分，也有可能一开始就没特别搞清楚），上来手撕三道算法题，感觉把毕生所学都用上了，虽然绩点较高但知识没有深入的后果be\nlike\n\n## 流程\n\n  0. 面试官自我介绍，我自我介绍\n  1. 手撕算法：快速排序，实现 + 讲解思路，时间复杂度是多少，怎么计算的时间复杂度\n  2. 手撕算法：二叉树从上到下取和最多线路的和（且取的每个元素不能是相邻两个叶子节点），时间复杂度\n  3. 手撕算法：两个二叉树判断相同，数据结构如下，时间复杂度，还有其他方法吗？\n\n    \n    \n    TreeNode {\n    \tleft: Node\n    \tright: Node\n    \tval: Number\n    }\n    \n\n  4. 实际开发中为什么要避免用递归？递归会导致什么问题？\n  5. 堆栈溢出是什么溢出？什么是堆，什么是栈？这里的堆栈和操作系统的堆栈一样吗？\n  6. malloc()函数或数据回收会把数据放进堆还是栈？\n  7. 栈存什么，堆存什么？栈是先进后出还是先进先出？队列呢？\n  8. 你对你简历上写的技术栈哪个比较熟悉？\n  9. 读过Vue源码吗？读的文档还是源码？\n  10. 场景：Vue中设置一个`data: count`（初始0），页面中有一个 `{{ count }}`，还有一个按钮点一下就触发handler函数，页面上的count会怎么变化？为什么？\n\n    \n    \n    handler() {\n       for (let i=0; i<100; i++) {\n           this.data = i\n       }\n    }\n    \n\n  10. 什么是`$nextTick`，怎么判断什么时候我要进行`$nextTick`了\n  11. 什么是EventLoop？什么是宏任务，什么是微任务？怎么执行的？\n  12. 那么EventLoop的机制是什么？假如你开发Vue，我怎么知道有没有微任务？\n  13. 宏任务有哪些？\n  14. `let i = 1;` 是什么任务？\n  15. JS有几个线程？\n  16. 既然JS只有一个线程，那么怎么实现EventLoop的？怎么异步化的？为什么能实现异步？EventLoop里面有哪些任务，含有`let i = 1;`这种任务吗？同步任务是EventLoop里面的吗？是超脱于EventLoop里的吗？\n  17. 进程是什么？线程是什么？进程和线程的关系？\n  18. 多核cpu多线程的情况下，线程用的是同一个CPU吗？\n  19. 线程之间怎么通信？进程之间怎么通信？\n  20. 场景：有线程A中一个地址指向数据，线程B可以直接拿这个数据吗？\n  21. 什么是信号量？干嘛的？\n  22. 什么是锁？有哪些锁？\n  23. 怎么保证线程安全？\n  24. 互斥锁实现机制？\n\n## 算法题实现思路\n\n  1. 我写的如下，时间复杂度 `O(nlogn)` ，说了感觉可用期望算，最后不会算，只能大概讲一下\n\n    \n    \n    pivot = arr[Math.floor(arr.length / 2)];  // 以中点元素作为基数的话\n    quicksort(arr, pivot)\n    \n    function quickSort(arr, pivot) {\n        if (arr.length <= 1) {\n            return arr;\n        }\n        const left = [];\n        const right = [];\n        for (const ele of arr) {\n            if (ele < pivot) {\n                left.push(element);\n            } else if (ele > pivot) {\n                right.push(ele);\n            }\n        }\n        return [...quickSort(left), pivot, ...quickSort(right)];\n    }\n    \n\n  2. 递归做的，时间复杂度 `O(2^n)`\n\n    \n    \n    // nums的结构类似 [3, 2, 3, 3, 1]\n    function rob(nums, start, end) {\n        if (start > end) {\n            return 0;\n        }\n        \n        // 递归从最下面的叶子节点网上加\n        const curHouse = nums[start] + rob(nums, start + 2, end);\n        const nextHouse = rob(nums, start + 1, end);\n        if(curHouse > nextHouse){\n            return curHouse;\n    \t}\n    \treturn nextHouse;\n    }\n    \n\n  3. 递归做的，时间复杂度 `O(n)` ，其他方法说了一下推栈做（弄成数组的结构），但没成功写出来\n\n    \n    \n    /**\n    \tTreeNode {\n    \t\tleft: Node\n    \t\tright: Node\n    \t\tval: Number\n    \t}\n    */\n    function compare1(tree1, tree2) {\n    \tif(tree1 === null && tree2 === null) {\n    \t    return true;\n    \t}\n    \tif((tree1 === null && tree2 !== null) || (tree1 !== null && tree2 === null)) {\n    \t    return false;\n    \t}  \n    \treturn (tree1.value === tree2.value \n    \t\t&& compare1(tree1.left, tree2.left) \n    \t  \t&& compare1(tree1.right, tree2.right));\n    }\n    \n\n## 小结\n\n答得稀烂，看似答上其实没答上，瞎掰都掰不出来，去世\n\nCSDN也发了这个：[点击跳转CSDN -\n2024秋招腾讯wxg前端一面面经（只招实习转正）](https://gw-c.nowcoder.com/api/sparta/jump/link?link=http%3A%2F%2Ft.csdn.cn%2FyLEEK)\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/524680349259923456?sourceSSR=users",
        "title": "腾讯 WXG 公众号&小程序团队实习一二面",
        "content": "### **腾讯 WXG 实习公众号 &小程序团队一面**\n\n自我介绍\n\n拷打项目\n\n数据库事务的四大特性\n\n有哪些隔离等级\n\n一致性？还有别的地方有类似的概念吗？\n\n进程和线程的区别？什么时候使用多线程和多进程？\n\n单核情况下多线程会有线程安全问题吗？\n\n说一说你简历里觉得有亮点的项目\n\n**算法题： k个一组翻转链表：说了用栈，还有更优解吗？递归 O(1)，共享屏幕自己写链表结构体输入输出**\n\n**智力题：两个人拿石头，一次能拿一到三个，石头数量是多少能确保先手的能赢**\n\n**反问：评价？实习转正？两个月发起考核**\n\n**平台：腾讯会议**\n\n**时长：90min**\n\n**总结：项目还是要经得起拷打，里面的细节跟拓展优化都要有思路，时隔五个月第一场面试，很多项目细节都忘了。**\n\n****\n\n### 腾讯 WXG 实习公众号&小程序团队二面\n\n**算法题：**\n\n  1. **S 中有10亿个不重复的数字，找出与 x 的汉明距离小于 3 的数字数量？优化？**\n  2. **求两个数组的元素差值最小值？别的方法？**\n\n项目？高并发体现？\n\n怎么解决重复消费问题？\n\n怎么做分库分表的？\n\n服务器压测？\n\n**时长：90min**\n\n**反问：面试官说第一题叫我去搜什么论文，难绷；后续流程？两技术面；（不想继续问了感觉凉凉**\n\n**平台：电话面试，发腾讯文档给你做题，约定时间打电话过来看做的怎么样**\n\n**总结：难顶，感觉面试官没什么兴趣，纯纯 KPI**\n\n****\n\n**应该是实习离职后的第一家面试，可能确实表现不好，但是打电话发文档做题也太恶心了**[赞]\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/524665361262829568?sourceSSR=users",
        "title": "2023暑期实习-大数据开发面试-美团外卖实时-二面",
        "content": "1、问系统开发的项目？\n\n2、问研究生课程？\n\n3、算法一：二叉树根节点到叶子节点的所有路径和\n\n4、算法二：层序遍历\n\n5、用java能写出来不\n\n6、垃圾回收机制\n\n7、抽象类和接口区别\n\n8、3NF\n\n9、索引有啥用\n\n10、都有啥索引\n\n11、进程和线程\n\n12、栈和堆是啥\n\n13、对象什么时候会被回收，如何被回收？\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/524639312294522880?sourceSSR=users",
        "title": "云徙科技公司(广州)前端实习面经",
        "content": "一、时长：大概十五分钟\n\n二、内容：\n\n1、HTML5中，什么是语义化？只答了有语义化标签，面完试了才想起来语义化的作用是：更适合搜索引擎检索和抓取。\n\n2、什么是HTML的缓存功能。\n\n3、CSS的常用布局有哪些？只答了div+css布局，flex布局不会。\n\n4、定位是什么？介于一个应用场景提问：使用的是相对定位还是绝对定位。\n\n5、ES6的新特性包含哪些？\n\n6、箭头函数的作用是？没回答上来。\n\n7、如何用es5来实现模板字符串: `1234${变量}567`? 没回答上来。\n\n8、什么是AJAX?\n\n9、什么是promise？\n\n三、备注：\n\n今天面的，公司位于黄埔区，离学校好远，感觉自己回答得一般般，叫我回去等通知，1-2天内会出结果，公司所用技术栈为：\n\nreact。\n\n"
    },
    {
        "url": "https://www.nowcoder.com/discuss/524638445055062016?sourceSSR=users",
        "title": "美团 Java 一面+二面 面经【发面经攒人品】【一面已更】",
        "content": "刚刚面试完，没啥心情学习了。周末还有俩笔试，一个面试要搞[牛泪][牛泪][牛泪]。写个面经攒攒人品，希望OC🥰🥰。\n\n一面（8.22）\n\n还没来得及复盘，等我下周摸鱼的时候复盘一下写一下。\n\n  * 算法题：根据二叉树的前序和中序顺序构建二叉树，并且求出这个二叉树的右视图。\n\n力扣题号：105 + 119，递归 + 层序 秒了。\n\n  * 问项目\n  * 登录的时候，写redis缓存失败了怎么处理\n  * 了解单点登录吗（SSO）可以下来了解一下。其实就是解决多个模块的重复登录问题。\n  * 集群环境下如何保证服务器内存信息的一致性。（跟缓存数据库一样，定时刷新，给一个过期时间）\n  * 防超卖在Java代码层面怎么实现的。（使用Lua脚本来保证 判断库存 和 扣减Redis库存 的原子性）\n  * 怎么提高MySQL库存扣减的效率。（加索引）\n  * 八股：\n  * 如何避免使用 Redis 导致的数据不一致。（旁路缓存模式，删缓存，改数据库）\n  * 了解有哪些加密算法，分为哪些类？（当时脑抽了没想起来，现在想来应该是对称加密，非对称加密，哈希加密三类）\n  * MySQL事务是用来干嘛的呢？（保证ACID里面的A，原子性）\n  * 事务的隔离级别有哪些？（RU，RC，RR，可串行化）\n  * mysql中有哪些锁？（全局锁，表锁，行锁；表锁分为表锁和意向锁，行锁分为记录锁，间隙锁，临键锁）\n  * 可重复读级别下能防止幻读吗？（按SQL定义的隔离级别的定义，可重复读是不能解决幻读的；但是Innodb引擎通过临键锁 （Next-Key Lock） 和 MVCC 机制来解决幻读，一个应对当前读，一个应对快照读。）\n  * MySQL的索引用的什么数据结构？有什么区别？有什么优点？（经典八股）\n  * 分析一下索引失效的场景。（联合索引的最左匹配原则，隐式的类型转换）\n  * MySQL的MVCC多版本控制了解吗？（使用 隐藏字段、Read View、undo log 来实现的快照读多版本控制）\n  * undolog 和 redolog 详细讲一讲（undo log 可以实现 MVCC，同时也是事务回退的保证；redolog主要是一个崩溃的恢复以及bufferpool 的刷盘）\n  * 了解 SQL 注入吗？一般用什么来防止？（SQL拼接的时候自己拼接条件；仿照Mybatis框架的操作，先生成语句再参数化输出）\n  * Java的HashMap和TreeMap有什么区别？（TreeMap 主要是实现了Map节点的有序储存，使用树状结构来保证）\n  * HashMap 的哈希冲突是怎么解决的？（拉链法 + 红黑树）\n  * AVL 和 红黑树的区别，为什么不用AVL树？（AVL 主要适用于查找密集型，红黑树使用插入密集型）\n  * HashMap 高并发下会出现什么问题？（成环，数据丢失）\n  * ConCurrentHashMap 和 HashMap 的区别？（源码自己去看）\n  * Java 线程池了解吗？（两种创建方式+核心参数）\n  * 反问\n  * MySQL题：\n  * 可重复读下，有两个操作，一个是Insert，一个是delete，判断一下加锁的情况？\n  * 当时没有做出来，后面学了一下，应该是看两个操作的前后情况：如果是先 Insert ，那么应该在Insert的前后两条数据行之间加上间隙锁，然后看 delete 的值，如果 delete 的值正好被这个间隙锁锁住了，那么delete就等待，不然就执行。\n  * 先 delete 可以同理分析。例如 数据 1,2,3 我们delete 3 再 insert 5，怎么加锁的？delete 3 会给 3 加上一个记录锁，然后 insert 5，会加一个（3，正无穷）的临键锁。不冲突，所以可以并发执行\n\n二面（8.25）\n\n  * 开始就问项目，场景题特别多，问了可能整个面试时间的一半 eg. 防超卖的解决\n\n* 中间夹杂了一些八股，例如 B 树 和 B+ 树的区别和优点\n* Redis 为什么这么快，能支持1w 左右的 QPS\n* ThreadLocal 了解吗？底层原理，使用 ThreadLocal 会造成什么问题，会导致内存泄漏吗？\n* 然后问了些我的性格方面的东西：优缺点 + 举一两个例子 （话说这个不应该是 HR 面问的嘛）\n* 算法：两个线程循环打印 123 ，456，789 （GG，之前还在B站看过，结果到自己写的时候就蒙蔽了）\n* 反问\n\n其实没啥底，感觉一面表现不错，二面感觉算法题没做出很伤。😣😣😣😣😣😣😣\n\n"
    }
]